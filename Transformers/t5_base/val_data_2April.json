[
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?label WHERE { brick:Steam_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the narrower term under Radioactivity Concentration?\nentitybrick:Radioactivity_Concentration",
    "target_text": "SELECT ?narrower WHERE { brick:Radioactivity_Concentration skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Water Differential Temperature Setpoint?\nentitybrick:Water_Differential_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Water_Differential_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04 hanging out?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Outside Air Wet Bulb Temperature Sensor have?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the label and definition for Conversion efficiency?\nentitybrick:conversionEfficiency",
    "target_text": "SELECT ?label ?definition WHERE { brick:conversionEfficiency rdfs:label ?label; skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Wardrobe represent?\nentitybrick:Wardrobe",
    "target_text": "SELECT ?definition WHERE { brick:Wardrobe skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Effective Zone Air Temperature Setpoint?\nentitybrick:Effective_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Zone_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air temperature high reset setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Cooling Start Stop Status have?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.47 located?\nentitybldg:dust5.47",
    "target_text": "SELECT ?location WHERE { bldg:dust5.47 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the contact sensor in the Sauna.\nentitybldg:Sauna \n brick:Contact_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Contact_Sensor ; brick:hasLocation bldg:Sauna ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of Illuminance Sensor 5.03 based on its most recent data.\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'BQ-PER-M3' an applicable unit for RadonConcentration?\nentitybrick:Radon_Concentration",
    "target_text": "ASK WHERE { brick:Radon_Concentration qudt:applicableUnit unit:BQ-PER-M3 . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Min Limit?\nentitybrick:Min_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Gatehouse represent?\nentitybrick:Gatehouse",
    "target_text": "SELECT ?definition WHERE { brick:Gatehouse skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water discharge temperature sensor in the Music Room.\nentitybldg:Music_Room \n brick:Medium_Temperature_Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Photovoltaic Array?\nentitybrick:Photovoltaic_Array",
    "target_text": "SELECT ?label WHERE { brick:Photovoltaic_Array rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cooling Tower Fan classified in the ontology?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Tower_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Rated Minimum Current Input is called.\nentitybrick:ratedMinimumCurrentInput",
    "target_text": "SELECT ?label WHERE { brick:ratedMinimumCurrentInput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the current zone air control temperature value in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in NO2 from Sensor 5.02 could be used to forecast future maintenance needs?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current operating zone reheat valve command in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Current Sensor.\nentitybrick:Current_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Current_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the FCU have a skos:definition?\nentitybrick:FCU",
    "target_text": "SELECT ?definition WHERE { brick:FCU skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.04 in our smart building?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Max Unoccupied Cooling Discharge Air Flow Setpoint Limit in BrickSchema?\nentitybrick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for  Alcohol Vapor MQ3 Gas Sensor  5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water return flow sensor in the Utility Room.\nentitybldg:Utility_Room \n brick:Hot_Water_Return_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Return_Flow_Sensor ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Reheat Hot Water System a subclass of?\nentitybrick:Reheat_Hot_Water_System",
    "target_text": "SELECT ?parent WHERE { brick:Reheat_Hot_Water_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why was Supply Water Flow Setpoint deprecated?\nentitybrick:Supply_Water_Flow_Setpoint",
    "target_text": "SELECT ?message WHERE { brick:Supply_Water_Flow_Setpoint brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average zone air control temperature setpoint for RM107B in the past 10 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Cooling Tower Fan'.\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantity associated with the Valve Position Command?\nentitybrick:Valve_Position_Command",
    "target_text": "SELECT ?quantity WHERE { brick:Valve_Position_Command brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  Air Quality Level 5.02 is located.\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average cooling demand sensor in the north west zone.\nentitybldg:north-west-zone \n brick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Cooling_Demand_Sensor ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature high reset setpoint in the south side.\nentitybldg:south-side \n brick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:south-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the damper position setpoint in the Floor 1.\nentitybldg:Floor_1 \n brick:Damper_Position_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Damper_Position_Setpoint ; brick:hasLocation bldg:Floor_1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of a Breaker Panel?\nentitybrick:Breaker_Panel",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Breaker_Panel rdfs:subClassOf ?superclass . brick:Breaker_Panel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  NO2 sensor5.05 is in use and what is its installation spot?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . bldg:NO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the Combustible Gas Smoke MQ2 Sensor  measurements from Sensor 5.02 that might trigger a maintenance alert?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What should be used instead of Supply Water Flow Setpoint?\nentitybrick:Supply_Water_Flow_Setpoint",
    "target_text": "SELECT ?replacement WHERE { brick:Supply_Water_Flow_Setpoint brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Differential Speed Sensor labeled in the ontology?\nentitybrick:Differential_Speed_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Differential_Speed_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class equivalent to Supply Air Smoke Detection Alarm.\nentitybrick:Supply_Air_Smoke_Detection_Alarm",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Smoke_Detection_Alarm owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Leaving Hot Water Temperature Setpoint include Hot Water Temperature Setpoint?\nentitybrick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Leaving_Hot_Water_Temperature_Setpoint rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Water Loss Alarm.\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.25 located?\nentitybldg:sound5.25",
    "target_text": "SELECT ?location WHERE { bldg:sound5.25 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Rain Level Sensor.\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Intrusion Detection Equipment?\nentitybrick:Intrusion_Detection_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Intrusion_Detection_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does PM2.5Concentration represent?\nentitybrick:PM2",
    "target_text": "SELECT ?definition WHERE { brick:PM2.5_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest TVOC  measurement from  TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the preheat discharge air temperature sensor in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Preheat_Discharge_Air_Temperature_Sensor ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Mixed Air Humidity Sensor.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum pump start/stop command value detected for the chiller over the last 3 hours?\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.22?\nentitybldg:notwo5.22",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.22 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Chilled Water Coil.\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Coil brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Max Air Flow Setpoint Limit.\nentitybrick:Max_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter air differential pressure sensor in the Study Room.\nentitybldg:Study_Room \n brick:Filter_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Air_Differential_Pressure_Sensor ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the dimension vector of PhasorAngle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?vector WHERE { brick:Phasor_Angle qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Natural Gas Flow Sensor.\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Frequency Sensor have a brick:hasQuantity reference?\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Frequency_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Leaving Chilled Water Temperature Sensor?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Restroom is a subclass of Room.\nentitybrick:Restroom",
    "target_text": "ASK WHERE { brick:Restroom rdfs:subClassOf brick:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Lockout Temperature Setpoint?\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Cooling Valve?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature deadband setpoint in the central zone.\nentitybldg:central-zone \n brick:Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:central-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Alcohol Vapor MQ3 Gas Sensor  5.05.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for  Air temperature Sensor 5.04.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge chilled water temperature setpoint in the central zone.\nentitybldg:central-zone \n brick:Discharge_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Chilled_Water_Temperature_Setpoint ; brick:hasLocation bldg:central-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class doesSound Noise loudness Sensor  5.03 belong to?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's Formaldehyde Level sensor output compare with other sensors in the building?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is a Contact Sensor?\nentitybrick:Contact_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Contact_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hum5.20 located?\nentitybldg:hum5.20",
    "target_text": "SELECT ?location WHERE { bldg:hum5.20 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Entering Chilled Water Temperature Setpoint?\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the CO  data from Sensor 5.03 for the past year.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does Availability Status fall?\nentitybrick:Availability_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Availability_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of Min Chilled Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes of the Entering Hot Water Temperature Low Reset Setpoint.\nentitybrick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Water Meter a subclass of?\nentitybrick:Water_Meter",
    "target_text": "SELECT ?parent WHERE { brick:Water_Meter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Chilled Water Discharge Flow Setpoint?\nentitybrick:Chilled_Water_Discharge_Flow_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Discharge_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  PM1 particulate matter Level Sensor level recorded by  Sensor 5.03 over the past 24 hours?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Low Supply Air Flow Alarm call itself?\nentitybrick:Low_Supply_Air_Flow_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Low_Supply_Air_Flow_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the Formaldehyde Level sensor located in room 5.04.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Vent Operating Mode Status?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Vent_Operating_Mode_Status rdfs:label ?label . brick:Vent_Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which NO2 sensor is set up in 5.02 and what kind is it?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.02 rdfs:label ?label . bldg:NO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if  Alcohol Vapor MQ3 Gas Sensor  5.03 shows abnormal readings today.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical parameter is managed by the Hot Water Differential Pressure Setpoint, and for which fluid?\nentitybrick:Hot_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Hot_Water_Differential_Pressure_Setpoint brick:hasQuantity ?quantity ; brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Supply' a tag for Occupied Supply Air Flow Setpoint?\nentitybrick:Occupied_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does VAVRM115 feed?\nentitybrick:feeds",
    "target_text": "SELECT ?fed WHERE { bldg:VAVRM115 brick:feeds ?fed . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Booster Fan.\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Booster_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is notwo5.07 located?\nentitybldg:notwo5.07",
    "target_text": "SELECT ?location WHERE { bldg:notwo5.07 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Variable Frequency Drive means.\nentitybrick:Variable_Frequency_Drive",
    "target_text": "SELECT ?definition WHERE { brick:Variable_Frequency_Drive skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.04 and tell me its class.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Illuminance Sensor's purpose?\nentitybrick:Illuminance_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Illuminance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average zone supply air temperature reading for RM107A over the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does VAVRM107B supply?\nentitybrick:feeds",
    "target_text": "SELECT ?room WHERE { bldg:VAVRM107B brick:feeds ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Condenser Water Flow Setpoint?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the power label along with how many units are used to measure it, but only if there are more than 30 units.\nentitybrick:Power",
    "target_text": "SELECT ?label ?unitCount\nWHERE {  brick:Power rdfs:label ?label .  {    SELECT (COUNT(?unit) AS ?unitCount)    WHERE { brick:Power qudt:applicableUnit ?unit . }  }  FILTER(?unitCount > 30)}"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain Gross Area?\nentitybrick:grossArea",
    "target_text": "SELECT ?definition WHERE { brick:grossArea skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which class does the Formaldehyde Level Sensor fall?\nentitybrick:Formaldehyde_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Formaldehyde_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many damper position command measurements were logged for the economizer during the early hours today?\nentitybldg:bldg1.CHW.ECONOMIZER",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.ECONOMIZER ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.14?\nentitybldg:oxy5.14",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.14 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many outside air temperature measurements were logged on AHU 02 during the early hours today?\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is Air Quality sensor 5.03?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Emergency Alarm?\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity of the Wind Speed Sensor.\nentitybrick:Wind_Speed_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Wind_Speed_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.02 to compute an overall Ethyl Alcohol /C2H5CH index.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data for 5.03.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone supply air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date temperature level from sensor 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Chilled Water Differential Pressure Proportional Band Parameter is incorrectly configured?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with an Absorption Chiller.\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?property ?value WHERE { brick:Absorption_Chiller ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a CO2 Differential Sensor?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO2_Differential_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything that is stored about a CO Level Sensor.\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:CO_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types of HVAC systems use Bypass Air Flow Sensors?\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Air_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Space include Location?\nentitybrick:Space",
    "target_text": "ASK WHERE { brick:Space rdfs:subClassOf brick:Location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for   CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of temperature difference does a Chilled Water Differential Temperature Sensor measure?\nentitybrick:Chilled_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Differential_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is  PM2.5 particulate matter Level Sensor 5.02 located?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Temperature Cooling Setpoint include the tag 'Supply'?\nentitybrick:Supply_Air_Temperature_Cooling_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Cooling_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Leaving Water Temperature Alarm a type of temperature alarm?\nentitybrick:Leaving_Water_Temperature_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Temperature_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.01's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.13 located?\nentitybldg:airq5.13",
    "target_text": "SELECT ?location WHERE { bldg:airq5.13 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the skos:definition of Occupancy Percentage?\nentitybrick:Occupancy_Percentage",
    "target_text": "SELECT ?definition WHERE { brick:Occupancy_Percentage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Energy Zone?\nentitybrick:Energy_Zone",
    "target_text": "SELECT ?property ?value WHERE { brick:Energy_Zone ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Static Pressure Setpoint include Static Pressure Setpoint?\nentitybrick:Supply_Air_Static_Pressure_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Setpoint rdfs:subClassOf brick:Static_Pressure_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether Differential Static Pressure is a delta quantity.\nentitybrick:Differential_Static_Pressure",
    "target_text": "ASK { brick:Differential_Static_Pressure qudt:isDeltaQuantity true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Solar Azimuth Angle Sensor measure?\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Azimuth_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for Sound Noise loudness Sensor  from 5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has pir5.24?\nentitybldg:pir5.24",
    "target_text": "SELECT ?room WHERE { bldg:pir5.24 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level fromFormaldehyde Level sensor 5.02 for a specific date, for example 2025-02-15.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Reactive Energy Sensor.\nentitybrick:Reactive_Energy_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Reactive_Energy_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Do we have an alias for the discharge air flow low reset setpoint?\nentitybrick:Discharge_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Flow_Low_Reset_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does an Absorption Chiller fit into?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the NO2 sensor in 5.03, including its category.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . bldg:NO2_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the associated tags for Wing?\nentitybrick:Wing",
    "target_text": "SELECT ?tag WHERE { brick:Wing brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.16 located?\nentitybldg:dust5.16",
    "target_text": "SELECT ?location WHERE { bldg:dust5.16 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow reset setpoint in the Pantry.\nentitybldg:Pantry \n brick:Supply_Air_Flow_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Reset_Setpoint ; brick:hasLocation bldg:Pantry ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all available information about the Sash Position Sensor.\nentitybrick:Sash_Position_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Sash_Position_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What value does the zone supply air temperature sensor show in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is functionally identical to the Max Unoccupied Heating Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class for Supply Air Proportional Gain Parameter.\nentitybrick:Supply_Air_Proportional_Gain_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Proportional_Gain_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current  Air Quality sensor values from Sensor 5.02 compare with historical averages?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time return air temperature value for AHU 01 right now?\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available fromFormaldehyde Level sensor 5.04?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substances for Supply Air Static Pressure Sensor.\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of  PM1 particulate matter Level Sensor readings from Sensor 5.05?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Water Valve classified in the ontology?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for the zone air temperature in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the relationship between cooling discharge and supply air temperature proportional band parameters.\nentitybrick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Integral Gain Parameter includes the tag 'PID'.\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Integral_Gain_Parameter brick:hasAssociatedTag tag:PID . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the role of a Chilled Water Coil in HVAC systems?\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective discharge air temperature setpoint in the Game Room.\nentitybldg:Game_Room \n brick:Effective_Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Discharge_Air_Temperature_Setpoint ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only  Air Quality Level 5.05?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Parking Structure.\nentitybrick:Parking_Structure",
    "target_text": "SELECT ?tag WHERE { brick:Parking_Structure brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Natural Gas Flow Sensor.\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Natural_Gas_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the loop chilled water supply temperature point for the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air control temperature setpoint reading for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What data does BrickSchema store for the Discharge Air Temperature Reset Differential Setpoint?\nentitybrick:Discharge_Air_Temperature_Reset_Differential_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Craft Room.\nentitybldg:Craft_Room \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Integral Gain Parameter.\nentitybrick:Integral_Gain_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Integral_Gain_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Retail Room?\nentitybrick:Retail_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Retail_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated withFormaldehyde Level sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03's readings over the past 48 hours.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Low Temperature Alarm Parameters?\nentitybrick:Low_Temperature_Alarm_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:Low_Temperature_Alarm_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe Standby Load Shed Command?\nentitybrick:Standby_Load_Shed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Standby_Load_Shed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Static Pressure Setpoint is equivalent to Discharge Air Static Pressure Setpoint.\nentitybrick:Supply_Air_Static_Pressure_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Setpoint owl:equivalentClass brick:Discharge_Air_Static_Pressure_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current  PM10 particulate matter Level Sensor 5.01 status across the smart home?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the parent class for Makeup Air Unit.\nentitybrick:Makeup_Air_Unit",
    "target_text": "SELECT ?parent WHERE { brick:Makeup_Air_Unit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the most recent zone supply air flow measurement for RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the humidifier fault status in the Laboratory.\nentitybldg:Laboratory \n brick:Humidifier_Fault_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Humidifier_Fault_Status ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Static Pressure Sensor call itself?\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Static_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Hot Water Radiator define in BrickSchema?\nentitybrick:Hot_Water_Radiator",
    "target_text": "SELECT ?property ?value WHERE { brick:Hot_Water_Radiator ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the  Air Quality Level installed in room 5.04.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.04 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone supply air temperature data for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  Air Quality Level 5.01 and where is it set up?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of PM2.5 particulate matter Level Sensor 5.01.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Lead Lag Status?\nentitybrick:Lead_Lag_Status",
    "target_text": "SELECT ?tag WHERE { brick:Lead_Lag_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature setpoint in the Basement.\nentitybldg:Basement \n brick:Unoccupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Setpoint ; brick:hasLocation bldg:Basement ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?category WHERE { brick:Static_Pressure skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Condenser Water Flow Sensor a type of Condenser Water Flow Sensor?\nentitybrick:Leaving_Condenser_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Flow_Sensor rdfs:subClassOf brick:Condenser_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Supply Air Static Pressure Step Parameter?\nentitybrick:Supply_Air_Static_Pressure_Step_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Static_Pressure_Step_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of  Air temperature Sensor 5.03?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which spaces are supplied by AHU02?\nentitybrick:feeds",
    "target_text": "SELECT ?vav WHERE { bldg:AHU02 brick:feeds ?vav . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Cooling Supply Air Temperature Proportional Band Parameter have?\nentitybrick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.04 show any unusual CO  spikes today?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum Ethyl Alcohol /C2H5CH  in sensor 5.05 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Average Cooling Demand Sensor fall?\nentitybrick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Cooling_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return water temperature setpoint in the Board Room.\nentitybldg:Board_Room \n brick:Return_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Water_Temperature_Setpoint ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Temperature High Reset Setpoint extends.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time CO2  level from sensor 5.02?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Flow Sensor?\nentitybrick:Outside_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Cooling Enable Command?\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest configuration of the zone air temperature setpoint in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of an Automatic Mode Command?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?definition WHERE { brick:Automatic_Mode_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is apparent power?\nentitybrick:Apparent_Power",
    "target_text": "SELECT ?definition WHERE { brick:Apparent_Power skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Mixed Damper belong to?\nentitybrick:Mixed_Damper",
    "target_text": "SELECT ?type WHERE { brick:Mixed_Damper a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current Ethyl Alcohol /C2H5CH stats from sensor5.02.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?tag WHERE { brick:Steam_On_Off_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.39 airq5.39?\nentitybldg:hum5.39",
    "target_text": "SELECT ?room WHERE { bldg:hum5.39 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity measured by the Hot Water Differential Pressure Sensor.\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Hot_Water_Differential_Pressure_Sensor brick:hasQuantity ?quantity ; brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Derivative Gain Parameter?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Derivative_Gain_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Humidification Start Stop Status?\nentitybrick:Humidification_Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Humidification_Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Differential Pressure Sensor the same as Discharge Air Differential Pressure Sensor?\nentitybrick:Supply_Air_Differential_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Differential_Pressure_Sensor owl:equivalentClass brick:Discharge_Air_Differential_Pressure_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Space Heater?\nentitybrick:Space_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Space_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  Air Quality Level 5.05 and its installation location.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the humidity levels recorded by Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification forSound Noise loudness Sensor  5.03.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature high reset setpoint in the Elevator.\nentitybldg:Elevator \n brick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Electric Energy Sensor?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Electric_Energy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.59 located?\nentitybldg:c2h5ch5.59",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.59 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the First Aid Kit?\nentitybrick:First_Aid_Kit",
    "target_text": "SELECT ?superclass WHERE { brick:First_Aid_Kit rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which classes does the Occupied Heating Mode Status inherit?\nentitybrick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Heating_Mode_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Occupied Mode Status indicate?\nentitybrick:Occupied_Mode_Status",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Transformer Room?\nentitybrick:Transformer_Room",
    "target_text": "SELECT ?label WHERE { brick:Transformer_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Load Current Sensor categorized using tags?\nentitybrick:Load_Current_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Load_Current_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substance for Entering Water Temperature Setpoint.\nentitybrick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Point' one of the tags for Supply Air Flow Demand Setpoint?\nentitybrick:Supply_Air_Flow_Demand_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Demand_Setpoint brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the lead lag status in the Elevator.\nentitybldg:Elevator \n brick:Lead_Lag_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Lead_Lag_Status ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Access Reader compare to other security devices?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?superclass WHERE { brick:Access_Reader rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which measurement units are valid for Illuminance in BrickSchema?\nentitybrick:Illuminance",
    "target_text": "SELECT ?unit ?qudt WHERE { brick:Illuminance qudt:applicableUnit ?unit . OPTIONAL { brick:Illuminance brick:hasQUDTReference ?qudt . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Frequency Sensor identified in the ontology?\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Frequency_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating temperature setpoint in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Occupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Temperature_Setpoint ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status ofSound Noise loudness Sensor  5.03 based on its most recent data.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What equipment is typically housed inside a Cold Box?\nentitybrick:Cold_Box",
    "target_text": "SELECT ?definition WHERE { brick:Cold_Box skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water differential pressure deadband setpoint in the Restroom.\nentitybldg:Restroom \n brick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Differential_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for timestamp.\nentitybrick:timestamp",
    "target_text": "SELECT ?label WHERE { brick:timestamp rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Filter?\nentitybrick:Filter",
    "target_text": "SELECT ?label WHERE { brick:Filter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the official label for Terminal Unit.\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?label WHERE { brick:Terminal_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for   TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  Ethyl Alcohol /C2H5CH sensor 5.01 and its installation location.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the equivalent class for DDAHU?\nentitybrick:DDAHU",
    "target_text": "SELECT ?eq WHERE { brick:DDAHU owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Control_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak return air temperature reading for AHU 02 on the previous day?\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the alias for Equipment.\nentitybrick:Equipment",
    "target_text": "SELECT ?alias WHERE { brick:Equipment brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor replaces Hot Water Return Temperature Sensor?\nentitybrick:Hot_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Hot_Water_Return_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Supply Air Flow Sensor?\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of a Building Electrical Meter.\nentitybrick:Building_Electrical_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Electrical_Meter rdfs:subClassOf ?superclass . brick:Building_Electrical_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Blind Group?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?tag WHERE { brick:Blind_Group brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Equipment' one of the tags for Baseboard Radiator?\nentitybrick:Baseboard_Radiator",
    "target_text": "ASK WHERE { brick:Baseboard_Radiator brick:hasAssociatedTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Entering Medium Temperature Hot Water Temperature Load Shed Setpoint a subclass of another entity?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air humidity sensor in the Floor 5.\nentitybldg:Floor_5 \n brick:Supply_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Humidity_Sensor ; brick:hasLocation bldg:Floor_5 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where should I look to get extra info on the Dewpoint Sensor?\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?seeAlso WHERE { brick:Dewpoint_Sensor rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water temperature setpoint in the central hall.\nentitybldg:central-hall \n brick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Temperature_Setpoint ; brick:hasLocation bldg:central-hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Common Space represent?\nentitybrick:Common_Space",
    "target_text": "SELECT ?definition WHERE { brick:Common_Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the Exhaust Air Differential Pressure Sensor?\nentitybrick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum Formaldehyde Level sensor recorded by Sensor 5.05 last week?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What value does the sensor report for zone supply air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which equipment is controlled by the max hot water differential pressure setpoint limit?\nentitybrick:regulates",
    "target_text": "SELECT ?eq WHERE { ?eq brick:regulates ?limit . ?limit a brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader category does Wind Direction belong to?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?broader WHERE { brick:Wind_Direction skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Variable Air Volume Box?\nentitybrick:Variable_Air_Volume_Box",
    "target_text": "SELECT ?equiv WHERE { brick:Variable_Air_Volume_Box owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Dewpoint Sensor measure?\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Dewpoint_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the rdfs:label value for Motor.\nentitybrick:Motor",
    "target_text": "SELECT ?label WHERE { brick:Motor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.34 located?\nentitybldg:temp5.34",
    "target_text": "SELECT ?location WHERE { bldg:temp5.34 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which QUDT specification is linked to Enthalpy?\nentitybrick:Enthalpy",
    "target_text": "SELECT ?reference WHERE { brick:Enthalpy brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Schedule Temperature Setpoint represents.\nentitybrick:Schedule_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Schedule_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is CO2  Sensor 5.05 showing any signs of potential failure based on recent data?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using CO  data from  CO  Sensor 5.05.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.05 say about the current Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Occupied Cooling Temperature Deadband Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What property is defined for Loop?\nentitybrick:Loop",
    "target_text": "SELECT ?property WHERE { brick:Loop sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the dimension vector for Precipitation.\nentitybrick:Precipitation",
    "target_text": "SELECT ?vector WHERE { brick:Precipitation qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the full details (label, definition, tags, quantity, substance) of the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Exhaust_Air_Static_Pressure_Sensor rdfs:label ?label . brick:Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  PM10 particulate matter Level Sensor measured by Sensor 5.02 during peak occupancy hours?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Cooling Temperature Setpoint?\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether the Unoccupied Heating Temperature Setpoint includes tag:Heat.\nentitybrick:Unoccupied_Heating_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Heating_Temperature_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone supply air temperature currently measured in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the points associated with bldg:chiller that mention 'CHW'.\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint ?point . FILTER(regex(str(?point), \"CHW\", \"i\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.04 of CO ?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for isSubMeterOf.\nentitybrick:isSubMeterOf",
    "target_text": "SELECT ?label WHERE { brick:isSubMeterOf rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas at 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Air Quality Level 5.02 installed?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the NO2 readings from Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using humidity sensor 5.02.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for zone percent air flow in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.55 located?\nentitybldg:temp5.55",
    "target_text": "SELECT ?location WHERE { bldg:temp5.55 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the most recent zone air temperature value for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Air Humidity Sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow deadband setpoint in the Control Room.\nentitybldg:Control_Room \n brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Electrical System.\nentitybrick:Electrical_System",
    "target_text": "SELECT ?property ?value WHERE { brick:Electrical_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Copy Room?\nentitybrick:Copy_Room",
    "target_text": "SELECT ?tag WHERE { brick:Copy_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Condenser Water Flow Sensor related to Condenser Water Flow Sensor?\nentitybrick:Leaving_Condenser_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Flow_Sensor rdfs:subClassOf brick:Condenser_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any applicable static pressure units related to water columns?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), \"H2O\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM1 particulate matter Level Sensor 5.01 and where is it set up?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change in zone air temperature for RM107A in the past week?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.05 reported a significant drop or rise in  PM1 particulate matter Level Sensor recently?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Voltage Imbalance Sensor?\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Voltage_Imbalance_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What other class mirrors the function of the Discharge Air Flow Reset Setpoint?\nentitybrick:Discharge_Air_Flow_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Flow_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the Filter Status?\nentitybrick:Filter_Status",
    "target_text": "SELECT ?label WHERE { brick:Filter_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by Air Quality sensor 5.04 over the past week?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Velocity Pressure.\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?definition WHERE { brick:Velocity_Pressure skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Alcohol Vapor MQ3 Gas Sensor  5.03 indicate any potential issues with air quality in the building?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.03 of Temperature?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Water Temperature Sensor means.\nentitybrick:Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading reported by the zone percent air flow sensor in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the category that Liquid CO2 falls under in the Brick schema.\nentitybrick:Liquid_CO2",
    "target_text": "SELECT ?broader WHERE { brick:Liquid_CO2 skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall  quality in our smart environment using only CO  sensor 5.04?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 over the last six months?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.15?\nentitybldg:notwo5.15",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.15 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label forCombustible Gas Smoke MQ2 Sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.49?\nentitybldg:mqtwo5.49",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.49 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Chilled Water System fall?\nentitybrick:Chilled_Water_System",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is  Illuminance Sensor 5.03 located?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of the Chilled Water Flow Sensor?\nentitybrick:Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Chilled_Water_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Differential Pressure Sensor.\nentitybrick:Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Return Air Grains Sensor inherit?\nentitybrick:Return_Air_Grains_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_Grains_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the VAV rooms connected to AHU02?\nentitybrick:feeds",
    "target_text": "SELECT ?vav WHERE { bldg:AHU02 brick:feeds ?vav . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for Air Quality Level 5.04.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Hot Water Flow Setpoint a type of Water Flow Setpoint?\nentitybrick:Hot_Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Hot_Water_Flow_Setpoint rdfs:subClassOf brick:Water_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Ceiling Fan.\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Ceiling_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  NO2 sensor 5.01 and where is it located?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.01 rdfs:label ?label . bldg:NO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest outside air temperature reading for AHU 02 from the last 2 hours.\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.03's  Air Quality sensor levels and building occupancy patterns.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the Ethyl Alcohol /C2H5CH sensor installed in room 5.03.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Conference Room used?\nentitybrick:Conference_Room",
    "target_text": "SELECT ?definition WHERE { brick:Conference_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of  Oxygen,O2 Sensor 5.01, please.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the set of tags for Fire Safety Equipment.\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Fire_Safety_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Air Humidity Sensor 5.05 is placed.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?tag WHERE { brick:Steam_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the  Air Quality Level in 5.03, including its category.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of NO2 Sensor 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?definition WHERE { brick:Control_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does ratedCurrentInput call itself?\nentitybrick:ratedCurrentInput",
    "target_text": "SELECT ?label WHERE { brick:ratedCurrentInput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Concession have?\nentitybrick:Concession",
    "target_text": "SELECT ?tag WHERE { brick:Concession brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling discharge air flow setpoint in the Balcony.\nentitybldg:Balcony \n brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Balcony ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Warm Cool Adjust Sensor.\nentitybrick:Warm_Cool_Adjust_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Warm_Cool_Adjust_Sensor rdfs:label ?label . brick:Warm_Cool_Adjust_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Access Reader do?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?definition WHERE { brick:Access_Reader rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pir sensor in the Meeting Room.\nentitybldg:Meeting_Room \n brick:PIR_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:PIR_Sensor ; brick:hasLocation bldg:Meeting_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Outside Air Humidity Sensor.\nentitybrick:Outside_Air_Humidity_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Humidity_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone supply air flow sensor in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone air temperature setpoint in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air flow low reset setpoint in the Server Room.\nentitybldg:Server_Room \n brick:Discharge_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Flow_Low_Reset_Setpoint ; brick:hasLocation bldg:Server_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the complete information for the Energy Sensor including label, definition, tags, quantity, and parent classes.\nentitybrick:Energy_Sensor",
    "target_text": "SELECT ?label ?definition ?quantity (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) (GROUP_CONCAT(?parent; separator=\", \") AS ?parent) WHERE { brick:Energy_Sensor rdfs:label ?label . brick:Energy_Sensor skos:definition ?definition . OPTIONAL { brick:Energy_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Energy_Sensor brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Energy_Sensor rdfs:subClassOf ?parent . } } GROUP BY ?label ?definition ?quantity"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded supply air temperature setpoint events for AHU 01 during the last weekend.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for  Alcohol Vapor MQ3 Gas Sensor  5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest CO  measurement from  CO  Sensor 5.02.\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Differential Pressure Setpoint call itself?\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Differential_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient Carbon monoxide  as measured by sensor5.05?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find more information about Motor?\nentitybrick:Motor",
    "target_text": "SELECT ?reference WHERE { brick:Motor rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  TVOC  sensor 5.03 along with its location in the building.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating thermal power sensor in the Kitchen.\nentitybldg:Kitchen \n brick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Thermal_Power_Sensor ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Alcohol Vapor MQ3 Gas Sensor  measurement from sensor 5.03, please.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for an Air Loop?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?rule WHERE { brick:Air_Loop sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Return Air Temperature Low Reset Setpoint have?\nentitybrick:Return_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Domestic Water identified in the ontology?\nentitybrick:Domestic_Water",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for On Off Command?\nentitybrick:On_Off_Command",
    "target_text": "SELECT ?label WHERE { brick:On_Off_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Fire Alarm Control Panel?\nentitybrick:Fire_Alarm_Control_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Alarm_Control_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me Oxygen,O2 trends and their variation over the last 24 hours in room or sensor 5.01.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.05 of LPG Natural Gas Town MQ5 Gas Sensor ?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for  Ethyl Alcohol /C2H5CH Sensor 5.04.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's  PM2.5 particulate matter Level Sensor output contribute to the overall building air quality index?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical cooling command data for AHU 02 for the previous month.\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Volume mean?\nentitybrick:volume",
    "target_text": "SELECT ?definition WHERE { brick:volume skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the zone air temperature setpoint values for RM107B between 9 AM and 11 AM today?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Bus Riser.\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?property ?value WHERE { brick:Bus_Riser ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Air Flow Setpoint Limit has the tag 'Flow'?\nentitybrick:Max_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Photovoltaic' one of the tags for Photovoltaic Array?\nentitybrick:Photovoltaic_Array",
    "target_text": "ASK WHERE { brick:Photovoltaic_Array brick:hasAssociatedTag tag:Photovoltaic . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone air temperature reading for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Chiller related to HVAC Equipment?\nentitybrick:Chiller",
    "target_text": "ASK WHERE { brick:Chiller rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only Formaldehyde Level sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  quality trends over the past month using NO2 sensor 5.03.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Heat Exchanger Leaving Water Temperature Sensor have?\nentitybrick:Heat_Exchanger_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Heat_Exchanger_Leaving_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the Air Temperature Integral Time Parameter.\nentitybrick:Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Air_Temperature_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?tag WHERE { brick:Steam_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Override Command?\nentitybrick:Override_Command",
    "target_text": "SELECT ?tag WHERE { brick:Override_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Power Loss Alarm?\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Power_Loss_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Heating Start Stop Status a subclass of another status type?\nentitybrick:Heating_Start_Stop_Status",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Start_Stop_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the tint status in the East Side.\nentitybldg:East_Side \n brick:Tint_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Tint_Status ; brick:hasLocation bldg:East_Side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the function of the Solar Azimuth Angle Sensor.\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Azimuth_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Heat Wheel a subclass of any other equipment?\nentitybrick:Heat_Wheel",
    "target_text": "SELECT ?parent WHERE { brick:Heat_Wheel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the live measurement of zone percent air flow in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the deprecation version for the Discharge Hot Water Temperature Setpoint from BrickSchema.\nentitybrick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Hot_Water_Temperature_Setpoint brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.02 and its impact on indoor sustainability.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to Air Quality Level 5.01?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Temperature sensor 5.01.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Building Air Static Pressure Sensor important?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Building_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display all properties of Time: name, applicable units, narrower concepts, and QUDT reference.\nentitybrick:Time",
    "target_text": "SELECT ?label ?unit ?narrower ?reference WHERE { brick:Time rdfs:label ?label; qudt:applicableUnit ?unit; skos:narrower ?narrower; brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Position Limit?\nentitybrick:Position_Limit",
    "target_text": "SELECT ?label WHERE { brick:Position_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03 over the past week.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe a CO2 Differential Sensor?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO2_Differential_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of PM10 particulate matter Level Sensor 5.03?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Usage Sensor related to Sensor?\nentitybrick:Usage_Sensor",
    "target_text": "ASK WHERE { brick:Usage_Sensor rdfs:subClassOf brick:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the latest update on the zone air damper command in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a full list of properties for Temperature Setpoint.\nentitybrick:Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for  TVOC  Sensor 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Differential Air Temperature Setpoint?\nentitybrick:Differential_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  NO2 sensor 5.04 along with its location in the building.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.04 rdfs:label ?label . bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Basement used in architectural design?\nentitybrick:Basement",
    "target_text": "SELECT ?definition WHERE { brick:Basement skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Preheat Discharge Air Temperature Sensor represent?\nentitybrick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Preheat_Discharge_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does Combustible Gas Smoke MQ2 Sensor  5.03 require recalibration according to the data?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from Air Quality Level 5.01 for a specific date, for example 2025-02-15.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a tag represent in BrickSchema?\nentitybrick:Tag",
    "target_text": "SELECT ?label WHERE { ?tag a brick:Tag ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Occupied Cooling Supply Air Flow Setpoint?\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the broader concept for Hail.\nentitybrick:Hail",
    "target_text": "SELECT ?broader WHERE { brick:Hail skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Chilled Water Discharge Temperature Sensor used?\nentitybrick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Discharge_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all classes categorized as subClassOf brick:HVAC_Equipment.\nentitybrick:HVAC_Equipment",
    "target_text": "SELECT ?class WHERE {  ?class rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the collection basin water temperature sensor in the Dining Room.\nentitybldg:Dining_Room \n brick:Collection_Basin_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Collection_Basin_Water_Temperature_Sensor ; brick:hasLocation bldg:Dining_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Entering Water Temperature Alarm?\nentitybrick:Entering_Water_Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.49 located?\nentitybldg:sound5.49",
    "target_text": "SELECT ?location WHERE { bldg:sound5.49 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Return Air Grains Sensor have?\nentitybrick:Return_Air_Grains_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Grains_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Time includes both a label and applicable units.\nentitybrick:Time",
    "target_text": "ASK { brick:Time rdfs:label ?label; qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Status' is a tag for Pressure Status?\nentitybrick:Pressure_Status",
    "target_text": "ASK WHERE { brick:Pressure_Status brick:hasAssociatedTag tag:Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Air Temperature High Reset Setpoint?\nentitybrick:Return_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for  PM10 particulate matter Level Sensor 5.03 in our smart building?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Sensor?\nentitybrick:Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature cooling setpoint in the Showroom.\nentitybldg:Showroom \n brick:Discharge_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Cooling_Setpoint ; brick:hasLocation bldg:Showroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Entering Water Flow Setpoint have?\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with HVAC Valve?\nentitybrick:HVAC_Valve",
    "target_text": "SELECT ?tag WHERE { brick:HVAC_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Alcohol Vapor MQ3 Gas Sensor s 5.01 in our building?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of NO2 Sensor 5.05.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Fan Coil Unit?\nentitybrick:Fan_Coil_Unit",
    "target_text": "SELECT ?label WHERE { brick:Fan_Coil_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the alternative name for AHU?\nentitybrick:AHU",
    "target_text": "SELECT ?alias WHERE { brick:AHU brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all information on Enthalpy in one complete description.\nentitybrick:Enthalpy",
    "target_text": "DESCRIBE brick:Enthalpy WHERE { brick:Enthalpy ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Shading Equipment?\nentitybrick:Shading_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Shading_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.03's NO2 readings and overall building  quality index?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does active energy fall?\nentitybrick:Active_Energy",
    "target_text": "SELECT ?category WHERE { brick:Active_Energy skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Water Pump labeled in the ontology?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Pump rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of Occupied Cooling Discharge Air Flow Setpoint.\nentitybrick:Occupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Return Air CO Sensor.\nentitybrick:Return_Air_CO_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_CO_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  Air Quality sensor 5.01 and where is it located?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Emergency Wash Station call itself?\nentitybrick:Emergency_Wash_Station",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Wash_Station rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Radon Concentration Sensor have?\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Radon_Concentration_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Frequency Setpoint in the Brick Schema?\nentitybrick:Frequency_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Frequency_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?tag WHERE { brick:Cafeteria brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night  PM10 particulate matter Level Sensor variations as captured by Sensor 5.02?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Control Room.\nentitybldg:Control_Room \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.04 for the past week and show me a summary.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Temperature Coefficient?\nentitybrick:temperatureCoefficientofPmax",
    "target_text": "SELECT ?label WHERE { brick:temperatureCoefficientofPmax rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with medium temperature hot water differential pressure load shed setpoints?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for   CO2  Sensor 5.01.\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types is Outside?\nentitybrick:Outside",
    "target_text": "SELECT ?type WHERE { brick:Outside a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  Oxygen,O2 Sensor 5.02?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent Temperature data available from  temperature Sensor 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Temperature readings from Sensor 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Damper?\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Damper brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Solar Azimuth Angle Sensor.\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Azimuth_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum Temperature in sensor 5.01 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Oxygen,O2 data by Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of the Hot Water Differential Pressure Sensor from BrickSchema.\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Chilled Beam.\nentitybrick:Chilled_Beam",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Beam skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of an air system?\nentitybrick:Air_System",
    "target_text": "SELECT ?category WHERE { brick:Air_System rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Return Air CO2 Setpoint have?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_CO2_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated name of Enable Command?\nentitybrick:Enable_Command",
    "target_text": "SELECT ?label WHERE { brick:Enable_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent NO2 data available from  NO2 Sensor 5.01?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units associated with Level.\nentitybrick:Level",
    "target_text": "SELECT ?unit WHERE { brick:Level qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Illuminance Sensor reading is sensor 5.02 reporting right now?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering medium temperature hot water temperature low reset setpoint in the central hall.\nentitybldg:central-hall \n brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:central-hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.32 located?\nentitybldg:hcho5.32",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.32 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas stats from Sensor 5.01 and tell me if it's on point with our green goals.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.05's data deviates from our smart building standards?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the CO2  readings of  CO2  Sensor 5.05 compared to its normal range?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Exhaust Air Flow Setpoint define in BrickSchema?\nentitybrick:Exhaust_Air_Flow_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Exhaust_Air_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Entering Chilled Water Temperature Sensor measure?\nentitybrick:Entering_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Chilled_Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Cooling Command.\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Supply Air Differential Pressure Setpoint.\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Differential_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Condenser Water Temperature Setpoint related to Leaving Water Temperature Setpoint?\nentitybrick:Leaving_Condenser_Water_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Temperature_Setpoint rdfs:subClassOf brick:Leaving_Water_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Position Sensor.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Setpoint' a tag for Max Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor5.05 say about the current CO2 ?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of CO  fluctuations recorded by Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does Illuminance define in BrickSchema?\nentitybrick:Illuminance",
    "target_text": "SELECT ?property ?value WHERE { brick:Illuminance ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Reception a subclass of?\nentitybrick:Reception",
    "target_text": "SELECT ?parent WHERE { brick:Reception rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the reference definition for Thermal Energy?\nentitybrick:Thermal_Energy",
    "target_text": "SELECT ?definedBy WHERE { brick:Thermal_Energy rdfs:isDefinedBy ?definedBy . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present value of the zone air damper command in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Cooling Supply Air Flow Setpoint means.\nentitybrick:Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Supply_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Piezoelectric Sensor?\nentitybrick:Piezoelectric_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Piezoelectric_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the zone air control temperature setpoint summary for RM107B for yesterday afternoon?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Outside Air Temperature High Reset Setpoint.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does NO2 Sensor 5.03 cover?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units does CO2 Concentration support?\nentitybrick:CO2_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:CO2_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Zone Air Humidity Sensor?\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_Air_Humidity_Sensor rdfs:label ?label . brick:Zone_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for NO2 sensors 5.01 in our building?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does return air mean in HVAC systems?\nentitybrick:Return_Air",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical pump start/stop command data for the chiller for the previous month.\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Chilled Water Differential Pressure Load Shed Reset Status?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Load Shed Status means.\nentitybrick:Load_Shed_Status",
    "target_text": "SELECT ?definition WHERE { brick:Load_Shed_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Thermostatic Mixing Valve?\nentitybrick:Thermostatic_Mixing_Valve",
    "target_text": "SELECT ?label WHERE { brick:Thermostatic_Mixing_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Max Limit.\nentitybrick:Max_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.03?\nentitybldg:oxy5.03",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.03 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.04 and where is it located?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Stage Riser?\nentitybrick:Stage_Riser",
    "target_text": "SELECT ?label ?definition WHERE { brick:Stage_Riser rdfs:label ?label . brick:Stage_Riser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the purpose of a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Capacity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the  Ethyl Alcohol /C2H5CH sensor 5.05 and where it is installed.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum zone air damper command readings for RM107B from this morning.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes a Bypass Air Humidity Setpoint from other humidity controls?\nentitybrick:Bypass_Air_Humidity_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Air_Humidity_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What class does Unoccupied Cooling Discharge Air Flow Setpoint refer to as an alias?\nentitybrick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantity and substance of the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display every available property of Damper.\nentitybrick:Damper",
    "target_text": "DESCRIBE brick:Damper\nWHERE { brick:Damper ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  NO2 Sensor 5.03 is located.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  Air Quality sensor 5.02 and where is it located?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend forFormaldehyde Level sensor 5.04 and its impact on indoor sustainability.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of LPG Natural Gas Town MQ5 Gas Sensor  fluctuations recorded by Sensor 5.01?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for Alcohol Vapor MQ3 Gas Sensor  5.03?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water differential pressure deadband setpoint in the Shop.\nentitybldg:Shop \n brick:Entering_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Differential_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Damper Position Sensor.\nentitybrick:Damper_Position_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Damper_Position_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: When was Discharge Water Flow Sensor deprecated?\nentitybrick:Discharge_Waterflow_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Waterflow_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Discharge Fan?\nentitybrick:Discharge_Fan",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Lobby represent?\nentitybrick:Lobby",
    "target_text": "SELECT ?definition WHERE { brick:Lobby skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with Furniture.\nentitybrick:Furniture",
    "target_text": "SELECT ?property ?value WHERE { brick:Furniture ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest  PM2.5 particulate matter Level Sensor data for 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the different types of sensors in AHU01.\nentitybrick:hasPoint",
    "target_text": "SELECT ?sensor WHERE { bldg:AHU01 brick:hasPoint ?sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for PM2.5 particulate matter Level Sensor 5.03 and its impact on indoor sustainability.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Flow Low Reset Setpoint has the tag 'Supply'?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.24?\nentitybldg:mqfive5.24",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.24 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  TVOC  sensor 5.04 are we talking about and where is it placed?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Max Heating Supply Air Flow Setpoint Limit include the tag 'Heat'?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow deadband setpoint in the South.\nentitybldg:South \n brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is   CO  Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied air temperature setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Occupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Air_Temperature_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent property of Has part?\nentitybrick:hasPart",
    "target_text": "SELECT ?parentProp WHERE { brick:hasPart rdfs:subPropertyOf ?parentProp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for a Bench Space?\nentitybrick:Bench_Space",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Bench_Space rdfs:subClassOf ?superclass . brick:Bench_Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Failure Alarm a subclass of?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Failure_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What name is associated with a Chilled Water Differential Pressure Sensor?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling discharge air flow setpoint in the Bar.\nentitybldg:Bar \n brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the complete information for the Failure Alarm.\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) (GROUP_CONCAT(?parent; separator=\", \") AS ?parent) WHERE { brick:Failure_Alarm rdfs:label ?label . brick:Failure_Alarm skos:definition ?definition . OPTIONAL { brick:Failure_Alarm brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Failure_Alarm rdfs:subClassOf ?parent . } } GROUP BY ?label ?definition"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the Combustible Gas Smoke MQ2 Sensor  5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to Building.\nentitybrick:Building",
    "target_text": "SELECT ?tag WHERE { brick:Building brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Mixed Air Temperature Sensor have the tag 'Sensor'?\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Mixed_Air_Temperature_Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.23?\nentitybldg:hcho5.23",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.23 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone percent air flow data from RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of PID Parameter?\nentitybrick:PID_Parameter",
    "target_text": "SELECT ?label WHERE { brick:PID_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Fault Status.\nentitybrick:Fault_Status",
    "target_text": "SELECT ?label WHERE { brick:Fault_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01 installed?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the  Air Quality sensor stats from Sensor 5.05 and tell me if it's on point with our green goals.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the  PM10 particulate matter Level Sensor reading from sensor 5.05 right now?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Combustible Gas Smoke MQ2 Sensor  value from sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Waste Storage a subclass of?\nentitybrick:Waste_Storage",
    "target_text": "SELECT ?parent WHERE { brick:Waste_Storage rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification ofCombustible Gas Smoke MQ2 Sensor 5.03.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Leaving Condenser Water Temperature Sensor.\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are some metric units for measuring static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . FILTER(STRSTARTS(STR(?unit), \"unit:Kilo\") || STRSTARTS(STR(?unit), \"unit:Mega\") || STRSTARTS(STR(?unit), \"unit:Milli\") || STRSTARTS(STR(?unit), \"unit:Centi\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.52?\nentitybldg:mqfive5.52",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.52 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Floor.\nentitybrick:Floor",
    "target_text": "SELECT ?tag WHERE { brick:Floor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Standby Glycool Unit On Off Status?\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?label WHERE { brick:Standby_Glycool_Unit_On_Off_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of Air Handler Unit?\nentitybrick:Air_Handler_Unit",
    "target_text": "SELECT ?equiv WHERE { brick:Air_Handler_Unit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the components that are parts of VAVRM115.\nentitybrick:hasPart",
    "target_text": "SELECT ?part WHERE { bldg:VAVRM115 brick:hasPart ?part . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Occupancy Sensor?\nentitybrick:Occupancy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupancy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Ethyl Alcohol /C2H5CH Sensor 5.03 installed?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with   Ethyl Alcohol /C2H5CH Sensor 5.05?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Valve Command call itself?\nentitybrick:Valve_Command",
    "target_text": "SELECT ?label WHERE { brick:Valve_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of Combustible Gas Smoke MQ2 Sensor  5.03 compare to our baseline standards?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the constraints applied to a cycle alarm?\nentitybrick:Cycle_Alarm",
    "target_text": "SELECT ?rule WHERE { brick:Cycle_Alarm sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Rain Duration Sensor?\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Rain_Duration_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.03 following in terms of  PM10 particulate matter Level Sensor for the past hour?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Effective Supply Air Temperature Setpoint?\nentitybrick:Effective_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Supply_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display an RDF summary of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "DESCRIBE brick:Air_Quality_Sensor\nWHERE { brick:Air_Quality_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition of Building Air?\nentitybrick:Building_Air",
    "target_text": "SELECT ?definition WHERE { brick:Building_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm if Occupancy includes Occupancy_Count.\nentitybrick:Occupancy",
    "target_text": "ASK WHERE { brick:Occupancy skos:narrower brick:Occupancy_Count . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Pre Filter a subclass of?\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Pre_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does   TVOC  Sensor 5.04 represent?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Min Air Flow Setpoint Limit include Air Flow Setpoint Limit?\nentitybrick:Min_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the piezoelectric sensor in the Reading Room.\nentitybldg:Reading_Room \n brick:Piezoelectric_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Piezoelectric_Sensor ; brick:hasLocation bldg:Reading_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  Air Quality sensor 5.03 along with its location in the building.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to an Automatic Tint Window.\nentitybrick:Automatic_Tint_Window",
    "target_text": "SELECT ?tag WHERE { brick:Automatic_Tint_Window brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a specific substance measured by a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Capacity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Natural Gas Temperature Sensor.\nentitybrick:Natural_Gas_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature load shed status in the Jacuzzi.\nentitybldg:Jacuzzi \n brick:Leaving_Hot_Water_Temperature_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_Load_Shed_Status ; brick:hasLocation bldg:Jacuzzi ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Occupancy Count Sensor.\nentitybrick:Occupancy_Count_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Occupancy_Count_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.07 located?\nentitybldg:light5.07",
    "target_text": "SELECT ?location WHERE { bldg:light5.07 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the Temperature data from Sensor 5.04 with HVAC anomalies?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Exhaust Air Flow Sensor have?\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.03?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Cooling Temperature Setpoint control?\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Cooling_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Ethyl Alcohol /C2H5CH Sensor 5.03 located in?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Velocity Pressure a brick:Quantity?\nentitybrick:Velocity_Pressure",
    "target_text": "ASK WHERE { brick:Velocity_Pressure a brick:Quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the current zone air damper command configuration look like in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated quantity for the Refrigerant Level Sensor?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Refrigerant_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of TVOC  Sensor 5.05 compare to our baseline standards?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating state of the zone air damper command in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What other name does the Max Occupied Heating Discharge Air Flow Setpoint Limit go by in BrickSchema?\nentitybrick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Outside Air Enthalpy Sensor.\nentitybrick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Enthalpy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.29 located?\nentitybldg:oxy5.29",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.29 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Min Occupied Cooling Supply Air Flow Setpoint Limit is a subclass of Min Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entities use Volume?\nentitybrick:volume",
    "target_text": "SELECT ?entity WHERE { ?entity brick:volume ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is pir5.14 located?\nentitybldg:pir5.14",
    "target_text": "SELECT ?location WHERE { bldg:pir5.14 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the complete RDF graph describing Electric Power.\nentitybrick:Electric_Power",
    "target_text": "DESCRIBE brick:Electric_Power\nWHERE { brick:Electric_Power ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the humidity sensor 5.03 for yesterday?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display a comprehensive RDF description of Air Flow Sensor.\nentitybrick:Air_Flow_Sensor",
    "target_text": "DESCRIBE brick:Air_Flow_Sensor\nWHERE { brick:Air_Flow_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating temperature deadband setpoint in the central hall.\nentitybldg:central-hall \n brick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:central-hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the types for the Mixed Air Humidity Sensor.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?type WHERE { brick:Mixed_Air_Humidity_Sensor a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone reheat valve command currently indicate in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Battery Voltage Sensor described using tags?\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Battery_Voltage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for LPG Natural Gas Town MQ5 Gas Sensor  from 5.05?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of CO  fluctuations recorded by Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Curtailment Override Command?\nentitybrick:Curtailment_Override_Command",
    "target_text": "SELECT ?definition WHERE { brick:Curtailment_Override_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a label for CO2 Sensor?\nentitybrick:CO2_Sensor",
    "target_text": "ASK { brick:CO2_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to   CO2  Sensor 5.03?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category is Position grouped?\nentitybrick:Position",
    "target_text": "SELECT ?broader WHERE { brick:Position skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?rule WHERE { brick:Overload_Alarm sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Humidity Alarm related to Alarm?\nentitybrick:Humidity_Alarm",
    "target_text": "ASK WHERE { brick:Humidity_Alarm rdfs:subClassOf brick:Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many narrower classifications are defined for Water?\nentitybrick:Water",
    "target_text": "SELECT (COUNT(?narrower) AS ?narrowerCount) WHERE { brick:Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Standby Fan.\nentitybrick:Standby_Fan",
    "target_text": "SELECT ?parent WHERE { brick:Standby_Fan rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 a member of?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for Air Temperature Sensor 5.03.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with VAVRM100?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:VAVRM100 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Building Air Static Pressure Sensor a type of Static Pressure Sensor?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Occupied Heating Temperature Deadband Setpoint.\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Gas System?\nentitybrick:Gas_System",
    "target_text": "SELECT ?tag WHERE { brick:Gas_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Heating Discharge Air Flow Setpoint.\nentitybrick:Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Heating_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Emergency Alarm in BrickSchema?\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Emergency_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Pressure' a tag for Differential Pressure Setpoint?\nentitybrick:Differential_Pressure_Setpoint",
    "target_text": "ASK WHERE { brick:Differential_Pressure_Setpoint brick:hasAssociatedTag tag:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the parallel class for the Max Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Water Flow Setpoint?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Water_Flow_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Steam Baseboard Radiator inherit?\nentitybrick:Steam_Baseboard_Radiator",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Baseboard_Radiator rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Max Discharge Air Static Pressure Setpoint Limit has in BrickSchema.\nentitybrick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the NO2 trend from  NO2 Sensor 5.01 over the past week.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Chilled Water Temperature Setpoint?\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.04 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Relay inherit?\nentitybrick:Relay",
    "target_text": "SELECT ?parent WHERE { brick:Relay rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Air CO Sensor.\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_CO_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using  Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does a Detention Room have any parent spaces in the ontology?\nentitybrick:Detention_Room",
    "target_text": "SELECT ?relatedSpace WHERE { brick:Detention_Room rdfs:subClassOf ?relatedSpace . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Space Heater is used for.\nentitybrick:Space_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Space_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe a Bypass Water Flow Setpoint?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading reported by the zone supply air temperature sensor in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data structure is used for Rated Maximum Voltage Output?\nentitybrick:ratedMaximumVoltageOutput",
    "target_text": "SELECT ?datatype WHERE { brick:ratedMaximumVoltageOutput rdfs:range ?datatype . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Heat' is a tag for Min Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Ticketing Booth?\nentitybrick:Ticketing_Booth",
    "target_text": "SELECT ?definition WHERE { brick:Ticketing_Booth skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about humidity in HVAC systems.\nentitybrick:Humidity",
    "target_text": "SELECT ?label WHERE { brick:Humidity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Gas Meter.\nentitybrick:Gas_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Gas_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC system feeds RM112?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM112 brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using  Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality Level 5.02 is in use and what is its installation spot?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Differential Setpoint.\nentitybrick:Differential_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Differential_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the zone air humidity setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Zone_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Zone_Air_Humidity_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current  PM10 particulate matter Level Sensor stats from sensor 5.03.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with Leaving Chilled Water Flow setpoint?\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Motor Direction Status.\nentitybrick:Motor_Direction_Status",
    "target_text": "SELECT ?tag WHERE { brick:Motor_Direction_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader concepts include CO2 Concentration?\nentitybrick:CO2_Concentration",
    "target_text": "SELECT ?broader WHERE { brick:CO2_Concentration skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What spaces belong to the first floor?\nentitybrick:isPartOf",
    "target_text": "SELECT ?room WHERE { ?room brick:isPartOf bldg:floor1 . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Preheat Supply Air Temperature Sensor?\nentitybrick:Preheat_Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Preheat_Supply_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow demand setpoint in the Art Room.\nentitybldg:Art_Room \n brick:Supply_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Demand_Setpoint ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  Air Quality Level reading from Sensor 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Supply Air Flow Setpoint include Supply Air Flow Setpoint?\nentitybrick:Unoccupied_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Supply_Air_Flow_Setpoint rdfs:subClassOf brick:Supply_Air_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Luminaire categorized using tags?\nentitybrick:Luminaire",
    "target_text": "SELECT ?tag WHERE { brick:Luminaire brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current CO  reading from CO  Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water return flow sensor in the Pantry.\nentitybldg:Pantry \n brick:Chilled_Water_Return_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Return_Flow_Sensor ; brick:hasLocation bldg:Pantry ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Leaving Condenser Water Temperature Setpoint.\nentitybrick:Leaving_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Condenser_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which specific types are defined under Gas?\nentitybrick:Gas",
    "target_text": "SELECT ?narrower WHERE { brick:Gas skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags attached to Terminal Unit.\nentitybrick:Terminal_Unit",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Terminal_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Entity an owl:Class?\nentitybrick:Entity",
    "target_text": "ASK WHERE { brick:Entity a owl:Class . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current  PM1 particulate matter Level Sensor stats from sensor 5.01.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between  Air Quality sensor and temperature in the area monitored by Sensor 5.04?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes a Building Air Static Pressure Sensor from other pressure sensors?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Bypass Water Flow Setpoint play in HVAC systems?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date  PM2.5 particulate matter Level Sensor level from sensor 5.02?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of   CO  Sensor 5.04?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Oxygen,O2 sensor installed in room 5.02 and what type is it?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using data from  Ethyl Alcohol /C2H5CH Sensor 5.01.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Min Chilled Water Differential Pressure Setpoint Limit?\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class and alias for the Discharge Air Temperature Cooling Setpoint.\nentitybrick:Discharge_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?eq ?alias WHERE { brick:Discharge_Air_Temperature_Cooling_Setpoint owl:equivalentClass ?eq . brick:Discharge_Air_Temperature_Cooling_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Power Sensor means.\nentitybrick:Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Radiation Hot Water System.\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Radiation_Hot_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Average Cooling Demand Sensor important?\nentitybrick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Cooling_Demand_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the substance for the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the measurement units (like J, KiloW-HR) for ElectricEnergy.\nentitybrick:Electric_Energy",
    "target_text": "SELECT ?unit WHERE { brick:Electric_Energy qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Parking Space.\nentitybrick:Parking_Space",
    "target_text": "SELECT ?label WHERE { brick:Parking_Space rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Dewpoint_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Oxygen,O2 Sensor 5.04 at?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air temperature sensor in the Shop.\nentitybldg:Shop \n brick:Outside_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Temperature_Sensor ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Close Limit.\nentitybrick:Close_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Close_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the external reference for Building Primary Function.\nentitybrick:buildingPrimaryFunction",
    "target_text": "SELECT ?reference WHERE { brick:buildingPrimaryFunction rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the start stop status in the Cinema.\nentitybldg:Cinema \n brick:Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Start_Stop_Status ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Zone Unoccupied Load Shed Command?\nentitybrick:Zone_Unoccupied_Load_Shed_Command",
    "target_text": "SELECT ?label WHERE { brick:Zone_Unoccupied_Load_Shed_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average discharge air flow sensor in the Atrium.\nentitybldg:Atrium \n brick:Average_Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Discharge_Air_Flow_Sensor ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to Differential Pressure Deadband Setpoint.\nentitybrick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Differential_Pressure_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Combustible Gas Smoke MQ2 Sensor  5.03 and its installation location.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the  Air Quality sensor in 5.04 and state its sensor type.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Unoccupied Supply Air Temperature Setpoint set?\nentitybrick:Unoccupied_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Supply_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Cold Box?\nentitybrick:Cold_Box",
    "target_text": "SELECT ?tag WHERE { brick:Cold_Box brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Chilled Water Discharge Temperature Sensor play in HVAC systems?\nentitybrick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Discharge_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for PM1 particulate matter Level Sensor 5.02.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Alcohol Vapor MQ3 Gas Sensor  5.02 located?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Alcohol Vapor MQ3 Gas Sensor  data from sensor 5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.01's  PM2.5 particulate matter Level Sensor data by hour, day, and week.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Ozone_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for Air Quality sensor 5.03.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas level from sensor 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Exhaust Damper?\nentitybrick:Exhaust_Damper",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Damper brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of  PM1 particulate matter Level Sensor readings from Sensor 5.04 for sustainability reporting.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Air Temperature Sensor?\nentitybrick:Air_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Air_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?tag WHERE { brick:Steam_On_Off_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity associated with the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Outside Air Flow Setpoint?\nentitybrick:Outside_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for PM1 particulate matter Level Sensor 5.01.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall return air temperature statistics for AHU 01 for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the Combustible Gas Smoke MQ2 Sensor  installed in 5.04 and what is its classification?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what On Off Command means.\nentitybrick:On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can a Core Temperature Sensor have other classifications?\nentitybrick:Embedded_Temperature_Sensor",
    "target_text": "SELECT ?similarSensor WHERE { ?similarSensor rdfs:subClassOf brick:Embedded_Temperature_Sensor . FILTER(?similarSensor != brick:Core_Temperature_Sensor) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqnine5.70?\nentitybldg:mqnine5.70",
    "target_text": "SELECT ?room WHERE { bldg:mqnine5.70 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for PM1 particulate matter Level Sensor 5.03?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the  PM2.5 particulate matter Level Sensor 5.01 and its location.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Water Pump a subclass of?\nentitybrick:Water_Pump",
    "target_text": "SELECT ?parent WHERE { brick:Water_Pump rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Outside Air CO Sensor have?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_CO_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Motor Current Sensor?\nentitybrick:Motor_Current_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Motor_Current_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated quantity for the Outside Air Flow Sensor?\nentitybrick:Outside_Air_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Portfolio refer to?\nentitybrick:Portfolio",
    "target_text": "SELECT ?definition WHERE { brick:Portfolio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the start stop status in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Start_Stop_Status ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for TVOC Concentration.\nentitybrick:TVOC_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:TVOC_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the TVOC  data from Sensor 5.01.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Intercom Equipment do?\nentitybrick:Intercom_Equipment",
    "target_text": "SELECT ?definition WHERE { brick:Intercom_Equipment skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Electrical Equipment.\nentitybrick:Electrical_Equipment",
    "target_text": "SELECT ?definition WHERE { brick:Electrical_Equipment skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the sh:rule properties of the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_CO2_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Sensor represent?\nentitybrick:Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Water Tank?\nentitybrick:Water_Tank",
    "target_text": "SELECT ?parent WHERE { brick:Water_Tank rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Start Stop Command is called.\nentitybrick:Start_Stop_Command",
    "target_text": "SELECT ?label WHERE { brick:Start_Stop_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Isolation Valve?\nentitybrick:Isolation_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Isolation_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which general category does static pressure belong to?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?category WHERE { brick:Static_Pressure skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Enthalpy in simple terms.\nentitybrick:Enthalpy",
    "target_text": "SELECT ?definition WHERE { brick:Enthalpy skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Drive Ready Status a subclass of another status?\nentitybrick:Drive_Ready_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Drive_Ready_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the substance for Air Temperature Sensor?\nentitybrick:Air_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Air_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Wind Direction?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?label WHERE { brick:Wind_Direction rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical CO  trend for CO  Sensor 5.03 from 01/01/2025 to 31/01/2025.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does BrickSchema name the Electric Radiator?\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Electric_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.05 of Carbon monoxide ?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Heat' a tag for Heating Ventilation Air Conditioning System?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "ASK WHERE { brick:Heating_Ventilation_Air_Conditioning_System brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the live measurement of the zone supply air temperature in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the measurement of Water Differential Pressure Setpoint?\nentitybrick:Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Differential_Pressure_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Passive Chilled Beam a subclass of?\nentitybrick:Passive_Chilled_Beam",
    "target_text": "SELECT ?parent WHERE { brick:Passive_Chilled_Beam rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Formaldehyde Level sensor 5.01 at?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Standby Unit On Off Status indicate?\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Standby_Unit_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether Entity is an owl:Class.\nentitybrick:Entity",
    "target_text": "ASK WHERE { brick:Entity a owl:Class . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge condenser water temperature sensor in the East Side.\nentitybldg:East_Side \n brick:Discharge_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Condenser_Water_Temperature_Sensor ; brick:hasLocation bldg:East_Side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of valve is a Condenser Water Isolation Valve?\nentitybrick:Condenser_Water_Isolation_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Isolation_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the zone supply air temperature values for RM107A yesterday?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of Air Humidity Sensor 5.03 compare to our baseline standards?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Smoke Detection Alarm have the tag 'Discharge'?\nentitybrick:Supply_Air_Smoke_Detection_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Smoke_Detection_Alarm brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Differential Pressure Setpoint set?\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Differential_Pressure_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the open close status in the East Side.\nentitybldg:East_Side \n brick:Open_Close_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Open_Close_Status ; brick:hasLocation bldg:East_Side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the solar azimuth angle sensor in the Bar.\nentitybldg:Bar \n brick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Solar_Azimuth_Angle_Sensor ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.03's Alcohol Vapor MQ3 Gas Sensor  data by hour, day, and week.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.01 based on its Alcohol Vapor MQ3 Gas Sensor  data logs?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a CO Level Sensor measure?\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Stages Status extends.\nentitybrick:Stages_Status",
    "target_text": "SELECT ?parent WHERE { brick:Stages_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the functionality of the Disable Command.\nentitybrick:Disable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Disable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which spaces are inside RM103?\nentitybrick:hasPart",
    "target_text": "SELECT ?room WHERE { bldg:RM103 brick:hasPart ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Relief Damper have?\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?tag WHERE { brick:Relief_Damper brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the CO  Sensor 5.03 set up?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is PM2.5 particulate matter Level Sensor 5.04?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current loop chilled water supply temperature measurement for the chiller?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Fire Safety Equipment?\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT ?label WHERE { brick:Fire_Safety_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Effective Air Temperature Setpoint.\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Effective_Air_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does an Absolute Humidity Sensor monitor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Retail Room a subclass of?\nentitybrick:Retail_Room",
    "target_text": "SELECT ?parent WHERE { brick:Retail_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  CO  Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air temperature high reset setpoint in the Elevator.\nentitybldg:Elevator \n brick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Water Alarm.\nentitybrick:Water_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Battery Energy Storage System classified?\nentitybrick:Battery_Energy_Storage_System",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Energy_Storage_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?tag WHERE { brick:Overridden_On_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Team Room.\nentitybrick:Team_Room",
    "target_text": "SELECT ?definition WHERE { brick:Team_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Temperature Differential Reset Setpoint is called.\nentitybrick:Temperature_Differential_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Differential_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the substances that are narrower than Solid.\nentitybrick:Solid",
    "target_text": "SELECT ?narrower WHERE { brick:Solid skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a CO2 Differential Sensor belong to?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO2_Differential_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Water Loss Alarm.\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for  Air Humidity Sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Blind?\nentitybrick:Blind",
    "target_text": "SELECT ?definition WHERE { brick:Blind skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the seeAlso link for Refrigerant?\nentitybrick:Refrigerant",
    "target_text": "SELECT ?link WHERE { brick:Refrigerant rdfs:seeAlso ?link . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum LPG Natural Gas Town MQ5 Gas Sensor  recorded by Sensor 5.03 last week?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Point call itself?\nentitybrick:Point",
    "target_text": "SELECT ?label WHERE { brick:Point rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes of the Entering Condenser Water Flow Sensor.\nentitybrick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Condenser_Water_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the deceleration time setpoint in the Sauna.\nentitybldg:Sauna \n brick:Deceleration_Time_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Deceleration_Time_Setpoint ; brick:hasLocation bldg:Sauna ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall return air temperature statistics for AHU 02 for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where  PM10 particulate matter Level Sensor 5.03 is placed.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air humidity setpoint in the Attic.\nentitybldg:Attic \n brick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Humidity_Setpoint ; brick:hasLocation bldg:Attic ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.04 measuring  Air Quality Level at the moment?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does an Absorption Chiller belong to?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader class of Start Stop Command?\nentitybrick:Start_Stop_Command",
    "target_text": "SELECT ?parent WHERE { brick:Start_Stop_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a label defined for Building?\nentitybrick:Building",
    "target_text": "ASK { brick:Building rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the room served by VAVRM120.\nentitybrick:feeds",
    "target_text": "SELECT ?room WHERE { bldg:VAVRM120 brick:feeds ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are used to categorize a CO Differential Sensor?\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:CO_Differential_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the inverse property of 'feeds'?\nentitybrick:feeds",
    "target_text": "SELECT ?inverse WHERE { brick:feeds owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas level from sensor 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to a Centrifugal Chiller?\nentitybrick:Centrifugal_Chiller",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Centrifugal_Chiller rdfs:subClassOf ?superclass . brick:Centrifugal_Chiller brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  Ethyl Alcohol /C2H5CH sensor 5.04 and where is it set up?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass(es) of the Chilled Water Supply Temperature Sensor.\nentitybrick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Chilled_Water_Supply_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Discharge Air Flow Sensor do?\nentitybrick:Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  PM10 particulate matter Level Sensor measurements from Sensor 5.03 day-to-day?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the CO2  levels recorded by Sensor 5.03?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of an Average Exhaust Air Static Pressure Sensor?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the parent classes of the Min Chilled Water Differential Pressure Setpoint Limit?\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Unoccupied Air Temperature Heating Setpoint.\nentitybrick:Unoccupied_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Air_Temperature_Heating_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Exhaust Air Differential Pressure Sensor?\nentitybrick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Relief Damper.\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?label WHERE { brick:Relief_Damper rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Floor is equivalent to Storey.\nentitybrick:Floor",
    "target_text": "ASK WHERE { brick:Floor owl:equivalentClass brick:Storey . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Outside Air Temperature Low Reset Setpoint?\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name for  Air Humidity Sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Air Humidity Sensor 5.05 set up?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical measurement is set by the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Hot_Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for PM10 particulate matter Level Sensor 5.04.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Speed Command.\nentitybrick:Speed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Speed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor from room 5.03 and specify its type.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  PM1 particulate matter Level Sensor 5.04 located?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is NO2 Sensor 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for the zone supply air temperature in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is   Ethyl Alcohol /C2H5CH Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum  Air Quality Level in sensor 5.02 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Deionised Water Level Sensor.\nentitybrick:Deionised_Water_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Deionised_Water_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which VAV system does damperVAVRM107B belong to?\nentitybrick:isPartOf",
    "target_text": "SELECT ?system WHERE { bldg:damperVAVRM107B brick:isPartOf ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone supply air temperature sensor indicate in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Leaving Chilled Water Temperature Sensor includes the tag 'Chilled'.\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Chilled . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Alcohol Vapor MQ3 Gas Sensor  5.05 installed?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Energy Sensor.\nentitybrick:Energy_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Energy_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Unit Failure Alarm?\nentitybrick:Unit_Failure_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Unit_Failure_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Temperature readings from Sensor 5.03?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the official label for Meter.\nentitybrick:Meter",
    "target_text": "SELECT ?label WHERE { brick:Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the  PM2.5 particulate matter Level Sensor measurements from sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hum5.59 located?\nentitybldg:hum5.59",
    "target_text": "SELECT ?location WHERE { bldg:hum5.59 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  Ethyl Alcohol /C2H5CH Sensor 5.04 hanging out?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied return air temperature setpoint in the east side.\nentitybldg:east-side \n brick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Return_Air_Temperature_Setpoint ; brick:hasLocation bldg:east-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a direction sensor a subclass of any other type?\nentitybrick:Direction_Sensor",
    "target_text": "SELECT ?category WHERE { brick:Direction_Sensor rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.07 located?\nentitybldg:dust5.07",
    "target_text": "SELECT ?location WHERE { bldg:dust5.07 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Economizer do?\nentitybrick:Economizer",
    "target_text": "SELECT ?definition WHERE { brick:Economizer skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the narrower concepts of PhasorAngle.\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?narrowerConcept WHERE { brick:Phasor_Angle skos:narrower ?narrowerConcept . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM1_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which air humidity sensor 5.05 are we talking about and where is it placed?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PM1_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the heating mode command for RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Alternating Current Frequency use 'HZ' as a measurement unit?\nentitybrick:Alternating_Current_Frequency",
    "target_text": "ASK { brick:Alternating_Current_Frequency qudt:applicableUnit unit:HZ . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes a Box Mode Command?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Room Air Temperature Setpoint state as its label?\nentitybrick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Room_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  Air Quality sensor measured by Sensor 5.05 during peak occupancy hours?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Domestic Hot Water Temperature Sensor related to Leaving Hot Water Temperature Sensor?\nentitybrick:Leaving_Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Domestic_Hot_Water_Temperature_Sensor rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Cinema.\nentitybldg:Cinema \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Tint Command sets.\nentitybrick:Tint_Command",
    "target_text": "SELECT ?definition WHERE { brick:Tint_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where are Illuminance Setpoints applied in the building?\nentitybrick:Illuminance_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Illuminance_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the Sound Noise loudness Sensor  readings from Sensor 5.04 have triggered any automated health alerts recently.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the speed setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Speed_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Speed_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything stored about a Change Filter Alarm.\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Change_Filter_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Zone Air Humidity Sensor?\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Humidity_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain the Heating Demand Setpoint?\nentitybrick:Heating_Demand_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Heating_Demand_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Reception.\nentitybrick:Reception",
    "target_text": "SELECT ?property ?value WHERE { brick:Reception ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for PM10 particulate matter Level Sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Pre Filter Status have?\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?tag WHERE { brick:Pre_Filter_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to Frequency Setpoint?\nentitybrick:Frequency_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Frequency_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Air Humidity Sensor 5.04 hanging out?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of space is an Atrium?\nentitybrick:Atrium",
    "target_text": "SELECT ?superclass WHERE { brick:Atrium rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Ethyl Alcohol /C2H5CH Sensor 5.03 is keeping it real with our smart building  quality standards?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for CO  Sensor 5.01 over the last six months?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Unoccupied Return Air Temperature Setpoint include the tag 'Heat'?\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  Air Quality Level values from sensor 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Chilled Water Discharge Flow Sensor?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Discharge_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Chilled Water Differential Pressure Load Shed Setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Phasor Angle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?label WHERE { brick:Phasor_Angle rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the constraints specified for a Bypass Water Flow Setpoint?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Bypass_Water_Flow_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering chilled water flow sensor in the central area.\nentitybldg:central-area \n brick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Chilled_Water_Flow_Sensor ; brick:hasLocation bldg:central-area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does Frequency Setpoint belong to?\nentitybrick:Frequency_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Frequency_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in Alcohol Vapor MQ3 Gas Sensor  levels from Sensor 5.02 over the last three months?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Zone Unoccupied Load Shed Command a subclass of?\nentitybrick:Zone_Unoccupied_Load_Shed_Command",
    "target_text": "SELECT ?parent WHERE { brick:Zone_Unoccupied_Load_Shed_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Electrical System have?\nentitybrick:Electrical_System",
    "target_text": "SELECT ?tag WHERE { brick:Electrical_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for ΔCOConcentration?\nentitybrick:Differential_CO_Concentration",
    "target_text": "SELECT ?label WHERE { brick:Differential_CO_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest measurement from Alcohol Vapor MQ3 Gas Sensor  5.01.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the name assigned to the Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Exhaust Air Differential Pressure Sensor?\nentitybrick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  CO2  Sensor 5.04?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Noncondensing Natural Gas Boiler?\nentitybrick:Noncondensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?label WHERE { brick:Noncondensing_Natural_Gas_Boiler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between  PM10 particulate matter Level Sensor and temperature in the area monitored by Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for Combustible Gas Smoke MQ2 Sensor  from 5.05?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Employee Entrance Lobby a subclass of another entity?\nentitybrick:Employee_Entrance_Lobby",
    "target_text": "SELECT ?superclass WHERE { brick:Employee_Entrance_Lobby rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Output Frequency Sensor.\nentitybrick:Output_Frequency_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Output_Frequency_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average LPG Natural Gas Town MQ5 Gas Sensor  level recorded by  Sensor 5.04 over the past 24 hours?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Differential Pressure Load Shed Status.\nentitybrick:Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { brick:Differential_Pressure_Load_Shed_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is set for the zone reheat valve in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the Oxygen,O2 sensor installed in 5.01 and what is its classification?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Heating Supply Air Flow Setpoint Limit has the tag 'Setpoint'?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is CO  Sensor 5.05 found?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Leaving Water Temperature Setpoint extends.\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  Illuminance Sensor reading from Sensor 5.03?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the emergency power off system status in the Zone C.\nentitybldg:Zone_C \n brick:Emergency_Power_Off_System_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Emergency_Power_Off_System_Status ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the detailed description of power used to measure energy.\nentitybrick:Power",
    "target_text": "SELECT ?definition WHERE { brick:Power skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule references for Wing?\nentitybrick:Wing",
    "target_text": "SELECT ?rule WHERE { brick:Wing sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving medium temperature hot water temperature low reset setpoint in the Garden.\nentitybldg:Garden \n brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Air Quality Level 5.03 at, like, in the building?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ozone_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.62 airq5.62?\nentitybldg:hum5.62",
    "target_text": "SELECT ?room WHERE { bldg:hum5.62 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from PM2.5 particulate matter Level Sensor 5.01 for a specific date, for example 2025-02-15.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Final Filter?\nentitybrick:Final_Filter",
    "target_text": "SELECT ?superclass WHERE { brick:Final_Filter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Preheat Hot Water Valve.\nentitybrick:Preheat_Hot_Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Preheat_Hot_Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Effective Room Air Temperature Setpoint fall?\nentitybrick:Effective_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Effective_Room_Air_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the defining resource of Occupancy_Count?\nentitybrick:Occupancy_Count",
    "target_text": "SELECT ?resource WHERE { brick:Occupancy_Count rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of PM2.5 particulate matter Level Sensor 5.05?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Mixed Damper?\nentitybrick:Mixed_Damper",
    "target_text": "SELECT ?property ?value WHERE { brick:Mixed_Damper ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Entering Chilled Water Flow Setpoint?\nentitybrick:Entering_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Chilled_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Condenser Water Pump work?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.35 located?\nentitybldg:hcho5.35",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.35 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the west side.\nentitybldg:west-side \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Max Frequency Command typically used?\nentitybrick:Max_Frequency_Command",
    "target_text": "SELECT ?definition WHERE { brick:Max_Frequency_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for   CO2  Sensor 5.04.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all details for the Cooling Supply Air Temperature Deadband Setpoint?\nentitybrick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label ?definition ?tag ?quantity ?substance WHERE { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint rdfs:label ?label . OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint skos:definition ?definition . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasSubstance ?substance . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'HVAC' one of the tags for VAVRM112?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM112 brick:hasTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category ofCombustible Gas Smoke MQ2 Sensor 5.03.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Low Discharge Air Flow Alarm.\nentitybrick:Low_Discharge_Air_Flow_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Low_Discharge_Air_Flow_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that   Ethyl Alcohol /C2H5CH Sensor 5.02 falls under.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Supply Water Temperature Sensor?\nentitybrick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to the Return Air Differential Pressure Sensor?\nentitybrick:Return_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Differential_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's CO2  output compare with other sensors in the building?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for Alcohol Vapor MQ3 Gas Sensor  5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's  PM2.5 particulate matter Level Sensor measurements over the last quarter.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the setpoints for shedding load based on medium temperature hot water differential pressure.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of Dry_Bulb_Temperature.\nentitybrick:Dry_Bulb_Temperature",
    "target_text": "SELECT ?label WHERE { brick:Dry_Bulb_Temperature rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.01's NO2 readings align with our smart building's sustainability KPIs?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the active zone air damper command for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  TVOC  sensor 5.03 is in use and what is its installation spot?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the TVOC  readings of  TVOC  Sensor 5.02 compared to its normal range?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the Combustible Gas Smoke MQ2 Sensor  data from Sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Acceleration Time Setpoint fall?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for Position?\nentitybrick:Position",
    "target_text": "SELECT ?definition WHERE { brick:Position skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for Air Quality sensor 5.05.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of Frost Sensor?\nentitybrick:Frost_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Frost_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Flow High Reset Setpoint include the tag 'Reset'?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:Reset . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What reading does the sensor provide for the zone supply air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Heating Discharge Air Temperature Deadband Setpoint's purpose?\nentitybrick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for Illuminance Sensor 5.01?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Illuminance_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Phasor?\nentitybrick:Phasor",
    "target_text": "SELECT ?label WHERE { brick:Phasor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Elevator Shaft.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?tag WHERE { brick:Elevator_Shaft brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported bySound Noise loudness Sensor  5.01 over the past week?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for Oxygen,O2 Sensor 5.05 and its reliability trends.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does a Capacity Sensor monitor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Capacity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Water Heater?\nentitybrick:Water_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Water_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM2.5 particulate matter Level Sensor 5.04 and where is it located?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the CO2  data from Sensor 5.05.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for LPG Natural Gas Town MQ5 Gas Sensor  sensors 5.03 in our building?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags assigned to Standby Load Shed Command?\nentitybrick:Standby_Load_Shed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Standby_Load_Shed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define CurrentAngle?\nentitybrick:Current_Angle",
    "target_text": "SELECT ?definition WHERE { brick:Current_Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition of Deadband Setpoint?\nentitybrick:Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all details for the Entering Water Flow Setpoint?\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Entering_Water_Flow_Setpoint rdfs:label ?label . brick:Entering_Water_Flow_Setpoint skos:definition ?definition . OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available from Air Quality sensor 5.02?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the Oxygen,O2 data from sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.05 shows abnormal readings today.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Condenser Water Isolation Valve?\nentitybrick:Condenser_Water_Isolation_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Isolation_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for  Air temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone supply air flow reading for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied humidity setpoint in the Shop.\nentitybldg:Shop \n brick:Occupied_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Humidity_Setpoint ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the detailed air quality quantities under Air Quality?\nentitybrick:Air_Quality",
    "target_text": "SELECT ?narrower WHERE { brick:Air_Quality skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the humidity readings from Sensor 5.04 have triggered any automated health alerts recently.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Temporary Occupancy Status.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?definition WHERE { brick:Temporary_Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Mixed Air Temperature Setpoint a subclass of?\nentitybrick:Mixed_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Mixed_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch subclasses of Max Speed Setpoint Limit.\nentitybrick:Max_Speed_Setpoint_Limit",
    "target_text": "SELECT ?subclass WHERE { brick:Max_Speed_Setpoint_Limit rdfs:subClassOf ?subclass. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Fan Command.\nentitybrick:Fan_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Fan_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Supply' one of the tags for Supply Air Flow High Reset Setpoint?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest NO2 reading from  NO2 sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest Combustible Gas Smoke MQ2 Sensor  reading from Combustible Gas Smoke MQ2 Sensor  5.02.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.03 based on its Sound Noise loudness Sensor  data logs?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Static Pressure Setpoint?\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you point out the location for TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?category WHERE { brick:Access_Control_Equipment rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the deprecation message for Hot Water Supply Temperature Sensor.\nentitybrick:Hot_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?message WHERE { brick:Hot_Water_Supply_Temperature_Sensor brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest Formaldehyde Level sensor measurement from   Sensor 5.01.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded supply air temperature events for AHU 02 during the last weekend.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum mixed air temperature readings for AHU 02 from this morning.\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.01 regarding LPG Natural Gas Town MQ5 Gas Sensor ?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to a Change Filter Alarm?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . brick:Change_Filter_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is PM1 particulate matter Level Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Mixed Air Temperature Setpoint have?\nentitybrick:Mixed_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Mixed_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Max Unoccupied Heating Discharge Air Flow Setpoint Limit define in BrickSchema?\nentitybrick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condensing Natural Gas Boiler labeled in the ontology?\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?label WHERE { brick:Condensing_Natural_Gas_Boiler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Step Parameter affect pressure regulation?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone air control temperature setpoint for RM107A over the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current value of the zone air control temperature setpoint in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Carbon monoxide  sensor 5.05 status across the smart home?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent entity of Min Discharge Air Temperature Setpoint Limit?\nentitybrick:Min_Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Discharge_Air_Temperature_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which equivalent class and alias are linked to the Discharge Air Temperature Cooling Setpoint?\nentitybrick:Discharge_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?eq ?alias WHERE { brick:Discharge_Air_Temperature_Cooling_Setpoint owl:equivalentClass ?eq . brick:Discharge_Air_Temperature_Cooling_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current CO2  stats from sensor 5.03.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the output voltage sensor in the west side.\nentitybldg:west-side \n brick:Output_Voltage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Output_Voltage_Sensor ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Air?\nentitybrick:Air",
    "target_text": "SELECT ?definition WHERE { brick:Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Space Heater.\nentitybrick:Space_Heater",
    "target_text": "SELECT ?label WHERE { brick:Space_Heater rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.01's  PM10 particulate matter Level Sensor readings and overall building air quality index?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Weather Station.\nentitybrick:Weather_Station",
    "target_text": "SELECT ?label WHERE { brick:Weather_Station rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level fromSound Noise loudness Sensor  5.02 for a specific date, for example 2025-02-15.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the medium temperature hot water differential pressure load shed setpoints?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does PM10 particulate matter Level Sensor 5.05 have?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective target zone air temperature setpoint in the Floor 1.\nentitybldg:Floor_1 \n brick:Effective_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Floor_1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many loop chilled water supply temperature readings were taken for the chiller during the evening period today?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.01 to compute an overall Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas index.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is unit PSI an applicable unit for Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "ASK WHERE { brick:Velocity_Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Liquid represent?\nentitybrick:Liquid",
    "target_text": "SELECT ?definition WHERE { brick:Liquid skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does PhasorAngle represent?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?definition WHERE { brick:Phasor_Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for   TVOC  Sensor 5.02.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Point' one of the tags for Supply Air Duct Pressure Status?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "ASK WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Fault Status represent?\nentitybrick:Fault_Status",
    "target_text": "SELECT ?definition WHERE { brick:Fault_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick  PM2.5 particulate matter Level Sensor 5.04 in the building?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Ozone Level Sensor have?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ozone_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Majlis defined?\nentitybrick:Majlis",
    "target_text": "SELECT ?definition WHERE { brick:Majlis skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an angle?\nentitybrick:Angle",
    "target_text": "SELECT ?definition WHERE { brick:Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Rain Level Sensor?\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Rain_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.69 located?\nentitybldg:mqtwo5.69",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.69 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the badge or label for Heat Exchanger.\nentitybrick:Heat_Exchanger",
    "target_text": "SELECT ?label WHERE { brick:Heat_Exchanger rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Thermally Activated Building System Panel.\nentitybrick:Thermally_Activated_Building_System_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Thermally_Activated_Building_System_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  quality trends over the past month using NO2 sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air humidity sensor in the west-zone along with its label.\nentitybldg:west",
    "target_text": "SELECT ?sensor ?label WHERE { ?sensor a brick:Air_Humidity_Sensor ; brick:hasLocation bldg:west-Zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest Oxygen,O2 sensor data for 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Chilled Water Differential Pressure Step Parameter play in HVAC systems?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by the Return Air Enthalpy Sensor?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does access control equipment fall?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?category WHERE { brick:Access_Control_Equipment rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  PM1 particulate matter Level Sensor trends and their variation over the last 24 hours in room or sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Battery Energy Storage System different from other energy storage systems?\nentitybrick:Battery_Energy_Storage_System",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Energy_Storage_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Hot_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Exhaust Air Stack Flow Setpoint define?\nentitybrick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Exhaust_Air_Stack_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Air Flow Setpoint has the tag 'Flow'?\nentitybrick:Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Air_Flow_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Outside Air CO Sensor?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_CO_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Max Unoccupied Heating Discharge Air Flow Setpoint Limit in BrickSchema?\nentitybrick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name forCombustible Gas Smoke MQ2 Sensor 5.03.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are broader than Air?\nentitybrick:Air",
    "target_text": "SELECT ?broader WHERE { brick:Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the Oxygen,O2 measurements from sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Warmest Zone Air Temperature Sensor.\nentitybrick:Warmest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Warmest_Zone_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine if Ethyl Alcohol /C2H5CH Sensor 5.05 meets the energy efficiency and sustainability criteria set by our smart building guidelines.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas reading from Sensor 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?parent WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does BrickSchema define any dimension or QUDT reference for Illuminance?\nentitybrick:Illuminance",
    "target_text": "SELECT ?unit ?qudt WHERE { brick:Illuminance qudt:applicableUnit ?unit . OPTIONAL { brick:Illuminance brick:hasQUDTReference ?qudt . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Describe the Heat Sink Temperature Sensor.\nentitybrick:Heat_Sink_Temperature_Sensor",
    "target_text": "SELECT ?sensor WHERE { ?sensor a brick:Heat_Sink_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average CO2  level recorded by  CO2  Sensor 5.03 over the past 24 hours?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the loop chilled water return temperature log for the chiller for the last 15 minutes.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements from Air Quality Level 5.03 over the past 24 hours.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Mail Room?\nentitybrick:Mail_Room",
    "target_text": "SELECT ?tag WHERE { brick:Mail_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the wind direction sensor in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Wind_Direction_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Wind_Direction_Sensor ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Mixed Air Flow Sensor?\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the textual representation of Outside Fan?\nentitybrick:Outside_Fan",
    "target_text": "SELECT ?label WHERE { brick:Outside_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.03's Oxygen,O2 data by hour, day, and week.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader quantity does Dry_Bulb_Temperature belong to?\nentitybrick:Dry_Bulb_Temperature",
    "target_text": "SELECT ?broader WHERE { brick:Dry_Bulb_Temperature skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What conditions must Availability Status follow?\nentitybrick:Availability_Status",
    "target_text": "SELECT ?rule WHERE { brick:Availability_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Condenser Water Temperature Sensor include Water Temperature Sensor?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Condenser_Water_Temperature_Sensor rdfs:subClassOf brick:Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  PM1 particulate matter Level Sensor 5.03 set up at?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest chilled water supply temperature event recorded for the building chilled water system?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's Combustible Gas Smoke MQ2 Sensor  5.01 located?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied target zone air temperature setpoint in the Lawn.\nentitybldg:Lawn \n brick:Occupied_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Alarm Delay Parameter'.\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Alarm_Delay_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Condenser Water Temperature Sensor?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the Utility Room.\nentitybldg:Utility_Room \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Max Water Temperature Setpoint define?\nentitybrick:Max_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Max_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Common Space?\nentitybrick:Common_Space",
    "target_text": "SELECT ?label WHERE { brick:Common_Space rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label, definition, and tags for the Boiler?\nentitybrick:Boiler",
    "target_text": "SELECT ?label ?definition ?tag WHERE { brick:Boiler rdfs:label ?label . brick:Boiler skos:definition ?definition . OPTIONAL { brick:Boiler brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water discharge flow setpoint in the Game Room.\nentitybldg:Game_Room \n brick:Hot_Water_Discharge_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Discharge_Flow_Setpoint ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which setpoint class mirrors the function of the Discharge Air Flow High Reset Setpoint?\nentitybrick:Discharge_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Flow_High_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Pressure' a tag for Pressure Sensor?\nentitybrick:Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Pressure_Sensor brick:hasAssociatedTag tag:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What other name does FCU go by in BrickSchema?\nentitybrick:FCU",
    "target_text": "SELECT ?alias WHERE { brick:FCU brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Floor' one of the tags for floor1?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:floor1 brick:hasTag tag:Floor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01 set up?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the TVOC  sensor in 5.02, including its category.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a DC Bus Voltage Sensor?\nentitybrick:DC_Bus_Voltage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:DC_Bus_Voltage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Gain Parameter?\nentitybrick:Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current TVOC  values from Sensor 5.02 compare with historical averages?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.05 located?\nentitybldg:light5.05",
    "target_text": "SELECT ?location WHERE { bldg:light5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Chilled Water Differential Pressure Integral Time Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective return air temperature setpoint in the Break Room.\nentitybldg:Break_Room \n brick:Effective_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Return_Air_Temperature_Setpoint ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Relay.\nentitybrick:Relay",
    "target_text": "SELECT ?tag WHERE { brick:Relay brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Alcohol Vapor MQ3 Gas Sensor  5.04 is in use and what is its installation spot?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected LPG Natural Gas Town MQ5 Gas Sensor  levels over the past quarter?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's  PM10 particulate matter Level Sensor output contribute to the overall building air quality index?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the pump start/stop command sensor updating on the chiller during the last hour?\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is Air Temperature Sensor 5.05 placed?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Illuminance Sensor has in BrickSchema.\nentitybrick:Illuminance_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Illuminance_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the humidifier fault status in the Classroom.\nentitybldg:Classroom \n brick:Humidifier_Fault_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Humidifier_Fault_Status ; brick:hasLocation bldg:Classroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.33?\nentitybldg:mqtwo5.33",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.33 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a cooling demand sensor a subclass of any other type?\nentitybrick:Cooling_Demand_Sensor",
    "target_text": "SELECT ?category WHERE { brick:Cooling_Demand_Sensor rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Air Humidity Sensor 5.02 showing any signs of potential failure based on recent data?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Illuminance Setpoint?\nentitybrick:Illuminance_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Illuminance_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define a direction status?\nentitybrick:Direction_Status",
    "target_text": "SELECT ?definition WHERE { brick:Direction_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Natural Gas Usage Sensor?\nentitybrick:Natural_Gas_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Condenser Water Flow Sensor.\nentitybrick:Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Condenser_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average zone percent air flow reading for RM107A in the past 10 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for   TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much temperature is recorded by sensor 5.03 right now?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow setpoint in the Mechanical Room.\nentitybldg:Mechanical_Room \n brick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Setpoint ; brick:hasLocation bldg:Mechanical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current CO  reading from  CO  Sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Occupied Return Air Temperature Setpoint.\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Return_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there an economizer measurement associated with the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.ECONOMIZER . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Ozone Level Sensor?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ozone_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  PM1 particulate matter Level Sensor trends and their variation over the last 24 hours in room or sensor 5.01.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'HVAC' a tag for HVAC Zone?\nentitybrick:HVAC_Zone",
    "target_text": "ASK WHERE { brick:HVAC_Zone brick:hasAssociatedTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the descriptive text BrickSchema provides for the Fan Command.\nentitybrick:Fan_Command",
    "target_text": "SELECT ?definition WHERE { brick:Fan_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Exhaust Air Velocity Pressure Sensor?\nentitybrick:Exhaust_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Velocity_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Mixed Air Flow Sensor.\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating supply air flow setpoint in the Zone C.\nentitybldg:Zone_C \n brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags are linked to the Low Humidity Alarm?\nentitybrick:Low_Humidity_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Low_Humidity_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Water Loop.\nentitybrick:Water_Loop",
    "target_text": "SELECT ?definition WHERE { brick:Water_Loop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  Ethyl Alcohol /C2H5CH sensor 5.03 along with its location in the building.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is set by Hot Water Flow Setpoint?\nentitybrick:Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Hot_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Reheat Valve refer to?\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Reheat_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Elevator?\nentitybrick:Elevator",
    "target_text": "SELECT ?tag WHERE { brick:Elevator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which devices are configured with a Humidity Tolerance Parameter?\nentitybrick:Humidity_Tolerance_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:Humidity_Tolerance_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Absolute Humidity Sensor measure?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Absolute_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air differential pressure setpoint in the Break Room.\nentitybldg:Break_Room \n brick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings from Sensor 5.03 have triggered any automated health alerts recently.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current control command for the zone air damper in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe a Hallway?\nentitybrick:Hallway",
    "target_text": "SELECT ?definition WHERE { brick:Hallway skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.03 meet our smartness standards?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Hot Water Flow Setpoint is a subclass of Water Flow Setpoint.\nentitybrick:Hot_Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Hot_Water_Flow_Setpoint rdfs:subClassOf brick:Water_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Overridden On Status?\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_On_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass of Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Chilled Water Differential Pressure Proportional Band Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone percent air flow for RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the  PM1 particulate matter Level Sensor levels recorded by Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that   TVOC  Sensor 5.01 falls under.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air temperature high reset setpoint in the north west zone.\nentitybldg:north-west-zone \n brick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is PM10 Sensor labeled?\nentitybrick:PM10_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM10_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Cooling Demand Setpoint?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Cooling_Demand_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air control temperature setpoint for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Dewpoint Setpoint?\nentitybrick:Dewpoint_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Dewpoint_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the Calorie-based options for Thermal Energy measurement?\nentitybrick:Thermal_Energy",
    "target_text": "SELECT ?unit WHERE { brick:Thermal_Energy qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), 'CAL')) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Deionized Water Alarm?\nentitybrick:Deionized_Water_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Deionized_Water_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  NO2 Sensor 5.05's readings over the past 48 hours.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective air temperature cooling setpoint in the Vestibule.\nentitybldg:Vestibule \n brick:Effective_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Air_Temperature_Cooling_Setpoint ; brick:hasLocation bldg:Vestibule ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which systems in the building are controlled using the Lead On Off Command?\nentitybrick:hasCommand",
    "target_text": "SELECT ?device WHERE { ?device brick:hasCommand brick:Lead_On_Off_Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Outside Damper refer to?\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Damper skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many attributes the Elevator Space has.\nentitybrick:Elevator_Space",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Elevator_Space ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.02 and tell me its class.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name used to represent chilled water?\nentitybrick:Chilled_Water",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Relative Humidity Sensor measure?\nentitybrick:Relative_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Relative_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.68 located?\nentitybldg:light5.68",
    "target_text": "SELECT ?location WHERE { bldg:light5.68 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?label WHERE { brick:Control_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Combustible Gas Smoke MQ2 Sensor  is set up in room 5.03, and what category does it fall under?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of  PM10 particulate matter Level Sensor fluctuations recorded by Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Air Temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does CO Sensor have a label, definition, and measured quantity defined?\nentitybrick:CO_Sensor",
    "target_text": "ASK { brick:CO_Sensor rdfs:label ?label; skos:definition ?definition; brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for a Broadcast Room?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?rule WHERE { brick:Broadcast_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Photovoltaic Current Output Sensor.\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Photovoltaic_Current_Output_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which higher-level classes does Outside Fan belong to?\nentitybrick:Outside_Fan",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Fan rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  PM1 particulate matter Level Sensor measurements from Sensor 5.05 day-to-day?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Low Outside Air Lockout Temperature Differential Parameter?\nentitybrick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a definition of the Luminance Command?\nentitybrick:Luminance_Command",
    "target_text": "SELECT ?definition WHERE { brick:Luminance_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow setpoint in the Theater.\nentitybldg:Theater \n brick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Theater ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Static Pressure.\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Thermal Power Meter is used for.\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Thermal_Power_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Parameter.\nentitybrick:Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of the Fan Speed Command?\nentitybrick:Fan_Speed_Command",
    "target_text": "SELECT ?definition WHERE { brick:Fan_Speed_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the high temperature hot water return temperature sensor in the Electrical Room.\nentitybldg:Electrical_Room \n brick:High_Temperature_Hot_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:High_Temperature_Hot_Water_Return_Temperature_Sensor ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Lockout Status?\nentitybrick:Lockout_Status",
    "target_text": "SELECT ?tag WHERE { brick:Lockout_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Domestic Hot Water System Enable Command?\nentitybrick:Domestic_Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?rule WHERE { brick:Domestic_Hot_Water_System_Enable_Command sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does an air handling unit filter air?\nentitybrick:AHU",
    "target_text": "ASK WHERE { brick:AHU skos:definition ?def . FILTER(CONTAINS(LCASE(STR(?def)), \"filtration\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which URL is provided as additional information for Radiant Panel?\nentitybrick:Radiant_Panel",
    "target_text": "SELECT ?seeAlso WHERE { brick:Radiant_Panel rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone reheat valve command for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Hazardous Materials Storage?\nentitybrick:Hazardous_Materials_Storage",
    "target_text": "SELECT ?definition WHERE { brick:Hazardous_Materials_Storage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Ethyl Alcohol /C2H5CH  sensor 5.05 status across the smart home?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that matches the Discharge Air Temperature Deadband Setpoint.\nentitybrick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Deadband_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.31?\nentitybldg:cotwo5.31",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.31 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.14?\nentitybldg:co5.14",
    "target_text": "SELECT ?room WHERE { bldg:co5.14 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What categories apply to RM107B?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM107B brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Speed Reset Command.\nentitybrick:Speed_Reset_Command",
    "target_text": "SELECT ?label WHERE { brick:Speed_Reset_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Emergency Push Button Status?\nentitybrick:Emergency_Push_Button_Status",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Push_Button_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.02's  Air Quality sensor readings and overall building air quality index?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the NO2 readings from Sensor 5.01?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the  Illuminance Sensor installed in 5.05 and what is its classification?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Illuminance_Sensor_5.05 rdfs:label ?label . bldg:Illuminance_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Entering Water Temperature Setpoint?\nentitybrick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the definition of Mixed Air.\nentitybrick:Mixed_Air",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone supply air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Heating Ventilation Air Conditioning System has the tag 'HVAC'?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "ASK WHERE { brick:Heating_Ventilation_Air_Conditioning_System brick:hasAssociatedTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Wind Direction Sensor.\nentitybrick:Wind_Direction_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Wind_Direction_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for  NO2 Sensor 5.04.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Entering Water Temperature Setpoint.\nentitybrick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Dehumidification Start Stop Status?\nentitybrick:Dehumidification_Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Dehumidification_Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the change reported by  Ethyl Alcohol /C2H5CH Sensor 5.02 over the past week?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Max Discharge Air Static Pressure Setpoint Limit identified in the ontology?\nentitybrick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water flow sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:Leaving_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Flow_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if thermal transmittance is an EntityProperty.\nentitybrick:thermalTransmittance",
    "target_text": "ASK WHERE { brick:thermalTransmittance a brick:EntityProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Building Air.\nentitybrick:Building_Air",
    "target_text": "SELECT ?label WHERE { brick:Building_Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Measured Power Output?\nentitybrick:measuredPowerOutput",
    "target_text": "SELECT ?label WHERE { brick:measuredPowerOutput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Entering Hot Water Temperature Load Shed Status.\nentitybrick:Entering_Hot_Water_Temperature_Load_Shed_Status",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Hot_Water_Temperature_Load_Shed_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Sensor.\nentitybrick:Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Heating Demand Sensor in BrickSchema?\nentitybrick:Heating_Demand_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Demand_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Bypass Water.\nentitybrick:Bypass_Water",
    "target_text": "SELECT ?label WHERE { brick:Bypass_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does isPointOf represent?\nentitybrick:isPointOf",
    "target_text": "SELECT ?definition WHERE { brick:isPointOf skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Formaldehyde Level sensor is set up in room 5.01, and what category does it fall under?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the active heating mode configuration for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Hot Water System is a subclass of Water System.\nentitybrick:Hot_Water_System",
    "target_text": "ASK WHERE { brick:Hot_Water_System rdfs:subClassOf brick:Water_System . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.02's CO  levels and building occupancy patterns.\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Emergency Wash Station.\nentitybrick:Emergency_Wash_Station",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Wash_Station brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pressure setpoint in the Server Room.\nentitybldg:Server_Room \n brick:Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pressure_Setpoint ; brick:hasLocation bldg:Server_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass of Reset Setpoint.\nentitybrick:Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Natural Gas Usage Sensor.\nentitybrick:Natural_Gas_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Natural_Gas_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operational heating mode command in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about return air in air circulation.\nentitybrick:Return_Air",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air velocity pressure sensor in the Studio.\nentitybldg:Studio \n brick:Supply_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Reading Room.\nentitybldg:Reading_Room \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Reading_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Steam Valve.\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Supply' a tag for Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current  Illuminance Sensor stats from sensor 5.02.\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for humidity from 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Alarm Delay Parameter affect alarm response time?\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Alarm_Delay_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What was the zone percent air flow trend for RM107B during the last shift?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current CO  value from sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there alternative names for a Core Temperature Sensor?\nentitybrick:Embedded_Temperature_Sensor",
    "target_text": "SELECT ?similarSensor WHERE { ?similarSensor rdfs:subClassOf brick:Embedded_Temperature_Sensor . FILTER(?similarSensor != brick:Core_Temperature_Sensor) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Vent Operating Mode Status?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Vent_Operating_Mode_Status rdfs:label ?label . brick:Vent_Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the QUDT reference for Static Pressure.\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Static_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  Oxygen,O2 Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Chilled Water Differential Pressure Load Shed Setpoint'.\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags assigned to Thermal Power Sensor?\nentitybrick:Thermal_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Thermal_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of PM2.5 particulate matter Level Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that is equivalent to Discharge Air Flow Sensor.\nentitybrick:Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Flow_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does an Auditorium have?\nentitybrick:Auditorium",
    "target_text": "SELECT ?tag WHERE { brick:Auditorium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of the Fresh Air Setpoint Limit.\nentitybrick:Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Fresh_Air_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  CO2  Sensor 5.02 at?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Building Electrical Meter described using tags?\nentitybrick:Building_Electrical_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Building_Electrical_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential temperature sensor in the Bar.\nentitybldg:Bar \n brick:Chilled_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Temperature_Sensor ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by PM10 particulate matter Level Sensor 5.01's readings over the past 48 hours.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded chilled water return temperature events for the building chiller during the last weekend.\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Entering Water.\nentitybrick:Entering_Water",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the Alcohol Vapor MQ3 Gas Sensor  in 5.02 and state its sensor type.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which CO2  sensor is in room 5.04 and what sensor class it belongs to?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.04 rdfs:label ?label . bldg:CO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does an Absolute Humidity Sensor belong to?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Network Video Recorder.\nentitybrick:Network_Video_Recorder",
    "target_text": "SELECT ?label WHERE { brick:Network_Video_Recorder rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective air temperature heating setpoint in the Control Room.\nentitybldg:Control_Room \n brick:Effective_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.04 measuring Combustible Gas Smoke MQ2 Sensor  at the moment?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Static Pressure Proportional Band Parameter has the tag 'Band'.\nentitybrick:Supply_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag tag:Band . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering domestic hot water temperature sensor in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Entering_Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Domestic_Hot_Water_Temperature_Sensor ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Differential CO2 Concentration.\nentitybrick:Differential_CO2_Concentration",
    "target_text": "SELECT ?label WHERE { brick:Differential_CO2_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What other class is functionally identical to the Discharge Air Static Pressure Integral Time Parameter?\nentitybrick:Discharge_Air_Static_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Irradiance quantity?\nentitybrick:Irradiance",
    "target_text": "SELECT ?definition WHERE { brick:Irradiance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification ofCombustible Gas Smoke MQ2 Sensor 5.04?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature high reset setpoint in the Changing Room.\nentitybldg:Changing_Room \n brick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Changing_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the Oxygen,O2 sensor 5.05 and where is it located?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label forCombustible Gas Smoke MQ2 Sensor 5.03.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Pre Filter Status.\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?definition WHERE { brick:Pre_Filter_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.65?\nentitybldg:mqtwo5.65",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.65 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Peak Demand Sensor.\nentitybrick:Peak_Demand_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Peak_Demand_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Formaldehyde Level sensor value from sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone supply air temperature as detected in RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Condenser Water Temperature Sensor measure?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Temperature Differential Reset Setpoint work?\nentitybrick:Temperature_Differential_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Differential_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Sound Noise loudness Sensor  levels over the past quarter?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest Combustible Gas Smoke MQ2 Sensor  reading from Combustible Gas Smoke MQ2 Sensor  5.01.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Bypass Air Humidity Setpoint?\nentitybrick:Bypass_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Bypass_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does isLocationOf have an asymmetric property type?\nentitybrick:isLocationOf",
    "target_text": "ASK WHERE { brick:isLocationOf a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the CO  sensor 5.04 readings from yesterday.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What equipment feeds VAVRM120?\nentitybrick:isFedBy",
    "target_text": "SELECT ?source WHERE { bldg:VAVRM120 brick:isFedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity associated with the Energy Sensor.\nentitybrick:Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if HVAC Zone includes the tag 'Location'.\nentitybrick:HVAC_Zone",
    "target_text": "ASK WHERE { brick:HVAC_Zone brick:hasAssociatedTag tag:Location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category ofCombustible Gas Smoke MQ2 Sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the humidity sensor 5.04 for yesterday?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the operating substance for the Occupied Air Temperature Setpoint.\nentitybrick:Occupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Occupied_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Formaldehyde Level sensor 5.05?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return water temperature sensor in the Patio.\nentitybldg:Patio \n brick:Return_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Water_Temperature_Sensor ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes a Building Air Static Pressure Setpoint unique?\nentitybrick:Building_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for   TVOC  Sensor 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for zone supply air flow in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many outside air temperature readings were taken for AHU 02 during the evening period today?\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the complete metadata set for a Broadcast Room?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Broadcast_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the role of the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Enthalpy_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for NO2 Sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by Air Quality Level 5.04's readings over the past 48 hours.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of an Average Exhaust Air Static Pressure Sensor?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . brick:Average_Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the brick:hasQuantity property for the Electric Energy Sensor?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Electric_Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for Supply Air Integral Gain Parameter?\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Integral_Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rdfs:subClassOf relationship for the Embedded Temperature Setpoint.\nentitybrick:Embedded_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Embedded_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water differential pressure load shed status in the Atrium.\nentitybldg:Atrium \n brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much Sound Noise loudness Sensor  is recorded by sensor 5.03 right now?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Discharge Air Proportional Gain Parameter in BrickSchema?\nentitybrick:Discharge_Air_Proportional_Gain_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Proportional_Gain_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the points for VAVRM107B.\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM107B brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the hierarchical classification of a Cooling Tower?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Tower rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air velocity pressure sensor in the Staircase.\nentitybldg:Staircase \n brick:Exhaust_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:Staircase ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is  PM2.5 particulate matter Level Sensor 5.03 located?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Entering Water?\nentitybrick:Entering_Water",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Transfer Fan?\nentitybrick:Transfer_Fan",
    "target_text": "SELECT ?parent WHERE { brick:Transfer_Fan rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define Audio Visual Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Audio_Visual_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Discharge Air Temperature High Reset Setpoint an alias of?\nentitybrick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Temperature_High_Reset_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define ICT Equipment.\nentitybrick:ICT_Equipment",
    "target_text": "SELECT ?definition WHERE { brick:ICT_Equipment skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label along with the definition and measured quantity of CO Sensor.\nentitybrick:CO_Sensor",
    "target_text": "SELECT ?label ?definition ?quantity WHERE { brick:CO_Sensor rdfs:label ?label; skos:definition ?definition; brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone supply air temperature as detected in RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Oxygen,O2 sensor 5.03 and its location.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Min Fresh Air Setpoint Limit.\nentitybrick:Min_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Fresh_Air_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PM1_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you list all sh:rule entries for brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?rule WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.03's data deviates from our smart building standards?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of an Air Flow Loss Alarm?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Air_Flow_Loss_Alarm rdfs:subClassOf ?superclass . brick:Air_Flow_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the narrower concepts of PhasorAngle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?narrower WHERE { brick:Phasor_Angle skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature heating setpoint in the north west zone.\nentitybldg:north-west-zone \n brick:Discharge_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam On Off Command a subclass of?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?parent WHERE { brick:Steam_On_Off_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the zone percent air flow sensor updating for RM107B during the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Ethyl Alcohol /C2H5CH sensor installed in room 5.03 and what type is it?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest  measurement from Ethyl Alcohol /C2H5CH  Sensor 5.01.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to NVR?\nentitybrick:NVR",
    "target_text": "SELECT ?equiv WHERE { brick:NVR owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the other designations for the Discharge Air Differential Pressure Setpoint?\nentitybrick:Discharge_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Differential_Pressure_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to  Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the applicable units for Relative Humidity.\nentitybrick:Relative_Humidity",
    "target_text": "SELECT ?unit WHERE { brick:Relative_Humidity qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes for Supply Air Duct Pressure Status.\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Duct_Pressure_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for NO2 Concentration.\nentitybrick:NO2_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:NO2_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Max Position Setpoint Limit defined?\nentitybrick:Max_Position_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Position_Setpoint_Limit skos:definition ?definition. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's Oxygen,O2 output compare with other sensors in the building?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM2.5 particulate matter Level Sensor 5.02 set up?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling discharge air flow setpoint in the Boutique.\nentitybldg:Boutique \n brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Boutique ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Ethyl Alcohol /C2H5CH value from sensor5.03?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does an MDF belong to?\nentitybrick:MDF",
    "target_text": "SELECT ?parent WHERE { brick:MDF rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe the Speed Status?\nentitybrick:Speed_Status",
    "target_text": "SELECT ?tag WHERE { brick:Speed_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night Oxygen,O2 variations as captured by Sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Security Equipment.\nentitybrick:Security_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Security_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Inverter?\nentitybrick:Inverter",
    "target_text": "SELECT ?tag WHERE { brick:Inverter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the tags used for Leaving Medium Temperature Hot Water Temperature Sensor.\nentitybrick:Leaving_Medium_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the definitions for the Discharge Air Differential Pressure Sensor.\nentitybrick:Discharge_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?def WHERE { brick:Discharge_Air_Differential_Pressure_Sensor skos:definition ?def . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is pir5.26 located?\nentitybldg:pir5.26",
    "target_text": "SELECT ?location WHERE { bldg:pir5.26 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Alcohol Vapor MQ3 Gas Sensor  5.03 located?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Level.\nentitybrick:Level",
    "target_text": "SELECT ?label WHERE { brick:Level rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Valve Position Sensor inherit?\nentitybrick:Valve_Position_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Valve_Position_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is measured by Outside Air Temperature Setpoint?\nentitybrick:Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Entering Water Temperature Sensor.\nentitybrick:Entering_Water_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Water_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Water Temperature Setpoint?\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Water Flow Setpoint includes the tag 'Point'.\nentitybrick:Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Water_Flow_Setpoint brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.02's Combustible Gas Smoke MQ2 Sensor  output compare with other sensors in the building?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Alcohol Vapor MQ3 Gas Sensor  5.04 installed?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if CO2 Sensor has a label.\nentitybrick:CO2_Sensor",
    "target_text": "ASK { brick:CO2_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Portfolio extends.\nentitybrick:Portfolio",
    "target_text": "SELECT ?parent WHERE { brick:Portfolio rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the air humidity sensor 5.01 and its location.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What humidity-related property and material does an Absolute Humidity Sensor analyze?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of meter is a Building Gas Meter, and what tags are linked to it?\nentitybrick:Building_Gas_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Gas_Meter rdfs:subClassOf ?superclass . brick:Building_Gas_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  TVOC  Sensor 5.03 and its impact on indoor sustainability.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone supply air flow reading for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the main role of the Chilled Water Flow Sensor?\nentitybrick:Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Cooling Command?\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Water Temperature Alarm.\nentitybrick:Water_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  Air Humidity Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Formaldehyde Level sensor value from sensor 5.05?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Supply Air means.\nentitybrick:Supply_Air",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?rule WHERE { brick:Control_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Enable Fixed Temperature Command labeled in the ontology?\nentitybrick:Enable_Fixed_Temperature_Command",
    "target_text": "SELECT ?label WHERE { brick:Enable_Fixed_Temperature_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.05 measuring  Air Quality sensor at the moment?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category of Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Rain Duration Sensor?\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Rain_Duration_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Flow Sensor has the tag 'Sensor'?\nentitybrick:Flow_Sensor",
    "target_text": "ASK WHERE { brick:Flow_Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Copy Room important in an office setting?\nentitybrick:Copy_Room",
    "target_text": "SELECT ?definition WHERE { brick:Copy_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification and associated tags are assigned to a Bus Riser?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . brick:Bus_Riser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of zone air damper command occurrences for RM107A for today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.18 located?\nentitybldg:oxy5.18",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.18 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest  PM2.5 particulate matter Level Sensor reading from  PM2.5 particulate matter Level Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the PIR Sensor.\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:PIR_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of PM2.5 particulate matter Level Sensor 5.04, please.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Oxygen,O2 levels over the past quarter?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Return Air Humidity Sensor.\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in  PM10 particulate matter Level Sensor 5.03?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Supply Air Temperature Cooling Setpoint.\nentitybrick:Supply_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Temperature_Cooling_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label along with the definition and measured quantity of CO2 Sensor.\nentitybrick:CO2_Sensor",
    "target_text": "SELECT ?label ?definition ?quantity WHERE { brick:CO2_Sensor rdfs:label ?label; skos:definition ?definition; brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Transformer Room.\nentitybrick:Transformer_Room",
    "target_text": "SELECT ?definition WHERE { brick:Transformer_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to Frequency Setpoint?\nentitybrick:Frequency_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Frequency_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent TVOC  data available from  TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the PM10 Level Sensor?\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:PM10_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve whether Differential Static Pressure includes unit:MegaPA.\nentitybrick:Differential_Static_Pressure",
    "target_text": "ASK { brick:Differential_Static_Pressure qudt:applicableUnit unit:MegaPA . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Sound Noise loudness Sensor  5.01 status across the smart home?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of supply air pressure occurrences for AHU 02 for today?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: When is the High Air Flow Alarm triggered?\nentitybrick:High_Air_Flow_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:High_Air_Flow_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What associated tags does the Entering Medium Temperature Hot Water Temperature Low Reset Setpoint have?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Combustible Gas Smoke MQ2 Sensor  5.02 installed?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  CO2  Sensor 5.02's readings over the past 48 hours.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Combustible Gas Smoke MQ2 Sensor  5.01 located in?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Blind Group important in shading control?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?definition WHERE { brick:Blind_Group skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Temperature fluctuations recorded by Sensor 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.01 show any unusual Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas spikes today?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Lounge in BrickSchema?\nentitybrick:Lounge",
    "target_text": "SELECT ?property ?value WHERE { brick:Lounge ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone percent air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the run time sensor in the Bar.\nentitybldg:Bar \n brick:Run_Time_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Run_Time_Sensor ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Solar Zenith Angle Sensor?\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Solar_Zenith_Angle_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating supply air flow setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Leaving Condenser Water Temperature Sensor have?\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Preheat Demand Setpoint.\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Preheat_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  Air Quality sensor data from Sensor 5.04.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the Alcohol Vapor MQ3 Gas Sensor  located in room 5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving medium temperature hot water temperature load shed setpoint in the Boutique.\nentitybldg:Boutique \n brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint ; brick:hasLocation bldg:Boutique ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.04.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the  Air Quality sensor measurements from sensor 5.03?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone supply air flow in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for  PM2.5 particulate matter Level Sensor 5.03 over the last six months?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the Classroom.\nentitybldg:Classroom \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Classroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Output Frequency Sensor?\nentitybrick:Output_Frequency_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Output_Frequency_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the classes that the Occupied Cooling Temperature Deadband Setpoint extends.\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Power Factor Sensor?\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Power_Factor_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the applicable units for PM1Concentration?\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:PM1_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for System Status.\nentitybrick:System_Status",
    "target_text": "SELECT ?parent WHERE { brick:System_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Dry Cooler?\nentitybrick:Dry_Cooler",
    "target_text": "SELECT ?definition WHERE { brick:Dry_Cooler skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe an air wet bulb temperature sensor?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Air_Wet_Bulb_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Supply Air Smoke Detection Alarm?\nentitybrick:Supply_Air_Smoke_Detection_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Smoke_Detection_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone percent air flow sensor in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  PM1 particulate matter Level Sensor 5.04 set up at?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to a Makeup Water Valve.\nentitybrick:Makeup_Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Makeup_Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.34 located?\nentitybldg:airq5.34",
    "target_text": "SELECT ?location WHERE { bldg:airq5.34 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Collection Basin Water Level Alarm?\nentitybrick:Collection_Basin_Water_Level_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Collection_Basin_Water_Level_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the mixed air temperature log for AHU 02 for the last 15 minutes.\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Variable Air Volume Box?\nentitybrick:Variable_Air_Volume_Box",
    "target_text": "SELECT ?label WHERE { brick:Variable_Air_Volume_Box rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Current Imbalance Sensor belong to?\nentitybrick:Current_Imbalance_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Current_Imbalance_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Radon Concentration Sensor.\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Radon_Concentration_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Temporary Occupancy Status indicates.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?definition WHERE { brick:Temporary_Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level classification of a Booster Fan?\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Booster_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Absolute Humidity Sensor measure?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Absolute_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Min Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for Temperature Alarm.\nentitybrick:Temperature_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Temperature_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sh:property for Photovoltaic Array.\nentitybrick:Photovoltaic_Array",
    "target_text": "SELECT ?property WHERE { brick:Photovoltaic_Array sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the current configuration of the zone reheat valve command for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.01's data deviates from our smart building standards?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the PM2.5 Level Sensor?\nentitybrick:PM2",
    "target_text": "SELECT ?definition WHERE { brick:PM2.5_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What properties does the Effective Air Temperature Cooling Setpoint have?\nentitybrick:Effective_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Effective_Air_Temperature_Cooling_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Hot_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Leaving Hot Water Flow Setpoint?\nentitybrick:Leaving_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Hot_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Max Unoccupied Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Leaving' one of the tags for Leaving Chilled Water Temperature Sensor?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Leaving . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve the skos:definition for the Low Air Flow Alarm.\nentitybrick:Low_Air_Flow_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Low_Air_Flow_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Equipment Room.\nentitybldg:Equipment_Room \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Equipment_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Supply Air Temperature Low Reset Setpoint?\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of treatments are provided in a First Aid Room?\nentitybrick:First_Aid_Room",
    "target_text": "SELECT ?definition WHERE { brick:First_Aid_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting CO2  data by Sensor 5.02?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Leaving Chilled Water Flow Setpoint.\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the room air temperature setpoint in the Maintenance Room.\nentitybldg:Maintenance_Room \n brick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Room_Air_Temperature_Setpoint ; brick:hasLocation bldg:Maintenance_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the HVAC zones located on the first floor?\nentitybrick:isPartOf",
    "target_text": "SELECT ?zone WHERE { ?room brick:isPartOf bldg:floor1 . ?zone brick:hasPart ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of PM2.5 particulate matter Level Sensor 5.01.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the air Temperature sensor 5.03 and where it is installed.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Temperature_Sensor_5.03 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Hot Water Flow Setpoint.\nentitybrick:Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Hot_Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is Thermal Power Sensor?\nentitybrick:Thermal_Power_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Thermal_Power_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.03 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Condenser Water Bypass Valve?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Bypass_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Exhaust Air Static Pressure Setpoint?\nentitybrick:Exhaust_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the PIR Sensor extends.\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PIR_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?tag WHERE { brick:Overridden_On_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone percent air flow reading for RM107B for the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the NO2 sensor 5.04 readings from yesterday.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  quality trends over the past month using Carbon monoxide  sensor 5.05.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from  PM10 particulate matter Level Sensor 5.01 indicate any potential issues with air quality in the building?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the constraints applied to water temperature sensors?\nentitybrick:Water_Temperature_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Water_Temperature_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Static Pressure Deadband Setpoint is used for.\nentitybrick:Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Static_Pressure_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Torque units contain 'N-M' in their name?\nentitybrick:Torque",
    "target_text": "SELECT ?unit WHERE { brick:Torque qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), 'N-M')) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the descriptive tags for Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Thermostat Status.\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?tag WHERE { brick:Thermostat_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Supply Water Flow Setpoint?\nentitybrick:Supply_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Oxygen,O2 measurements from  Oxygen,O2 Sensor 5.05 over the past 24 hours.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for  Air Humidity Sensor 5.02.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling discharge air flow setpoint in the Banquet Hall.\nentitybldg:Banquet_Hall \n brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Banquet_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Air Flow Alarm has the tag 'Alarm'?\nentitybrick:Air_Flow_Alarm",
    "target_text": "ASK WHERE { brick:Air_Flow_Alarm brick:hasAssociatedTag tag:Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Zone Air?\nentitybrick:Zone_Air",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Oxygen,O2 Sensor 5.02?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.25 located?\nentitybldg:dust5.25",
    "target_text": "SELECT ?location WHERE { bldg:dust5.25 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Overridden Off Status refer to?\nentitybrick:Overridden_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Overridden_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with an Alarm Delay Parameter.\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Alarm_Delay_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Velocity' a tag for Velocity Pressure Sensor?\nentitybrick:Velocity_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Velocity_Pressure_Sensor brick:hasAssociatedTag tag:Velocity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering hot water temperature sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Hot_Water_Temperature_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Fault Status inherit?\nentitybrick:Fault_Status",
    "target_text": "SELECT ?parent WHERE { brick:Fault_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantity associated with the Zone CO2 Level Sensor?\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Zone_CO2_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substance for Leaving Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for  Air temperature Sensor 5.01.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Supply Air Temperature Low Reset Setpoint?\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many damper position command readings were taken for the economizer during the evening period today?\nentitybldg:bldg1.CHW.ECONOMIZER",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.ECONOMIZER ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Entering Water Temperature Setpoint.\nentitybrick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for ICT Equipment.\nentitybrick:ICT_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:ICT_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Energy System.\nentitybrick:Energy_System",
    "target_text": "SELECT ?definition WHERE { brick:Energy_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Safety System call itself?\nentitybrick:Safety_System",
    "target_text": "SELECT ?label WHERE { brick:Safety_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which predicates and objects belong to the Discharge Air Temperature High Reset Setpoint?\nentitybrick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_High_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone heating mode command events were recorded for RM107A today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Standby Fan.\nentitybrick:Standby_Fan",
    "target_text": "SELECT ?label WHERE { brick:Standby_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest TVOC  reading from  TVOC  sensor 5.02.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Motor Torque Sensor.\nentitybrick:Motor_Torque_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Motor_Torque_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Static Pressure Proportional Band Parameter have?\nentitybrick:Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.05 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the measured property of Temperature Sensor.\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Emergency Air Flow System?\nentitybrick:Emergency_Air_Flow_System",
    "target_text": "SELECT ?property ?value WHERE { brick:Emergency_Air_Flow_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Exhaust Air Velocity Pressure Sensor in the ontology?\nentitybrick:Exhaust_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Velocity_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current value reported by the zone air temperature sensor in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the Ethyl Alcohol /C2H5CH data from Sensor 5.04 for the past year.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of Alcohol Vapor MQ3 Gas Sensor  5.04 compare to our baseline standards?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the measurement parameter and the operating substance for the Entering Hot Water Temperature Sensor.\nentitybrick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Entering_Hot_Water_Temperature_Sensor brick:hasQuantity ?quantity . brick:Entering_Hot_Water_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Energy System represent?\nentitybrick:Energy_System",
    "target_text": "SELECT ?definition WHERE { brick:Energy_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all available information about the Return Air Flow Sensor.\nentitybrick:Return_Air_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Leaving Water Flow Sensor include Water Flow Sensor?\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Water_Flow_Sensor rdfs:subClassOf brick:Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any definition describing this Medium Temperature Hot Water Differential Pressure Load Shed Reset Status?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?definition WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM1_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average Temperature level from  temperature Sensor 5.05 for a specific date, for example 2025-02-15.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category includes Measured Module Conversion Efficiency?\nentitybrick:measuredModuleConversionEfficiency",
    "target_text": "SELECT ?parent WHERE { brick:measuredModuleConversionEfficiency rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Video Surveillance Equipment?\nentitybrick:Video_Surveillance_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Video_Surveillance_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hum5.02 located?\nentitybldg:hum5.02",
    "target_text": "SELECT ?location WHERE { bldg:hum5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Static Pressure Proportional Band Parameter.\nentitybrick:Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Static_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the Illuminance Sensor?\nentitybrick:Illuminance_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Illuminance_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the measured quantity of the Return Air Enthalpy Sensor?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Occupied Cooling Mode Status.\nentitybrick:Occupied_Cooling_Mode_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Cooling_Mode_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are broader than Ozone Concentration?\nentitybrick:Ozone_Concentration",
    "target_text": "SELECT ?broader WHERE { brick:Ozone_Concentration skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Pre Filter Status?\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Pre_Filter_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.03 reported a significant drop or rise in CO  recently?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Average Zone Air Temperature Sensor.\nentitybrick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Average_Zone_Air_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does the Hold Status belong to?\nentitybrick:Hold_Status",
    "target_text": "SELECT ?parent WHERE { brick:Hold_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Peak Demand Sensor.\nentitybrick:Peak_Demand_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Peak_Demand_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM2.5 particulate matter Level Sensor is set up in 5.04 and what kind is it?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of Alcohol Vapor MQ3 Gas Sensor  5.05 compare to our baseline standards?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Staircase is.\nentitybrick:Staircase",
    "target_text": "SELECT ?definition WHERE { brick:Staircase skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Sound Noise loudness Sensor  5.04.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone air control temperature setpoint in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqthree5.69 located?\nentitybldg:mqthree5.69",
    "target_text": "SELECT ?location WHERE { bldg:mqthree5.69 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category forCombustible Gas Smoke MQ2 Sensor 5.05?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Compressor?\nentitybrick:Compressor",
    "target_text": "SELECT ?label WHERE { brick:Compressor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Condensing Natural Gas Boiler?\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?tag WHERE { brick:Condensing_Natural_Gas_Boiler brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category forFormaldehyde Level sensor 5.01?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does the Fan VFD belong to?\nentitybrick:Fan_VFD",
    "target_text": "SELECT ?superclass WHERE { brick:Fan_VFD rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the valve position sensor in the Utility Room.\nentitybldg:Utility_Room \n brick:Valve_Position_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Valve_Position_Sensor ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the TVOC  data from Sensor 5.03 with HVAC anomalies?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.15 located?\nentitybldg:airq5.15",
    "target_text": "SELECT ?location WHERE { bldg:airq5.15 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor5.05's CO2  readings?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Box Mode Command used?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?definition WHERE { brick:Box_Mode_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Lockout Status?\nentitybrick:Lockout_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Lockout_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply condenser water temperature sensor in the Auditorium.\nentitybldg:Auditorium \n brick:Supply_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Condenser_Water_Temperature_Sensor ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for Real Power.\nentitybrick:Real_Power",
    "target_text": "SELECT ?unit WHERE { brick:Real_Power qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Temperature Sensor 5.01 set up?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the skos:definition of Potable Water?\nentitybrick:Potable_Water",
    "target_text": "SELECT ?definition WHERE { brick:Potable_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Reheat Hot Water System?\nentitybrick:Reheat_Hot_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Reheat_Hot_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all details for the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(?parent; separator=\", \") AS ?parent) ?eq (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Elevator_Shaft rdfs:label ?label . brick:Elevator_Shaft skos:definition ?definition . OPTIONAL { brick:Elevator_Shaft rdfs:subClassOf ?parent . } OPTIONAL { brick:Elevator_Shaft owl:equivalentClass ?eq . } OPTIONAL { brick:Elevator_Shaft brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether the Wind Direction Sensor includes tag:Wind.\nentitybrick:Wind_Direction_Sensor",
    "target_text": "ASK { brick:Wind_Direction_Sensor brick:hasAssociatedTag tag:Wind . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for LPG Natural Gas Town MQ5 Gas Sensor  from 5.03?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of VFD?\nentitybrick:VFD",
    "target_text": "SELECT ?definition WHERE { brick:VFD skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Media Room.\nentitybrick:Media_Room",
    "target_text": "SELECT ?tag WHERE { brick:Media_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Underfloor Air Plenum Static Pressure Setpoint?\nentitybrick:Underfloor_Air_Plenum_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint rdfs:label ?label . brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the  Illuminance Sensor levels recorded by Sensor 5.03?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Oxygen,O2 value from sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for Formaldehyde Level sensor 5.05 and its reliability trends.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Unoccupied Air Temperature Setpoint has the tag 'Unoccupied'?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Unoccupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical trend for Alcohol Vapor MQ3 Gas Sensor  5.02 from 01/01/2025 to 31/01/2025.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Hot Water Usage Sensor?\nentitybrick:Hot_Water_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for  Oxygen,O2 Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of TVOC  Sensor 5.03 compare to our baseline standards?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of  Air Humidity Sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that System extends.\nentitybrick:System",
    "target_text": "SELECT ?parent WHERE { brick:System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Even Month Status belong to?\nentitybrick:Even_Month_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Even_Month_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average humidity level recorded by  Air Humidity Sensor 5.02 over the past 24 hours?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a Booster Fan and an Exhaust Fan?\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Booster_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Touchpanel.\nentitybrick:Touchpanel",
    "target_text": "SELECT ?tag WHERE { brick:Touchpanel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting CO  data by Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points belong to AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the applicable units for PhasorAngle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?unit WHERE { brick:Phasor_Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hail sensor in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Hail_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hail_Sensor ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Board Room.\nentitybldg:Board_Room \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Power Factor Sensor.\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Power_Factor_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the higher-level class for Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Solar Zenith Angle Sensor.\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Solar_Zenith_Angle_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Reception.\nentitybldg:Reception \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Exhaust Air Humidity Sensor a subclass of another entity?\nentitybrick:Exhaust_Air_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM1 particulate matter Level Sensor 5.01 installed and what is it called?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does Effective Air Temperature Setpoint relate to?\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Effective_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the  Air Quality Level data from sensor 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the  PM2.5 particulate matter Level Sensor data from Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Tint Status.\nentitybrick:Tint_Status",
    "target_text": "SELECT ?tag WHERE { brick:Tint_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Alcohol Vapor MQ3 Gas Sensor  reading is sensor 5.04 reporting right now?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which devices in the building report a Last Fault Code Status?\nentitybrick:Last_Fault_Code_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Last_Fault_Code_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone air temperature setpoint as measured in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.61 located?\nentitybldg:light5.61",
    "target_text": "SELECT ?location WHERE { bldg:light5.61 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for PM1 particulate matter Level Sensor 5.05.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Oxygen,O2 level from sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the rule set for the Return Air Differential Pressure Setpoint.\nentitybrick:Return_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Differential_Pressure_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  PM2.5 particulate matter Level Sensor 5.03 located?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of   Ethyl Alcohol /C2H5CH Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which unit is assigned to Rated Minimum Current Output?\nentitybrick:ratedMinimumCurrentOutput",
    "target_text": "SELECT ?unit WHERE { brick:ratedMinimumCurrentOutput qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information for the Heating Supply Air Temperature Proportional Band Parameter including its label, tags, and equivalent class.\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) ?eq WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . OPTIONAL { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter owl:equivalentClass ?eq . } } GROUP BY ?label ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Pump rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum  Illuminance Sensor recorded by Sensor 5.02 last week?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Solar Radiance Sensor.\nentitybrick:Solar_Radiance_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Solar_Radiance_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the mixed air humidity setpoint in the Meeting Room.\nentitybldg:Meeting_Room \n brick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Mixed_Air_Humidity_Setpoint ; brick:hasLocation bldg:Meeting_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current measurement of the zone air temperature in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the zone air humidity setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Zone_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Zone_Air_Humidity_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the entity that feeds AHU01.\nentitybrick:isFedBy",
    "target_text": "SELECT ?source WHERE { bldg:AHU01 brick:isFedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Supply Air Temperature Alarm.\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Retail Store.\nentitybldg:Retail_Store \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Retail_Store ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the descriptive tags for Temperature Sensor.\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Luminance Sensor defined?\nentitybrick:Luminance_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Luminance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is CO2 a parameter used in measuring air quality?\nentitybrick:Air_Quality",
    "target_text": "ASK WHERE { brick:Air_Quality skos:narrower brick:CO2_Concentration . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the  Air Quality sensor 5.05 readings from yesterday.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for   TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the current zone supply air flow reading for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Luminance Alarm a type of lighting alarm?\nentitybrick:Luminance_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Luminance_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone supply air temperature for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.03 for the past week and show me a summary.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water discharge temperature sensor in the Storage Room.\nentitybldg:Storage_Room \n brick:Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:Storage_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone percent air flow for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Chilled Water Static Pressure Setpoint?\nentitybrick:Chilled_Water_Static_Pressure_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Static_Pressure_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Output Frequency Sensor?\nentitybrick:Output_Frequency_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Output_Frequency_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which name is assigned to the Discharge Air Temperature Low Reset Setpoint?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  Illuminance Sensor trends and their variation over the last 24 hours in room or sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Condenser Water Valve.\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Water_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for the zone air temperature setpoint in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Hot Water System Enable Command.\nentitybrick:Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Hot_Water_System_Enable_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.05 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Humidity Sensor the same as Discharge Air Humidity Sensor?\nentitybrick:Supply_Air_Humidity_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Humidity_Sensor owl:equivalentClass brick:Discharge_Air_Humidity_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Ethyl Alcohol /C2H5CH Sensor 5.05 cover?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader category that Terminal Unit belongs to?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?parent WHERE { brick:Terminal_Unit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the parent classes of Motion Sensor?\nentitybrick:Motion_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Motion_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and associated tags for the Video Intercom.\nentitybrick:Video_Intercom",
    "target_text": "SELECT ?label ?tag WHERE { brick:Video_Intercom rdfs:label ?label . brick:Video_Intercom brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for  Air Humidity Sensor 5.01?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Zone Air Dewpoint Sensor.\nentitybrick:Zone_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Zone_Air_Dewpoint_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Thermal Power Meter inherit?\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?parent WHERE { brick:Thermal_Power_Meter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Failure Alarm extends.\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Failure_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Combustible Gas Smoke MQ2 Sensor  measurements from Sensor 5.04 day-to-day?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.35?\nentitybldg:hcho5.35",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.35 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name for Speed?\nentitybrick:Speed",
    "target_text": "SELECT ?label WHERE { brick:Speed rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent property for isMeteredBy?\nentitybrick:isMeteredBy",
    "target_text": "SELECT ?parent WHERE { brick:isMeteredBy rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the zone air control temperature setpoint summary for RM107A for yesterday afternoon?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date Combustible Gas Smoke MQ2 Sensor  level from sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Ticketing Booth.\nentitybrick:Ticketing_Booth",
    "target_text": "SELECT ?definition WHERE { brick:Ticketing_Booth skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a CO2 Differential Sensor.\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:CO2_Differential_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for  Air Quality Level 5.04 in our smart building?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which measurement units for Enthalpy contain 'W-HR' in their name?\nentitybrick:Enthalpy",
    "target_text": "SELECT ?unit WHERE { brick:Enthalpy qudt:applicableUnit ?unit . FILTER(regex(str(?unit), \"W-HR\", \"i\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Water Flow Sensor include the tag 'Water'?\nentitybrick:Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Water_Flow_Sensor brick:hasAssociatedTag tag:Water . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.11?\nentitybldg:hcho5.11",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.11 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.04 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water System Enable Command affect system operation?\nentitybrick:Chilled_Water_System_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_System_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  NO2 Sensor 5.01 based on its most recent data.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest  Air Quality Level data for 5.04.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the complete information (label, parent classes, equivalent class, and tags) for the Effective Supply Air Temperature Setpoint.\nentitybrick:Effective_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label ?parent ?eq (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Effective_Supply_Air_Temperature_Setpoint rdfs:label ?label . OPTIONAL { brick:Effective_Supply_Air_Temperature_Setpoint rdfs:subClassOf ?parent . } OPTIONAL { brick:Effective_Supply_Air_Temperature_Setpoint owl:equivalentClass ?eq . } OPTIONAL { brick:Effective_Supply_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?parent ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating zone air temperature setpoint in the central area.\nentitybldg:central-area \n brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:central-area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the electric power sensor in the Craft Room.\nentitybldg:Craft_Room \n brick:Electric_Power_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Electric_Power_Sensor ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the zone air temperature values for RM107B yesterday?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Deionised Water Conductivity Sensor.\nentitybrick:Deionised_Water_Conductivity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Deionised_Water_Conductivity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average NO2 level from  NO2 Sensor 5.01 for a specific date, for example 2025-02-15.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.01's data deviates from our smart building standards?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Humidity Alarm.\nentitybrick:Humidity_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Humidity_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter differential pressure sensor in the Zone B.\nentitybldg:Zone B \n brick:Filter_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Differential_Pressure_Sensor ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Team Room inherit?\nentitybrick:Team_Room",
    "target_text": "SELECT ?parent WHERE { brick:Team_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Unoccupied Air Temperature Setpoint.\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Absolute Humidity Sensor represented in the ontology?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Absolute_Humidity_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Pressure means.\nentitybrick:Pressure",
    "target_text": "SELECT ?definition WHERE { brick:Pressure skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Studio.\nentitybrick:Studio",
    "target_text": "SELECT ?parent WHERE { brick:Studio rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Heating Thermal Power Sensor contribute to heating control?\nentitybrick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Thermal_Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Air_Quality_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Occupied Heating Temperature Deadband Setpoint?\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?type WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current configuration of the zone air temperature setpoint in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does Ethyl Alcohol /C2H5CH Sensor 5.05 require recalibration according to the data?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Core Temperature Setpoint?\nentitybrick:Core_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Core_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Alarm?\nentitybrick:Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the descriptive text BrickSchema provides for the Hot Water Differential Pressure Setpoint.\nentitybrick:Hot_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class isFormaldehyde Level sensor 5.03 a member of?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the narrower concepts of Entering Water?\nentitybrick:Entering_Water",
    "target_text": "SELECT ?narrower WHERE { brick:Entering_Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on Combustible Gas Smoke MQ2 Sensor  5.04's performance compared to industry benchmarks.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the chilled water supply temperature summary for the building chilled water system for yesterday afternoon?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Min Chilled Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve all triples relating to the Discharge Fan.\nentitybrick:Discharge_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Position means.\nentitybrick:Position",
    "target_text": "SELECT ?definition WHERE { brick:Position skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone air damper command for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Network Video Recorder equivalent to NVR?\nentitybrick:Network_Video_Recorder",
    "target_text": "ASK WHERE { brick:Network_Video_Recorder owl:equivalentClass brick:NVR . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for   CO2  Sensor 5.02.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied humidity setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Occupied_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Humidity_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.04's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas levels and building occupancy patterns.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for  Air temperature Sensor 5.03?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Temperature Tolerance Parameter.\nentitybrick:Temperature_Tolerance_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Tolerance_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for PM10Concentration.\nentitybrick:PM10_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:PM10_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Unoccupied Humidity Setpoint?\nentitybrick:Unoccupied_Humidity_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Humidity_Setpoint rdfs:label ?label . brick:Unoccupied_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water flow setpoint in the Game Room.\nentitybldg:Game_Room \n brick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Flow_Setpoint ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which element is under observation by an Ammonia Sensor?\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Ammonia_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC components are classified as Laminar Flow Air Diffusers?\nentitybrick:Laminar_Flow_Air_Diffuser",
    "target_text": "SELECT ?diffuser WHERE { ?diffuser a brick:Laminar_Flow_Air_Diffuser . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for CO2  Sensor 5.04 over the last six months?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend forFormaldehyde Level sensor 5.02 and its impact on indoor sustainability.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Manual Fire Alarm Activation Equipment?\nentitybrick:Manual_Fire_Alarm_Activation_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Manual_Fire_Alarm_Activation_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated withCombustible Gas Smoke MQ2 Sensor 5.02?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Reactive Power Sensor.\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Reactive_Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for PM2.5 particulate matter Level Sensor 5.01 and its impact on indoor sustainability.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Refrigerant Level Sensor have?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Refrigerant_Level_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the aliases for a discharge air dewpoint sensor?\nentitybrick:Discharge_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Dewpoint_Sensor brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details of the Entering Water Flow Setpoint?\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Entering_Water_Flow_Setpoint rdfs:label ?label . brick:Entering_Water_Flow_Setpoint skos:definition ?definition . OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Fire Alarm Pull Station fall?\nentitybrick:Fire_Alarm_Pull_Station",
    "target_text": "SELECT ?superclass WHERE { brick:Fire_Alarm_Pull_Station rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Speed Sensor?\nentitybrick:Speed_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Speed_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the  Illuminance Sensor in 5.03, including its category.\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Illuminance_Sensor_5.03 rdfs:label ?label . bldg:Illuminance_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical parameter is tracked by the Entering High Temperature Hot Water Temperature Sensor?\nentitybrick:Entering_High_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_High_Temperature_Hot_Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor reading for zone supply air temperature in RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Max Occupied Heating Supply Air Flow Setpoint Limit is equivalent to Max Occupied Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_CO2_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Condenser Water Valve fails?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Cool' is a tag for Max Unoccupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Cool . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest measurement from  Air Quality sensor 5.05.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the Formaldehyde Level sensor 5.02 and show its sensor name.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.02 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Effective Air Temperature Setpoint?\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Effective_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the Oxygen,O2 sensor in 5.03, including its category.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current directive for the zone air temperature setpoint in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the alias of a discharge air flow demand setpoint?\nentitybrick:Discharge_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Flow_Demand_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the name of the Energy System.\nentitybrick:Energy_System",
    "target_text": "SELECT ?label WHERE { brick:Energy_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a seeAlso reference for Year Built?\nentitybrick:yearBuilt",
    "target_text": "SELECT ?reference WHERE { brick:yearBuilt rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  Alcohol Vapor MQ3 Gas Sensor  5.01 based on its most recent data.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Stages Status represent?\nentitybrick:Stages_Status",
    "target_text": "SELECT ?definition WHERE { brick:Stages_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Differential Setpoint means.\nentitybrick:Differential_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Derivative Gain Parameter used in PID control?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Derivative_Gain_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest zone supply air temperature value for RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest NO2 reading from  NO2 sensor 5.04.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for hasQuantity?\nentitybrick:hasQuantity",
    "target_text": "SELECT ?label WHERE { brick:hasQuantity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Enable Hot Water System Outside Air Temperature Setpoint.\nentitybrick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Entering Chilled Water Temperature Sensor?\nentitybrick:Entering_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Entering_Chilled_Water_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is Outside Air Temperature Enable Differential Sensor a subclass of?\nentitybrick:Outside_Air_Temperature_Enable_Differential_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Enable_Differential_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of the Hot Water Radiator from BrickSchema.\nentitybrick:Hot_Water_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is  PM10 particulate matter Level Sensor 5.05 showing any signs of potential failure based on recent data?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_On_Off_Command rdfs:label ?label . brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sh:property values are defined for Equipment?\nentitybrick:Equipment",
    "target_text": "SELECT ?property WHERE { brick:Equipment sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the parent classes of the Occupied Return Air Temperature Setpoint?\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Return_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Water Pump.\nentitybrick:Water_Pump",
    "target_text": "SELECT ?tag WHERE { brick:Water_Pump brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the deprecation mitigation message for the Chilled Water Return Temperature Sensor?\nentitybrick:Chilled_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?message WHERE { brick:Chilled_Water_Return_Temperature_Sensor brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air enthalpy sensor in the Auditorium.\nentitybldg:Auditorium \n brick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Enthalpy_Sensor ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's Sound Noise loudness Sensor  5.05 located?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Return Air CO2 Sensor have?\nentitybrick:Return_Air_CO2_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_CO2_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Has Address?\nentitybrick:hasAddress",
    "target_text": "SELECT ?label WHERE { brick:hasAddress rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Tint Command?\nentitybrick:Tint_Command",
    "target_text": "SELECT ?definition WHERE { brick:Tint_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Unoccupied Heating Mode Status extends.\nentitybrick:Unoccupied_Heating_Mode_Status",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Heating_Mode_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Concession area?\nentitybrick:Concession",
    "target_text": "SELECT ?definition WHERE { brick:Concession skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.47?\nentitybldg:mqfive5.47",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.47 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from CO2  Sensor 5.04 align with smart building sustainability standards?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Electric Energy Sensor named in the ontology?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Electric_Energy_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Leaving Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the primary material analyzed by a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Capacity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe a Breaker Panel?\nentitybrick:Breaker_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Breaker_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest loop chilled water supply temperature event recorded for the chiller?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Temperature Deadband Setpoint a type of Temperature Setpoint?\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "ASK WHERE { brick:Temperature_Deadband_Setpoint rdfs:subClassOf brick:Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Leaving Medium Temperature Hot Water Temperature High Reset Setpoint play in HVAC?\nentitybrick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Outside Air Humidity Setpoint have?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is PM10 particulate matter Level Sensor 5.03 a member of?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Power Factor Sensor.\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Power_Factor_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the differential temperature setpoint in the Spa.\nentitybldg:Spa \n brick:Differential_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Differential_Temperature_Setpoint ; brick:hasLocation bldg:Spa ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the mixed air temperature summary for AHU 01 for yesterday afternoon?\nentitybldg:bldg1.AHU.AHU01.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  CO  Sensor 5.05 and its impact on indoor sustainability.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the current output sensor in the Music Room.\nentitybldg:Music_Room \n brick:Current_Output_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Current_Output_Sensor ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the usage sensor in the Cafeteria.\nentitybldg:Cafeteria \n brick:Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Usage_Sensor ; brick:hasLocation bldg:Cafeteria ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the quantity and substance detected by an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cafeteria represented in the ontology?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?property ?value WHERE { brick:Cafeteria ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Visitor Lobby inherit?\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?parent WHERE { brick:Visitor_Lobby rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where  PM1 particulate matter Level Sensor 5.05 is placed.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the TVOC  measurements from Sensor 5.01 that might trigger a maintenance alert?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.02's  PM10 particulate matter Level Sensor readings align with our smart building's sustainability KPIs?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Unoccupied Cooling Temperature Deadband Setpoint.\nentitybrick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does the Hospitality Box fall?\nentitybrick:Hospitality_Box",
    "target_text": "SELECT ?parent WHERE { brick:Hospitality_Box rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Wardrobe?\nentitybrick:Wardrobe",
    "target_text": "SELECT ?tag WHERE { brick:Wardrobe brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.05 to compute an overall LPG Natural Gas Town MQ5 Gas Sensor  index.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is  PM1 particulate matter Level Sensor 5.01 installed?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Bypass Water Flow Setpoint?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Bypass_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of an Adjust Sensor?\nentitybrick:Adjust_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Adjust_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Mixed Air Flow Sensor.\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Mixed_Air_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Voltage Imbalance related to?\nentitybrick:Voltage_Imbalance",
    "target_text": "SELECT ?related WHERE { brick:Voltage_Imbalance skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Alcohol Vapor MQ3 Gas Sensor  5.05's readings over the past 48 hours.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by PM10 particulate matter Level Sensor 5.05 over the past week?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Overload_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What systems in the building support a Light Command?\nentitybrick:Light_Command",
    "target_text": "SELECT ?command WHERE { ?command a brick:Light_Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the standby target zone air temperature setpoint in the west side.\nentitybldg:west-side \n brick:Standby_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Standby_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Heating Supply Air Temperature Proportional Band Parameter have?\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Isolation Valve?\nentitybrick:Isolation_Valve",
    "target_text": "SELECT ?label WHERE { brick:Isolation_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Current Imbalance Sensor'.\nentitybrick:Current_Imbalance_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Current_Imbalance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve tags associated with differential pressure load shed setpoints of medium temperature hot water.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you check if Building has shape properties?\nentitybrick:Building",
    "target_text": "ASK { brick:Building sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Speed Reset Command.\nentitybrick:Speed_Reset_Command",
    "target_text": "SELECT ?tag WHERE { brick:Speed_Reset_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Min Water Temperature Setpoint.\nentitybrick:Min_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Min_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Absolute Humidity Sensor'.\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Absolute_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Retail Room.\nentitybrick:Retail_Room",
    "target_text": "SELECT ?label WHERE { brick:Retail_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone percent air flow in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest  Air Quality Level measurement from   Sensor 5.03.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Luminance Setpoint?\nentitybrick:Luminance_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Luminance_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is Combustible Gas Smoke MQ2 Sensor  5.05 found?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Energy System inherit?\nentitybrick:Energy_System",
    "target_text": "SELECT ?parent WHERE { brick:Energy_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest NO2 reading from  NO2 sensor 5.03.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Oxygen,O2 readings from Sensor 5.03 help in predicting potential failures or recalibration needs?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does   CO2  Sensor 5.02 belong to?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Radiant Ceiling Panel has the tag 'Radiant'.\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "ASK WHERE { brick:Radiant_Ceiling_Panel brick:hasAssociatedTag tag:Radiant . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Fan.\nentitybrick:Fan",
    "target_text": "SELECT ?tag WHERE { brick:Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Heating Supply Air Temperature Deadband Setpoint have?\nentitybrick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Supply_Air_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of Air Quality sensor 5.04.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Boiler.\nentitybrick:Boiler",
    "target_text": "SELECT ?label WHERE { brick:Boiler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fire sensor in the Showroom.\nentitybldg:Showroom \n brick:Fire_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fire_Sensor ; brick:hasLocation bldg:Showroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Collection Basin Water Temperature Sensor?\nentitybrick:Collection_Basin_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Collection_Basin_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units, like PPB or PPM, used for COConcentration.\nentitybrick:CO_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:CO_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Enable Differential Temperature Command fall?\nentitybrick:Enable_Differential_Temperature_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Enable_Differential_Temperature_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the embedded temperature sensor in the Shop.\nentitybldg:Shop \n brick:Embedded_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Embedded_Temperature_Sensor ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many logical constraints exist for air temperature setpoint limits?\nentitybrick:Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?rule) AS ?rule_count) WHERE { brick:Air_Temperature_Setpoint_Limit sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the NO2 sensor installed in room 5.04.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.04 rdfs:label ?label . bldg:NO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Temporary Occupancy Status.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?label WHERE { brick:Temporary_Occupancy_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the official label for Humidity.\nentitybrick:Humidity",
    "target_text": "SELECT ?label WHERE { brick:Humidity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Return Air Dewpoint Sensor?\nentitybrick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the main class for Reset Command.\nentitybrick:Reset_Command",
    "target_text": "SELECT ?parent WHERE { brick:Reset_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Oxygen,O2 Sensor 5.03 located?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of Oxygen,O2 readings from Sensor 5.04 for sustainability reporting.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the tvoc level sensor in the Theater.\nentitybldg:Theater \n brick:TVOC_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:TVOC_Level_Sensor ; brick:hasLocation bldg:Theater ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's Combustible Gas Smoke MQ2 Sensor  measurements over the last quarter.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone supply air temperature sensor indicate in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air temperature setpoint reading for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens when a Chilled Water Differential Pressure Proportional Band Parameter is adjusted?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter ?property ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Prayer Room.\nentitybrick:Prayer_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Prayer_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what an Electric Baseboard Radiator does?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Electric_Baseboard_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using Temperature data from  temperature Sensor 5.05.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the parent class of the First Aid Room?\nentitybrick:First_Aid_Room",
    "target_text": "SELECT ?superclass WHERE { brick:First_Aid_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasAssociatedTag related to Irreflexive Property?\nentitybrick:hasAssociatedTag",
    "target_text": "ASK WHERE { brick:hasAssociatedTag a owl:IrreflexiveProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to know how many predicates the Discharge Air Temperature Low Reset Setpoint has.\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find tags related to Max Water Temperature Setpoint.\nentitybrick:Max_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Max_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent property for 'feeds'?\nentitybrick:feeds",
    "target_text": "SELECT ?parent WHERE { brick:feeds rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Energy Sensor measures.\nentitybrick:Energy_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Energy_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.05's Alcohol Vapor MQ3 Gas Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Bench Space.\nentitybrick:Bench_Space",
    "target_text": "SELECT ?property ?value WHERE { brick:Bench_Space ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Absorption Chiller compare to a traditional chiller?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Constant Air Volume Box.\nentitybrick:Constant_Air_Volume_Box",
    "target_text": "SELECT ?tag WHERE { brick:Constant_Air_Volume_Box brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in Formaldehyde Level sensor from Sensor 5.05 could be used to forecast future maintenance needs?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is PM2.5 particulate matter Level Sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me what replaces Supply Water Temperature Sensor?\nentitybrick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Supply_Water_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is Water Usage Sensor?\nentitybrick:Water_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Water_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Reactive Energy Sensor.\nentitybrick:Reactive_Energy_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Reactive_Energy_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What categories apply to damperVAVRM115?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:damperVAVRM115 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label associated with Gas Distribution?\nentitybrick:Gas_Distribution",
    "target_text": "SELECT ?label WHERE { brick:Gas_Distribution rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 found?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Bypass Water Flow Setpoint'.\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a discharge air dewpoint sensor?\nentitybrick:Discharge_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there relationships for Operational Stage Count?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?relatedProperty WHERE { brick:operationalStageCount ?relation ?relatedProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes a Bypass Air Humidity Setpoint?\nentitybrick:Bypass_Air_Humidity_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Air_Humidity_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Off Command?\nentitybrick:Off_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Off_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags define the Hot Water Pump?\nentitybrick:Hot_Water_Pump",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Pump brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Current Imbalance Sensor a subclass of another type of sensor?\nentitybrick:Current_Imbalance_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Current_Imbalance_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.02's data deviates from our smart building standards?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Domestic Hot Water System fall?\nentitybrick:Domestic_Hot_Water_System",
    "target_text": "SELECT ?superclass WHERE { brick:Domestic_Hot_Water_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the description for Max Speed Setpoint Limit?\nentitybrick:Max_Speed_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Speed_Setpoint_Limit skos:definition ?definition. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  NO2 Sensor 5.02 located?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Even Month Status?\nentitybrick:Even_Month_Status",
    "target_text": "SELECT ?tag WHERE { brick:Even_Month_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Intercom Equipment.\nentitybrick:Intercom_Equipment",
    "target_text": "SELECT ?definition WHERE { brick:Intercom_Equipment skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.24 located?\nentitybldg:airq5.24",
    "target_text": "SELECT ?location WHERE { bldg:airq5.24 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define PM10Concentration.\nentitybrick:PM10_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:PM10_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from PM10 particulate matter Level Sensor 5.04 for a specific date, for example 2025-02-15.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Air Differential Pressure Setpoint?\nentitybrick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Air_Differential_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  PM10 particulate matter Level Sensor 5.03 is located.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classification tags are linked to chilled water differential pressure load shed status?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Point' a tag for Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the aliasOf property for Unoccupied Discharge Air Flow Setpoint?\nentitybrick:Unoccupied_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Unoccupied_Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on  PM10 particulate matter Level Sensor 5.05's performance compared to industry benchmarks.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Load Shed Command?\nentitybrick:Load_Shed_Command",
    "target_text": "SELECT ?definition WHERE { brick:Load_Shed_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Booster Fan integrate with a ventilation system?\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Booster_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Return Fan have?\nentitybrick:Return_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Return_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the quantity for Position Sensor.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Position_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for PM1 particulate matter Level Sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me which main category includes the Radioactivity Concentration Sensor.\nentitybrick:Radioactivity_Concentration_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Radioactivity_Concentration_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Discharge Air Duct Pressure Status indicate?\nentitybrick:Discharge_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Duct_Pressure_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Outside Air Enthalpy Sensor?\nentitybrick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Enthalpy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does Time Setpoint measure?\nentitybrick:Time_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Time_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What measurement units are associated with Solar Irradiance?\nentitybrick:Solar_Irradiance",
    "target_text": "SELECT ?unit WHERE { brick:Solar_Irradiance qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling supply air flow setpoint in the Retail Store.\nentitybldg:Retail_Store \n brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Retail_Store ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Power Flow defined?\nentitybrick:powerFlow",
    "target_text": "SELECT ?definition WHERE { brick:powerFlow skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where  Air Quality Level 5.01 is placed.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for the First Aid Kit?\nentitybrick:First_Aid_Kit",
    "target_text": "SELECT ?label WHERE { brick:First_Aid_Kit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe Thermal Power Sensor?\nentitybrick:Thermal_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Thermal_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of CO2  readings from Sensor 5.03 for sustainability reporting.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Gain Parameter.\nentitybrick:Gain_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Gain_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the complete RDF data for Air Flow Sensor.\nentitybrick:Air_Flow_Sensor",
    "target_text": "DESCRIBE brick:Air_Flow_Sensor\nWHERE { brick:Air_Flow_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Exercise Room?\nentitybrick:Exercise_Room",
    "target_text": "SELECT ?label WHERE { brick:Exercise_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to  Oxygen,O2 Sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for a Bus Riser?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?rule WHERE { brick:Bus_Riser sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a System Enable Command?\nentitybrick:System_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:System_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.53 located?\nentitybldg:light5.53",
    "target_text": "SELECT ?location WHERE { bldg:light5.53 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many times did the cooling valve output trigger on AHU 02 during the early hours today?\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.52 located?\nentitybldg:airq5.52",
    "target_text": "SELECT ?location WHERE { bldg:airq5.52 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for PM1 particulate matter Level Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Fan On Off Status belong to?\nentitybrick:Fan_On_Off_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Fan_On_Off_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under what label is a Chilled Water Differential Pressure Sensor categorized?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of Air Quality sensor 5.04?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Vertical Space belongs to.\nentitybrick:Vertical_Space",
    "target_text": "SELECT ?parent WHERE { brick:Vertical_Space rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Mixed Air Flow Sensor?\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Mixed_Air_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Stage Riser?\nentitybrick:Stage_Riser",
    "target_text": "SELECT ?parent WHERE { brick:Stage_Riser rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak chilled water return temperature reading for the building chiller on the previous day?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Supply Air Duct Pressure Status.\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes or concepts does Flow Loss inherit or relate to?\nentitybrick:Flow_Loss",
    "target_text": "SELECT ?broader WHERE { brick:Flow_Loss skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Low Supply Air Temperature Alarm?\nentitybrick:Low_Supply_Air_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Low_Supply_Air_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Outside Air Grains Sensor have?\nentitybrick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Grains_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Outside Air Lockout Temperature Differential Parameter include Lockout Temperature Differential Parameter?\nentitybrick:Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "ASK WHERE { brick:Outside_Air_Lockout_Temperature_Differential_Parameter rdfs:subClassOf brick:Lockout_Temperature_Differential_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Photovoltaic Array?\nentitybrick:Photovoltaic_Array",
    "target_text": "SELECT ?tag WHERE { brick:Photovoltaic_Array brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Mechanical Room.\nentitybldg:Mechanical_Room \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Mechanical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Noncondensing Natural Gas Boiler?\nentitybrick:Noncondensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?property ?value WHERE { brick:Noncondensing_Natural_Gas_Boiler ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does Air Quality sensor 5.05 represent?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for   CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective room air temperature setpoint in the Changing Room.\nentitybldg:Changing_Room \n brick:Effective_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Room_Air_Temperature_Setpoint ; brick:hasLocation bldg:Changing_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Flow?\nentitybrick:Flow",
    "target_text": "SELECT ?label WHERE { brick:Flow rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Hot Water Differential Pressure Sensor.\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Hot_Water_Differential_Pressure_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  TVOC  Sensor 5.05's readings over the past 48 hours.\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a CO Differential Sensor?\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO_Differential_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Heating Thermal Power Sensor?\nentitybrick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Thermal_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the class that the Chilled Water Flow Sensor extends.\nentitybrick:Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Chilled_Water_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Overload_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water flow sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Flow_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Chilled Water Loop?\nentitybrick:Chilled_Water_Loop",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes for Radiant Ceiling Panel.\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "SELECT ?parent WHERE { brick:Radiant_Ceiling_Panel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the location of RM107B Room.\nentitybrick:isPartOf",
    "target_text": "SELECT ?floor WHERE { bldg:RM107B_room brick:isPartOf ?floor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of AHU?\nentitybrick:AHU",
    "target_text": "SELECT ?label WHERE { brick:AHU rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Mixed Air Temperature Sensor means.\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical supply air temperature data for AHU 01 for the previous month.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for RadonConcentration.\nentitybrick:Radon_Concentration",
    "target_text": "SELECT ?label WHERE { brick:Radon_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define a Bus Riser?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?tag WHERE { brick:Bus_Riser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find the mixed air temperature sensor in AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Mixed_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air co sensor in the Server Room.\nentitybldg:Server_Room \n brick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_CO_Sensor ; brick:hasLocation bldg:Server_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Alcohol Vapor MQ3 Gas Sensor  levels over the past quarter?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of an Average Heating Demand Sensor?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Illuminance Sensor is set up in 5.03 and what kind is it?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Illuminance_Sensor_5.03 rdfs:label ?label . bldg:Illuminance_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe Terminal Unit?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Terminal_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Start Stop Status.\nentitybrick:Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { brick:Start_Stop_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of  Air Quality Level 5.04 over the last month?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the qkdv dimension vector of Thermal Power.\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?dimension WHERE { brick:Thermal_Power qudt:hasDimensionVector ?dimension . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend fromCombustible Gas Smoke MQ2 Sensor 5.03 over the past week.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name/label for Cooling Temperature Setpoint?\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the CO2  sensor installed in room 5.05 and what type is it?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum cooling command readings for AHU 02 from this morning.\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Collection Basin Water Level Sensor fall?\nentitybrick:Collection_Basin_Water_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Collection_Basin_Water_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  PM2.5 particulate matter Level Sensor 5.04 at?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Load Setpoint.\nentitybrick:Load_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Load_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.28 airq5.28?\nentitybldg:hum5.28",
    "target_text": "SELECT ?room WHERE { bldg:hum5.28 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by a Dehumidification Start Stop Status?\nentitybrick:Dehumidification_Start_Stop_Status",
    "target_text": "SELECT ?quantity WHERE { brick:Dehumidification_Start_Stop_Status brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define a Building Gas Meter?\nentitybrick:Building_Gas_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Building_Gas_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.43 located?\nentitybldg:mqtwo5.43",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.43 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status ofFormaldehyde Level sensor 5.05 based on its most recent data.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display an RDF summary of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "DESCRIBE brick:Air_Quality_Sensor\nWHERE { brick:Air_Quality_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substances does Supply Air Flow Setpoint control?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the category and tags for an Access Reader?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Access_Reader rdfs:subClassOf ?superclass . brick:Access_Reader brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does PM2.5 particulate matter Level Sensor 5.04 represent?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average zone air control temperature setpoint for RM107A over the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Min Fresh Air Setpoint Limit.\nentitybrick:Min_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Min_Fresh_Air_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantities related to Electric Current.\nentitybrick:Electric_Current",
    "target_text": "SELECT ?related WHERE { brick:Electric_Current skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the NO2 sensor 5.01 along with its location in the building.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.01 rdfs:label ?label . bldg:NO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Enable Hot Water System Outside Air Temperature Setpoint labeled in the ontology?\nentitybrick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature high reset setpoint in the east side.\nentitybldg:east-side \n brick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:east-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Parking Level?\nentitybrick:Parking_Level",
    "target_text": "SELECT ?label WHERE { brick:Parking_Level rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated withFormaldehyde Level sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  TVOC  Sensor 5.01 based on its most recent data.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Voltage Alarm?\nentitybrick:Voltage_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Voltage_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Leaving Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for zone percent air flow in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of fan is a Cooling Tower Fan?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Tower_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the status in the Auditorium.\nentitybldg:Auditorium \n brick:Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Status ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Preheat Command.\nentitybrick:Preheat_Command",
    "target_text": "SELECT ?rule WHERE { brick:Preheat_Command sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does Cloudage fit into?\nentitybrick:Cloudage",
    "target_text": "SELECT ?broader WHERE { brick:Cloudage skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Outside Air Dewpoint Sensor.\nentitybrick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Outside_Air_Dewpoint_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average supply air temperature reading from AHU 02 for the last 24 hours.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Radon Concentration Sensor inherit?\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Radon_Concentration_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Security' a tag for Video Surveillance Equipment?\nentitybrick:Video_Surveillance_Equipment",
    "target_text": "ASK WHERE { brick:Video_Surveillance_Equipment brick:hasAssociatedTag tag:Security . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Inside Face Surface Temperature Setpoint categorized using tags?\nentitybrick:Inside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Inside_Face_Surface_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of On Off Status?\nentitybrick:On_Off_Status",
    "target_text": "SELECT ?parent WHERE { brick:On_Off_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes a Bypass Air Flow Sensor unique?\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Air_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all predicate-object pairs for Domestic Water.\nentitybrick:Domestic_Water",
    "target_text": "SELECT ?property ?value WHERE { brick:Domestic_Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount  CO2  Sensor 5.02?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entity is equivalent to a CAV?\nentitybrick:CAV",
    "target_text": "SELECT ?equiv WHERE { brick:CAV owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve whether ΔCO2 Concentration is a delta quantity.\nentitybrick:Differential_CO2_Concentration",
    "target_text": "ASK { brick:Differential_CO2_Concentration qudt:isDeltaQuantity true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the preheat discharge air temperature sensor in the central area.\nentitybldg:central-area \n brick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Preheat_Discharge_Air_Temperature_Sensor ; brick:hasLocation bldg:central-area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Air Alarm.\nentitybrick:Air_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Air_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate sensor 5.05's temperature reading with external weather data?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Max Occupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Switch Room?\nentitybrick:Switch_Room",
    "target_text": "SELECT ?parent WHERE { brick:Switch_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Rooftop Unit.\nentitybrick:Rooftop_Unit",
    "target_text": "SELECT ?label WHERE { brick:Rooftop_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Sound Noise loudness Sensor  readings from Sensor 5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for Alcohol Vapor MQ3 Gas Sensor  5.03 over time?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of a Box Mode Command?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . brick:Box_Mode_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Chilled Water Differential Pressure Load Shed Setpoint is incorrectly configured?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for TVOC  sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Valve Status?\nentitybrick:Valve_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Valve_Status rdfs:label ?label . brick:Valve_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in humidity levels from Sensor 5.01 over the last three months?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does PM10Concentration represent?\nentitybrick:PM10_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:PM10_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the damper position status in the Office.\nentitybldg:Office \n brick:Damper_Position_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Damper_Position_Status ; brick:hasLocation bldg:Office ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Office Kitchen?\nentitybrick:Office_Kitchen",
    "target_text": "SELECT ?property ?value WHERE { brick:Office_Kitchen ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Lockout Temperature Differential Parameter.\nentitybrick:Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Lockout_Temperature_Differential_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Exhaust Air Flow Setpoint a subclass of any BrickSchema classes?\nentitybrick:Exhaust_Air_Flow_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Flow_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the superclass of Pressure Status.\nentitybrick:Pressure_Status",
    "target_text": "SELECT ?parent WHERE { brick:Pressure_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Manual Fire Alarm Activation Equipment is a subclass of Fire Safety Equipment.\nentitybrick:Manual_Fire_Alarm_Activation_Equipment",
    "target_text": "ASK WHERE { brick:Manual_Fire_Alarm_Activation_Equipment rdfs:subClassOf brick:Fire_Safety_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest configuration of the zone air control temperature setpoint in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported byFormaldehyde Level sensor 5.04 over the past week?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Emergency Power Off System?\nentitybrick:Emergency_Power_Off_System",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Power_Off_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a Blind and a Roller Shade?\nentitybrick:Blind",
    "target_text": "SELECT ?superclass WHERE { brick:Blind rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the LPG Natural Gas Town MQ5 Gas Sensor  data from Sensor 5.01 for the past year.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Rated Minimum Current Input?\nentitybrick:ratedMinimumCurrentInput",
    "target_text": "SELECT ?label WHERE { brick:ratedMinimumCurrentInput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.04 of Ethyl Alcohol /C2H5CH ?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you show me the alias referencing the Discharge Air Temperature Step Parameter?\nentitybrick:Discharge_Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Temperature_Step_Parameter brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Conversion efficiency include a definition?\nentitybrick:conversionEfficiency",
    "target_text": "ASK { brick:conversionEfficiency skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the duration sensor in the Showroom.\nentitybldg:Showroom \n brick:Duration_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Duration_Sensor ; brick:hasLocation bldg:Showroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you count the number of constraints applied to access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT (COUNT(?rule) AS ?rule_count) WHERE { brick:Access_Control_Equipment sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label of is associated with?\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?label WHERE { brick:isAssociatedWith rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you point out the location for  Air Quality sensor 5.02?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent TVOC  data available from TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Integral Time Parameter relate to PID tuning?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Building Air Static Pressure Sensor'.\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Building_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Humidifier described in the system?\nentitybrick:Humidifier",
    "target_text": "SELECT ?definition WHERE { brick:Humidifier skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of a Battery Voltage Sensor.\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Battery_Voltage_Sensor rdfs:subClassOf ?superclass . brick:Battery_Voltage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classes are disjoint with Setpoint?\nentitybrick:Setpoint",
    "target_text": "SELECT ?disjoint WHERE { brick:Setpoint owl:disjointWith ?disjoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Static Pressure Deadband Setpoint is called.\nentitybrick:Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Tint Command.\nentitybrick:Tint_Command",
    "target_text": "SELECT ?definition WHERE { brick:Tint_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.44 located?\nentitybldg:airq5.44",
    "target_text": "SELECT ?location WHERE { bldg:airq5.44 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for  Illuminance Sensor 5.04.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Reheat Valve.\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Reheat_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label ofSound Noise loudness Sensor  5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Return Air Temperature Sensor?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many chilled water return temperature measurements were recorded for the building chiller during the evening period today?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for PM10 particulate matter Level Sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label for Water Differential Temperature Sensor.\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Water_Differential_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the sensor that has replaced the Chilled Water Supply Temperature Sensor.\nentitybrick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Chilled_Water_Supply_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about an Auditorium.\nentitybrick:Auditorium",
    "target_text": "SELECT ?property ?value WHERE { brick:Auditorium ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the name of the timestamp property?\nentitybrick:timestamp",
    "target_text": "SELECT ?label WHERE { brick:timestamp rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Switchgear?\nentitybrick:Switchgear",
    "target_text": "SELECT ?label ?definition WHERE { brick:Switchgear rdfs:label ?label . brick:Switchgear skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient CO  as measured by sensor 5.04?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in  PM2.5 particulate matter Level Sensor from Sensor 5.02 could be used to forecast future maintenance needs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Ethyl Alcohol /C2H5CH measurement from sensor5.04, please.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature high reset setpoint in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Absolute Humidity Sensor fall?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Exhaust Air Humidity Setpoint?\nentitybrick:Exhaust_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Min Cooling Discharge Air Flow Setpoint Limit an alias of?\nentitybrick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Air Flow Setpoint.\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for   CO2  Sensor 5.05.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does  Oxygen,O2 Sensor 5.04 belong to?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.53 located?\nentitybldg:c2h5ch5.53",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.53 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's Sound Noise loudness Sensor  output contribute to the overall building air quality index?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Server Room have?\nentitybrick:Server_Room",
    "target_text": "SELECT ?tag WHERE { brick:Server_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Tint Status?\nentitybrick:Tint_Status",
    "target_text": "SELECT ?label WHERE { brick:Tint_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class for Supply Air Flow Sensor.\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Flow_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone supply air temperature in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating discharge air flow setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Fresh Air Setpoint Limit.\nentitybrick:Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Fresh_Air_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all sh:property values associated with Equipment.\nentitybrick:Equipment",
    "target_text": "SELECT ?property WHERE { brick:Equipment sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the LPG Natural Gas Town MQ5 Gas Sensor  sensor in 5.02 and state its sensor type.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Parking Structure a subclass of?\nentitybrick:Parking_Structure",
    "target_text": "SELECT ?parent WHERE { brick:Parking_Structure rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the gas sensor in the Floor2.\nentitybldg:Floor2 \n brick:Gas_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Gas_Sensor ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Switch Room?\nentitybrick:Switch_Room",
    "target_text": "SELECT ?label WHERE { brick:Switch_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.31 located?\nentitybldg:dust5.31",
    "target_text": "SELECT ?location WHERE { bldg:dust5.31 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me where Operative Temperature is officially defined.\nentitybrick:Operative_Temperature",
    "target_text": "SELECT ?definedBy WHERE { brick:Operative_Temperature rdfs:isDefinedBy ?definedBy . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Unoccupied Cooling Discharge Air Flow Setpoint work?\nentitybrick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the NO2 sensor in 5.03 and state its sensor type.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . bldg:NO2_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What readings does an Ammonia Sensor generate?\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Ammonia_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes Furniture has in BrickSchema.\nentitybrick:Furniture",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Furniture ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  Oxygen,O2 Sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective supply air temperature setpoint in the Pool.\nentitybldg:Pool \n brick:Effective_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Supply_Air_Temperature_Setpoint ; brick:hasLocation bldg:Pool ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Domestic Hot Water Temperature Setpoint?\nentitybrick:Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Hot_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Ethyl Alcohol /C2H5CH Sensor 5.02's readings over the past 48 hours.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the definition for Deadband Setpoint.\nentitybrick:Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under what label is a Chilled Water Differential Pressure Proportional Band Parameter categorized?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Relative Humidity?\nentitybrick:Relative_Humidity",
    "target_text": "SELECT ?label WHERE { brick:Relative_Humidity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04 indicate any potential issues with air quality in the building?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Electric Current?\nentitybrick:Electric_Current",
    "target_text": "SELECT ?definition WHERE { brick:Electric_Current skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the applicable unit for Voltage Imbalance.\nentitybrick:Voltage_Imbalance",
    "target_text": "SELECT ?unit WHERE { brick:Voltage_Imbalance qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Oxygen,O2 values from sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Leaving Water Flow Sensor is a subclass of Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Water_Flow_Sensor rdfs:subClassOf brick:Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?label WHERE { brick:Elevator_Shaft rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Min Occupied Heating Supply Air Flow Setpoint Limit is equivalent to Min Occupied Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has voc5.70?\nentitybldg:voc5.70",
    "target_text": "SELECT ?room WHERE { bldg:voc5.70 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Leaving Chilled Water Flow Setpoint include Leaving Water Flow Setpoint?\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint rdfs:subClassOf brick:Leaving_Water_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which heating and cooling systems rely on a Core Temperature Sensor?\nentitybrick:hasPart",
    "target_text": "SELECT ?hvacSystem WHERE { ?hvacSystem brick:hasPart brick:Core_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all loop chilled water supply temperature readings for the chiller recorded today.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category forSound Noise loudness Sensor  5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all attributes of a Disable Fixed Enthalpy Command?\nentitybrick:Disable_Fixed_Enthalpy_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Disable_Fixed_Enthalpy_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the CO  sensor data for Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Manual Auto Status defined?\nentitybrick:Manual_Auto_Status",
    "target_text": "SELECT ?definition WHERE { brick:Manual_Auto_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Speed Status?\nentitybrick:Speed_Status",
    "target_text": "SELECT ?definition WHERE { brick:Speed_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone heating mode command value from RM107A in the last 30 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.01 over time?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many outside air temperature measurements were recorded for AHU 01 during the evening period today?\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Standby Glycool Unit On Off Status have?\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?tag WHERE { brick:Standby_Glycool_Unit_On_Off_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the associated tags for Temperature Step Parameter?\nentitybrick:Temperature_Step_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Step_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector associated with Methane Concentration?\nentitybrick:Methane_Concentration",
    "target_text": "SELECT ?vector WHERE { brick:Methane_Concentration qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Massage Room categorized using tags?\nentitybrick:Massage_Room",
    "target_text": "SELECT ?tag WHERE { brick:Massage_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Reactive Power Sensor.\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Reactive_Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.04's  PM1 particulate matter Level Sensor output compare with other sensors in the building?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.16?\nentitybldg:oxy5.16",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.16 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pv current output sensor in the Lounge.\nentitybldg:Lounge \n brick:PV_Current_Output_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:PV_Current_Output_Sensor ; brick:hasLocation bldg:Lounge ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all RDF properties for the Effective Return Air Temperature Setpoint.\nentitybrick:Effective_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Effective_Return_Air_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the status of a Chilled Water Differential Pressure Load Shed Reset interpreted?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?status WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status ?property ?status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is regulated by the Leaving Hot Water Flow Setpoint?\nentitybrick:Leaving_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Hot_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch all RDF properties for the Entering Domestic Hot Water Temperature Sensor.\nentitybrick:Entering_Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Domestic_Hot_Water_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.02 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Energy Zone'.\nentitybrick:Energy_Zone",
    "target_text": "SELECT ?definition WHERE { brick:Energy_Zone skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Outside Air Temperature Sensor?\nentitybrick:Outside_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is the Hot Water Differential Pressure Proportional Band Parameter important?\nentitybrick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Exhaust Air Static Pressure Sensor measures.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Alcohol Vapor MQ3 Gas Sensor  5.04 and where is it set up?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.06 located?\nentitybldg:mqtwo5.06",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.06 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for PM1 particulate matter Level Sensor 5.03.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Boiler Command play in heating systems?\nentitybrick:Boiler_Command",
    "target_text": "SELECT ?definition WHERE { brick:Boiler_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.03 to forecast potential maintenance needs due to Temperature deviations.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current configuration of the zone air control temperature setpoint in room RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone percent air flow reading for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Occupied Humidity Setpoint.\nentitybrick:Occupied_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for   CO  Sensor 5.05?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  Illuminance Sensor values from sensor 5.03?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?label WHERE { brick:Control_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.69?\nentitybldg:hcho5.69",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.69 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is being used for heating in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which classes does the Occupied Room Air Temperature Setpoint inherit?\nentitybrick:Occupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Room_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has temp5.61?\nentitybldg:temp5.61",
    "target_text": "SELECT ?room WHERE { bldg:temp5.61 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?definition WHERE { brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the  Illuminance Sensor 5.04 and where it is installed.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Illuminance_Sensor_5.04 rdfs:label ?label . bldg:Illuminance_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Open Close Status have?\nentitybrick:Open_Close_Status",
    "target_text": "SELECT ?tag WHERE { brick:Open_Close_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for PM2.5Concentration.\nentitybrick:PM2",
    "target_text": "SELECT ?definition WHERE { brick:PM2.5_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Natural Gas Usage Sensor.\nentitybrick:Natural_Gas_Usage_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Natural_Gas_Usage_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Condenser Water Bypass Valve?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Bypass_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Water Flow Sensor include the tag 'Setpoint'?\nentitybrick:Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Water_Flow_Sensor brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time CO  data from sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied air temperature heating setpoint in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Occupied_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from Ethyl Alcohol /C2H5CH Sensor 5.03 align with smart building sustainability standards?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_On_Off_Command rdfs:label ?label . brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a complete list of details for Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the components fed by AHU01.\nentitybrick:feeds",
    "target_text": "SELECT ?fed WHERE { bldg:AHU01 brick:feeds ?fed . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical supply air pressure data for AHU 02 for the previous month.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pump on off status in the Pantry.\nentitybldg:Pantry \n brick:Pump_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pump_On_Off_Status ; brick:hasLocation bldg:Pantry ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Tint Status.\nentitybrick:Tint_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Tint_Status rdfs:label ?label . brick:Tint_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a complete description of Mixed Air.\nentitybrick:Mixed_Air",
    "target_text": "DESCRIBE brick:Mixed_Air\nWHERE { brick:Mixed_Air ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Reception?\nentitybrick:Reception",
    "target_text": "SELECT ?parent WHERE { brick:Reception rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the live sensor measurement for zone percent air flow in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is CO  Sensor 5.05 located?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Heat Sensor has in BrickSchema.\nentitybrick:Heat_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Heat_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of Air Quality Level 5.02?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Open Close Status?\nentitybrick:Open_Close_Status",
    "target_text": "SELECT ?definition WHERE { brick:Open_Close_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  CO2  Sensor 5.04 based on its most recent data.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting  Illuminance Sensor data by Sensor 5.05?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all attributes of a Domestic Hot Water Valve?\nentitybrick:Domestic_Hot_Water_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Domestic_Hot_Water_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.18?\nentitybldg:mqtwo5.18",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.18 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.50 located?\nentitybldg:dust5.50",
    "target_text": "SELECT ?location WHERE { bldg:dust5.50 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is Audio Visual Equipment, and what tags are linked to it?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . brick:Audio_Visual_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the NO2 sensor 5.02 readings from yesterday.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Oxygen,O2 sensor 5.03 readings from yesterday.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for PM2.5 particulate matter Level Sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  PM1 particulate matter Level Sensor 5.04 at?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Automatic Mode Command compare to other control commands?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Automatic_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Cooling Enable Command?\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything that is stored about Audio Visual Equipment.\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?property ?value WHERE { brick:Audio_Visual_Equipment ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does   TVOC  Sensor 5.02 belong to?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied room air temperature setpoint in the Training Room.\nentitybldg:Training_Room \n brick:Occupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Room_Air_Temperature_Setpoint ; brick:hasLocation bldg:Training_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details of the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_CO2_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a space labeled in the system?\nentitybrick:Space",
    "target_text": "SELECT ?label WHERE { brick:Space rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with Water Flow Setpoint?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone heating mode command for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what NO2 Concentration means.\nentitybrick:NO2_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:NO2_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective target zone air temperature setpoint in the Workshop.\nentitybldg:Workshop \n brick:Effective_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the direction status in the north side.\nentitybldg:north-side \n brick:Direction_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Direction_Status ; brick:hasLocation bldg:north-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Emergency Generator Alarm?\nentitybrick:Emergency_Generator_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Generator_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Steam Baseboard Radiator.\nentitybrick:Steam_Baseboard_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Baseboard_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification and associated tags are assigned to an Absorption Chiller?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . brick:Absorption_Chiller brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Condenser Water Flow Setpoint?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Current Sensor includes the tag 'Current'.\nentitybrick:Current_Sensor",
    "target_text": "ASK WHERE { brick:Current_Sensor brick:hasAssociatedTag tag:Current . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM2.5 particulate matter Level Sensor 5.04 set up?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the Hot Water Differential Pressure Proportional Band Parameter.\nentitybrick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Electric Boiler?\nentitybrick:Electric_Boiler",
    "target_text": "SELECT ?label WHERE { brick:Electric_Boiler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Contact Sensor have?\nentitybrick:Contact_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Contact_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for PM10 particulate matter Level Sensor 5.03.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for  Air temperature Sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Lockout Temperature Setpoint extends.\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM1 particulate matter Level Sensor 5.04 are we talking about and where is it placed?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.04's NO2 readings align with our smart building's sustainability KPIs?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone reheat valve command for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest cooling command event recorded for AHU 01 in Zone 1?\nentitybldg:bldg1.AHU.AHU01.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a DC Bus Voltage Sensor belong to?\nentitybrick:DC_Bus_Voltage_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:DC_Bus_Voltage_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heat sink temperature sensor in the floor1.\nentitybldg:floor1 \n brick:Heat_Sink_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heat_Sink_Temperature_Sensor ; brick:hasLocation bldg:floor1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you show me the alternative name or alias for FCU?\nentitybrick:FCU",
    "target_text": "SELECT ?alias WHERE { brick:FCU brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are narrower than Level?\nentitybrick:Level",
    "target_text": "SELECT ?narrower WHERE { brick:Level skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can return air be classified as a type of air?\nentitybrick:Return_Air",
    "target_text": "ASK WHERE { brick:Return_Air skos:broader brick:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Steam System extends.\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of  PM10 particulate matter Level Sensor readings from Sensor 5.04?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  CO  Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in humidity from Sensor 5.04 could be used to forecast future maintenance needs?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Thermal Power represent?\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?definition WHERE { brick:Thermal_Power skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is a Battery Voltage Sensor, and what tags are linked to it?\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Battery_Voltage_Sensor rdfs:subClassOf ?superclass . brick:Battery_Voltage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Open Office.\nentitybrick:Open_Office",
    "target_text": "SELECT ?tag WHERE { brick:Open_Office brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Voltage Alarm is used for.\nentitybrick:Voltage_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Voltage_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the title of Terminal Unit?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?label WHERE { brick:Terminal_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone percent air flow sensor in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Fire Alarm Pull Station?\nentitybrick:Fire_Alarm_Pull_Station",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Alarm_Pull_Station skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Hot Water Differential Pressure Sensor's purpose?\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time LPG Natural Gas Town MQ5 Gas Sensor  level from sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the superclass relationships for the Unoccupied Return Air Temperature Setpoint?\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Return_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  PM2.5 particulate matter Level Sensor data from Sensor 5.03.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to Audio Visual Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?property ?value WHERE { brick:Audio_Visual_Equipment ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of an Average Zone Air Temperature Sensor?\nentitybrick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Zone_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does the Lighting System belong to?\nentitybrick:Lighting_System",
    "target_text": "SELECT ?parent WHERE { brick:Lighting_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What specific types of static pressure exist?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?subtype WHERE { brick:Static_Pressure skos:narrower ?subtype . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Hot Water Flow Setpoint means.\nentitybrick:Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Jet Nozzle Air Diffuser?\nentitybrick:Jet_Nozzle_Air_Diffuser",
    "target_text": "SELECT ?diffuser WHERE { ?diffuser a brick:Jet_Nozzle_Air_Diffuser . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return hot water temperature setpoint in the Board Room.\nentitybldg:Board_Room \n brick:Return_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Collection Basin Water Temperature Sensor.\nentitybrick:Collection_Basin_Water_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Collection_Basin_Water_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the Sound Noise loudness Sensor  data from Sensor 5.05.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for  PM2.5 particulate matter Level Sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Entering Condenser Water Flow Sensor?\nentitybrick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Condenser_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is  PM10 particulate matter Level Sensor 5.04 showing any signs of potential failure based on recent data?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Touchpanel.\nentitybrick:Touchpanel",
    "target_text": "SELECT ?label ?definition WHERE { brick:Touchpanel rdfs:label ?label . brick:Touchpanel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.68?\nentitybldg:cotwo5.68",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.68 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags are linked to the Leaving Water Differential Pressure Integral Time Parameter?\nentitybrick:Leaving_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the NO2 Sensor 5.02 set up?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display all triples related to Entering Chilled Water.\nentitybrick:Entering_Chilled_Water",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Chilled_Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Inside Face Surface Temperature Setpoints?\nentitybrick:Inside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Inside_Face_Surface_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is VAVRM107B a Variable Air Volume Box?\nentitybrick:Variable_Air_Volume_Box",
    "target_text": "ASK WHERE { bldg:VAVRM107B a brick:Variable_Air_Volume_Box . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Natural Gas Seismic Shutoff Valve.\nentitybrick:Natural_Gas_Seismic_Shutoff_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Natural_Gas_Seismic_Shutoff_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Water Alarm have?\nentitybrick:Water_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the generation sensor in the Dining Room.\nentitybldg:Dining_Room \n brick:Generation_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Generation_Sensor ; brick:hasLocation bldg:Dining_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Hail Sensor in the ontology?\nentitybrick:Hail_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Hail_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Motor Direction Status.\nentitybrick:Motor_Direction_Status",
    "target_text": "SELECT ?label WHERE { brick:Motor_Direction_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has light5.46?\nentitybldg:light5.46",
    "target_text": "SELECT ?room WHERE { bldg:light5.46 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Final Filter?\nentitybrick:Final_Filter",
    "target_text": "SELECT ?tag WHERE { brick:Final_Filter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Relay.\nentitybrick:Relay",
    "target_text": "SELECT ?definition WHERE { brick:Relay skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the latest update on the zone air damper command for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current zone air temperature value observed in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Core Temperature Sensor?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Core_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the function of the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Enthalpy_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling mode status in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Occupied_Cooling_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Mode_Status ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Close Limit.\nentitybrick:Close_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Close_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the High CO2 Alarm.\nentitybrick:High_CO2_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:High_CO2_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What value is indicated by the zone percent air flow sensor in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM1_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Radiant Panel Temperature Sensor?\nentitybrick:Radiant_Panel_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Radiant_Panel_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Entering Hot Water Temperature High Reset Setpoint.\nentitybrick:Entering_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Hot_Water_Temperature_High_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Face Surface Temperature Setpoint?\nentitybrick:Outside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Face_Surface_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the  PM1 particulate matter Level Sensor 5.01 readings from yesterday.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is assigned to Gatehouse?\nentitybrick:Gatehouse",
    "target_text": "SELECT ?label WHERE { brick:Gatehouse rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of   CO2  Sensor 5.02?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Max Occupied Cooling Supply Air Flow Setpoint Limit a subclass of Max Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does  Air temperature Sensor 5.03 have?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has c2h5ch5.39?\nentitybldg:c2h5ch5.39",
    "target_text": "SELECT ?room WHERE { bldg:c2h5ch5.39 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Supply Air Flow High Reset Setpoint a subclass of?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Condenser Water Bypass Valve fall?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Bypass_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Return Air CO2 Setpoint a subclass of?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_CO2_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity and substance are assigned to the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Formaldehyde Level sensor 5.01?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Formaldehyde Level sensor values from sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?definition WHERE { brick:Wind_Direction skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for   CO  Sensor 5.02.\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Workshop is used for.\nentitybrick:Workshop",
    "target_text": "SELECT ?definition WHERE { brick:Workshop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Alcohol Vapor MQ3 Gas Sensor  5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Outside Air Dewpoint Sensor.\nentitybrick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Dewpoint_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Flow Sensor.\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Damper Position Setpoint is a subclass of Setpoint.\nentitybrick:Damper_Position_Setpoint",
    "target_text": "ASK WHERE { brick:Damper_Position_Setpoint rdfs:subClassOf brick:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Ethyl Alcohol /C2H5CH data from sensor5.02.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by PM2.5 particulate matter Level Sensor 5.01's readings over the past 48 hours.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Supply Air Proportional Gain Parameter?\nentitybrick:Supply_Air_Proportional_Gain_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Proportional_Gain_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the PIR Sensor?\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PIR_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.34 airq5.34?\nentitybldg:hum5.34",
    "target_text": "SELECT ?room WHERE { bldg:hum5.34 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  NO2 Sensor 5.04 set up at?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Exhaust Air Stack Flow Integral Time Parameter fall?\nentitybrick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which general category and exact subtypes does ElectricEnergy belong to?\nentitybrick:Electric_Energy",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowerCategories) WHERE { brick:Electric_Energy skos:broader ?broader . OPTIONAL { brick:Electric_Energy skos:narrower ?narrower . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has dust5.46?\nentitybldg:dust5.46",
    "target_text": "SELECT ?room WHERE { bldg:dust5.46 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.03's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings and overall building air quality index?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in  Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Unit Failure Alarm.\nentitybrick:Unit_Failure_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Unit_Failure_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from  PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Air Alarm.\nentitybrick:Air_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Air_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Water Bypass Valve labeled in the ontology?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Bypass_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve every property of the Return Air Humidity Sensor.\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Humidity_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings of  Alcohol Vapor MQ3 Gas Sensor  5.01 compared to its normal range?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Bypass Valve extends.\nentitybrick:Bypass_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Bypass_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all details about Humidity using DESCRIBE.\nentitybrick:Humidity",
    "target_text": "DESCRIBE brick:Humidity\nWHERE { brick:Humidity ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.29?\nentitybldg:airq5.29",
    "target_text": "SELECT ?room WHERE { bldg:airq5.29 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Static Pressure Sensor include Discharge Air Static Pressure Sensor?\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Sensor owl:equivalentClass brick:Discharge_Air_Static_Pressure_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Outside Air CO Sensor a subclass of?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_CO_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Return Air Humidity Sensor.\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where Combustible Gas Smoke MQ2 Sensor  5.04 is located.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Entering Water Flow Sensor.\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  TVOC  sensor is deployed in room 5.01 and what is its kind?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:TVOC_Level_Sensor_5.01 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone air temperature sensor currently indicate for RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for  Air Quality Level 5.04 over time?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.26located?\nentitybldg:voc5.26",
    "target_text": "SELECT ?location WHERE { bldg:voc5.26 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Temperature Differential Reset Setpoint is used for.\nentitybrick:Temperature_Differential_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Differential_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Water Loss Alarm a subclass of?\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Water_Loss_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the emergency air flow system status in the Corridor.\nentitybldg:Corridor \n brick:Emergency_Air_Flow_System_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Emergency_Air_Flow_System_Status ; brick:hasLocation bldg:Corridor ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Reactive Power call itself?\nentitybrick:Reactive_Power",
    "target_text": "SELECT ?label WHERE { brick:Reactive_Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Entering Chilled Water Temperature Setpoint a subclass of any BrickSchema classes?\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class for Hail Sensor?\nentitybrick:Hail_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Hail_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  Air Quality Level 5.03 is located.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the classes that Water Temperature Alarm extends.\nentitybrick:Water_Temperature_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Water_Temperature_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Heating Ventilation Air Conditioning System a subclass of?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Ventilation_Air_Conditioning_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Pre Filter.\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?tag WHERE { brick:Pre_Filter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Energy Storage System?\nentitybrick:Energy_Storage_System",
    "target_text": "SELECT ?tag WHERE { brick:Energy_Storage_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Condensing Natural Gas Boiler.\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?property ?value WHERE { brick:Condensing_Natural_Gas_Boiler ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the switch status in the Kitchen.\nentitybldg:Kitchen \n brick:Switch_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Switch_Status ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of Combustible Gas Smoke MQ2 Sensor  5.05 over the last month?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the inverse property of hasPoint.\nentitybrick:hasPoint",
    "target_text": "SELECT ?inverse WHERE { brick:hasPoint owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.22?\nentitybldg:hcho5.22",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.22 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does an air temperature step parameter fall?\nentitybrick:Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?category WHERE { brick:Air_Temperature_Step_Parameter rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.23?\nentitybldg:notwo5.23",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.23 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for  Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Supply Air Static Pressure Proportional Band Parameter.\nentitybrick:Supply_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Static_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for Combustible Gas Smoke MQ2 Sensor  from sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Water Differential Temperature Sensor do?\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Water_Differential_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Return' associated with Return Air Temperature Sensor?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Return_Air_Temperature_Sensor brick:hasAssociatedTag tag:Return . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.16?\nentitybldg:co5.16",
    "target_text": "SELECT ?room WHERE { bldg:co5.16 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.02 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find all Watt-based measurement units for Thermal Power.\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?unit WHERE { brick:Thermal_Power qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), 'W')) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Gross Area?\nentitybrick:grossArea",
    "target_text": "SELECT ?label WHERE { brick:grossArea rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is TVOC  Sensor 5.03 chillin' in the building?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for PM10 particulate matter Level Sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the associated tags for Proportional Gain Parameter?\nentitybrick:Proportional_Gain_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Proportional_Gain_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does Shading System belong to?\nentitybrick:Shading_System",
    "target_text": "SELECT ?parent WHERE { brick:Shading_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties and values for Gas.\nentitybrick:Gas",
    "target_text": "SELECT ?property ?value WHERE { brick:Gas ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Occupied Humidity Setpoint.\nentitybrick:Occupied_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Humidity_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Min Air Flow Setpoint Limit.\nentitybrick:Min_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details available for Enthalpy in our system?\nentitybrick:Enthalpy",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?unit; separator=\", \") AS ?units) ?reference WHERE { brick:Enthalpy rdfs:label ?label . brick:Enthalpy skos:definition ?definition . brick:Enthalpy qudt:applicableUnit ?unit . brick:Enthalpy brick:hasQUDTReference ?reference . } GROUP BY ?label ?definition ?reference"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqnine5.54?\nentitybldg:mqnine5.54",
    "target_text": "SELECT ?room WHERE { bldg:mqnine5.54 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Motor Direction Status.\nentitybrick:Motor_Direction_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Motor_Direction_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Max Cooling Discharge Air Flow Setpoint Limit identified in the ontology?\nentitybrick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the Heat Sink Temperature Sensor?\nentitybrick:Heat_Sink_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Heat_Sink_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for ratedVoltageInput?\nentitybrick:ratedVoltageInput",
    "target_text": "SELECT ?label WHERE { brick:ratedVoltageInput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Stage Riser?\nentitybrick:Stage_Riser",
    "target_text": "SELECT ?label WHERE { brick:Stage_Riser rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of PM10 particulate matter Level Sensor 5.04.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  Air Quality Level reading from Sensor 5.05?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in CO2  sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags that are associated with an air flow sensor.\nentitybrick:Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is assigned to the Fan Speed Command?\nentitybrick:Fan_Speed_Command",
    "target_text": "SELECT ?label WHERE { brick:Fan_Speed_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.02 to forecast potential maintenance needs due to NO2 deviations.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Differential Pressure Setpoint Limit include the tag 'Point'?\nentitybrick:Differential_Pressure_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Differential_Pressure_Setpoint_Limit brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change in zone air control temperature setpoint for RM107A in the past week?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone air control temperature setpoint as measured in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Sensor 5.03 indicate any potential issues with air quality in the building?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM1 particulate matter Level Sensor 5.04 hanging out?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What function does the Final Filter serve in the filtration process?\nentitybrick:Final_Filter",
    "target_text": "SELECT ?definition WHERE { brick:Final_Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name for Air Quality Level 5.05.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  Ethyl Alcohol /C2H5CH Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating discharge air flow setpoint in the Workshop.\nentitybldg:Workshop \n brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for NO2 Sensor 5.03.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the TVOC  data from Sensor 5.04 with HVAC anomalies?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor monitors the outside air temperature in AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Outside_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the declared label for Entering Chilled Water?\nentitybrick:Entering_Chilled_Water",
    "target_text": "SELECT ?label WHERE { brick:Entering_Chilled_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the pump start/stop command summary for the chiller for yesterday afternoon?\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.01 show any unusual  PM10 particulate matter Level Sensor spikes today?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone air temperature detected in RM107A over the last 3 hours?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for humidity sensor 5.01.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Failure Alarm represent?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Failure_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's  PM10 particulate matter Level Sensor output contribute to the overall building air quality index?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the humidity data from Sensor 5.02 with HVAC anomalies?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed inSound Noise loudness Sensor  5.05's data over the last month?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does an Average Zone Air Temperature Sensor belong to, and what tags describe it?\nentitybrick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Average_Zone_Air_Temperature_Sensor rdfs:subClassOf ?superclass . brick:Average_Zone_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Energy System.\nentitybrick:Energy_System",
    "target_text": "SELECT ?tag WHERE { brick:Energy_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.25 located?\nentitybldg:mqnine5.25",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.25 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Ozone Level Sensor have?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ozone_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Water Level Sensor.\nentitybrick:Water_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Water_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for PM10 particulate matter Level Sensor 5.04.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Return Air Humidity Sensor?\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Return_Air_Humidity_Sensor rdfs:label ?label . brick:Return_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor sensor installed in room 5.05 and what type is it?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.16located?\nentitybldg:voc5.16",
    "target_text": "SELECT ?location WHERE { bldg:voc5.16 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water differential pressure load shed reset status in the Restroom.\nentitybldg:Restroom \n brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes a Building Hot Water Meter from other energy meters?\nentitybrick:Building_Hot_Water_Meter",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Hot_Water_Meter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that  Alcohol Vapor MQ3 Gas Sensor  5.04 falls under.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Report the current measurement of zone supply air temperature in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for  PM10 particulate matter Level Sensor 5.02 over the last six months?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the isDefinedBy value for PM2.5Concentration.\nentitybrick:PM2",
    "target_text": "SELECT ?resource WHERE { brick:PM2.5_Concentration rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in Temperature sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Max Water Temperature Setpoint?\nentitybrick:Max_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Max_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using data from  Ethyl Alcohol /C2H5CH Sensor 5.05.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Rain Duration Sensor.\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Duration_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Fresh Air Setpoint Limit.\nentitybrick:Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Fresh_Air_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone air temperature in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to System?\nentitybrick:System",
    "target_text": "SELECT ?tag WHERE { brick:System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Water Loop is a subclass of Loop.\nentitybrick:Water_Loop",
    "target_text": "ASK WHERE { brick:Water_Loop rdfs:subClassOf brick:Loop . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Reheat Valve.\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Reheat_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for   CO  Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Radiation Hot Water System.\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Radiation_Hot_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Heat Wheel related to the Heat Exchanger?\nentitybrick:Heat_Wheel",
    "target_text": "SELECT ?relation WHERE { brick:Heat_Wheel rdfs:subClassOf brick:Heat_Exchanger . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with  Air Humidity Sensor 5.01?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class doesFormaldehyde Level sensor 5.01 belong to?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Unoccupied Room Air Temperature Setpoint have the tag 'Room'?\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Room_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas and temperature in the area monitored by Sensor 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Condenser Water Valve?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving domestic hot water temperature setpoint in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest CO  reading from  CO  sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Pressure Sensor?\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Pressure_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Entering Water Flow Setpoint.\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give details about the Hot Water Loop.\nentitybrick:Hot_Water_Loop",
    "target_text": "SELECT ?loop WHERE { ?loop a brick:Hot_Water_Loop . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to a Bus Riser.\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?tag WHERE { brick:Bus_Riser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has voc5.12?\nentitybldg:voc5.12",
    "target_text": "SELECT ?room WHERE { bldg:voc5.12 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the function of the Entering Domestic Hot Water Temperature Setpoint.\nentitybrick:Entering_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Domestic_Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall cooling valve output statistics for AHU 02 for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: To which setpoint category does Reset Setpoint relate?\nentitybrick:Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'DC Bus Voltage Sensor'.\nentitybrick:DC_Bus_Voltage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:DC_Bus_Voltage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.05 say about the current Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of Air Quality sensor 5.02 based on recent readings.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Chilled Water Discharge Flow Sensor?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Discharge_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the supported measurement units for apparent power?\nentitybrick:Apparent_Power",
    "target_text": "SELECT ?unit WHERE { brick:Apparent_Power qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Supply Air Flow High Reset Setpoint.\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between humidity and temperature in the area monitored by Sensor 5.05?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Relay Command?\nentitybrick:Relay_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Relay_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Domestic Hot Water Temperature Sensor measure?\nentitybrick:Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Domestic_Hot_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Loading Dock?\nentitybrick:Loading_Dock",
    "target_text": "SELECT ?parent WHERE { brick:Loading_Dock rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Sound Noise loudness Sensor  5.05 showing any signs of potential failure based on recent data?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.01 following in terms of CO  for the past hour?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the High Supply Air Temperature Alarm.\nentitybrick:High_Supply_Air_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:High_Supply_Air_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Condenser Water Bypass Valve fit into?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Bypass_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for Domestic Water.\nentitybrick:Domestic_Water",
    "target_text": "SELECT ?property ?value WHERE { brick:Domestic_Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  Air Quality sensor 5.03 at?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe an air temperature step parameter?\nentitybrick:Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Air_Temperature_Step_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Equipment' a tag for Equipment?\nentitybrick:Equipment",
    "target_text": "ASK WHERE { brick:Equipment brick:hasAssociatedTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Standby Glycool Unit On Off Status extends.\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?parent WHERE { brick:Standby_Glycool_Unit_On_Off_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.67located?\nentitybldg:voc5.67",
    "target_text": "SELECT ?location WHERE { bldg:voc5.67 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Domestic Hot Water Temperature Sensor?\nentitybrick:Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Hot_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a Battery Room and a Power Distribution Room?\nentitybrick:Battery_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Wardrobe have?\nentitybrick:Wardrobe",
    "target_text": "SELECT ?tag WHERE { brick:Wardrobe brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Max Cooling Supply Air Flow Setpoint Limit include the tag 'Setpoint'?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Zone Air Temperature Setpoint a subclass of Air Temperature Setpoint?\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Zone_Air_Temperature_Setpoint rdfs:subClassOf brick:Air_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Leaving Chilled Water?\nentitybrick:Leaving_Chilled_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor doesFormaldehyde Level sensor 5.02 represent?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air damper command value for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.01 measuring  PM1 particulate matter Level Sensor at the moment?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Tint Status have?\nentitybrick:Tint_Status",
    "target_text": "SELECT ?tag WHERE { brick:Tint_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the bypass water flow sensor in the Cafe.\nentitybldg:Cafe \n brick:Bypass_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Bypass_Water_Flow_Sensor ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label WHERE { brick:Steam_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a complete RDF description for Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "DESCRIBE brick:Heating_Temperature_Setpoint\nWHERE { brick:Heating_Temperature_Setpoint ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Heating Temperature Setpoint?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the domestic hot water discharge temperature sensor in the West.\nentitybldg:West \n brick:Domestic_Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Domestic_Hot_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:West ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Entering Water Flow Sensor means.\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me which main category includes Water Usage Sensor.\nentitybrick:Water_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Water_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04, please.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Entering Hot Water Temperature Setpoint have?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Condenser Water Flow Sensor.\nentitybrick:Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the sensor indicate about the zone reheat valve command in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Disable Differential Temperature Command have?\nentitybrick:Disable_Differential_Temperature_Command",
    "target_text": "SELECT ?tag WHERE { brick:Disable_Differential_Temperature_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Valve Command have?\nentitybrick:Valve_Command",
    "target_text": "SELECT ?tag WHERE { brick:Valve_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classes are disjoint with Command?\nentitybrick:Command",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?disjoint; separator=\", \") AS ?disjoints) WHERE { brick:Command owl:disjointWith ?disjoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Exhaust Air Temperature Sensor?\nentitybrick:Exhaust_Air_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of   CO2  Sensor 5.04?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Discharge Air Temperature Low Reset Setpoint an alias of?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature low reset setpoint in the Zone C.\nentitybldg:Zone_C \n brick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Heating Start Stop Status?\nentitybrick:Heating_Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Leaving Hot Water Temperature Setpoint set?\nentitybrick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for   TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Temperature Cooling Setpoint has the tag 'Point'?\nentitybrick:Supply_Air_Temperature_Cooling_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Cooling_Setpoint brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Supply' one of the tags for Supply Air Temperature Sensor?\nentitybrick:Supply_Air_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Sensor brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are attached to an Access Reader?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?tag WHERE { brick:Access_Reader brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does Air Quality sensor 5.04 represent?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Cooling Command a subclass of?\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?parent WHERE { brick:Cooling_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags related to Static Pressure Deadband Setpoint.\nentitybrick:Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the dimension vector associated with CurrentAngle.\nentitybrick:Current_Angle",
    "target_text": "SELECT ?dimVector WHERE { brick:Current_Angle qudt:hasDimensionVector ?dimVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Sound Noise loudness Sensor  5.04 are we talking about and where is it placed?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Temperature data by Sensor 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative TVOC  change reported by  TVOC  Sensor 5.05 over the past week?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve the skos:definition for the Frequency Sensor.\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Frequency_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Temperature Sensor measure?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label, definition, and equivalent class are assigned to the Average Supply Air Flow Sensor?\nentitybrick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label ?definition ?eq WHERE { brick:Average_Supply_Air_Flow_Sensor rdfs:label ?label . brick:Average_Supply_Air_Flow_Sensor skos:definition ?definition . brick:Average_Supply_Air_Flow_Sensor owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Illuminance Sensor?\nentitybrick:Illuminance_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Illuminance_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.05 say about the current Oxygen,O2?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Average Supply Air Flow Sensor.\nentitybrick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Supply_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for Dynamic Pressure?\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Dynamic_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with NO2 Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Low Humidity Alarm Parameter contribute to system efficiency?\nentitybrick:Low_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Low_Humidity_Alarm_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the humidity reading from sensor 5.04 right now?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Supply Air Temperature Sensor?\nentitybrick:Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Temperature_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Solar Zenith Angle Sensor's label and definition.\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Solar_Zenith_Angle_Sensor rdfs:label ?label . brick:Solar_Zenith_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Status.\nentitybrick:Status",
    "target_text": "SELECT ?label WHERE { brick:Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Derivative Time Parameter?\nentitybrick:Derivative_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Derivative_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Entering High Temperature Hot Water Temperature Sensor?\nentitybrick:Entering_High_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_High_Temperature_Hot_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest LPG Natural Gas Town MQ5 Gas Sensor  sensor data for 5.05.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for System Status?\nentitybrick:System_Status",
    "target_text": "SELECT ?tag WHERE { brick:System_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Discharge Air Temperature Setpoint.\nentitybrick:Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Basement?\nentitybrick:Basement",
    "target_text": "SELECT ?tag WHERE { brick:Basement brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Elevator Shaft inherit?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?parent WHERE { brick:Elevator_Shaft rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Library?\nentitybrick:Library",
    "target_text": "SELECT ?parent WHERE { brick:Library rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Rain Level Sensor.\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Rain_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Hot Water Differential Pressure Integral Time Parameter control?\nentitybrick:Hot_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:Hot_Water_Differential_Pressure_Integral_Time_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the  Air Quality Level 5.02 readings from yesterday.\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum Combustible Gas Smoke MQ2 Sensor  in sensor 5.03 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Water Flow Setpoint measure?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of  PM1 particulate matter Level Sensor readings from Sensor 5.03?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Unoccupied Room Air Temperature Setpoint.\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Room_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature low reset setpoint in the Music Room.\nentitybldg:Music_Room \n brick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the inverse of the Has part property?\nentitybrick:hasPart",
    "target_text": "SELECT ?inverse WHERE { brick:hasPart owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water level sensor in the East Side.\nentitybldg:East_Side \n brick:Water_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Level_Sensor ; brick:hasLocation bldg:East_Side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for Air Humidity Sensor 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the property that is the inverse of Has part.\nentitybrick:hasPart",
    "target_text": "SELECT ?inverse WHERE { brick:hasPart owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current control value for the zone air control temperature in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Leaving Condenser Water Temperature Sensor means.\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for  PM2.5 particulate matter Level Sensor 5.02?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a parent class for Differential Pressure Deadband Setpoint?\nentitybrick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "ASK { brick:Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category includes Rated Minimum Current Output?\nentitybrick:ratedMinimumCurrentOutput",
    "target_text": "SELECT ?parent WHERE { brick:ratedMinimumCurrentOutput rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Banquet Hall.\nentitybldg:Banquet_Hall \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Banquet_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Grains Sensor extends.\nentitybrick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Grains_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Visitor Lobby.\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?tag WHERE { brick:Visitor_Lobby brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?parent WHERE { brick:Overridden_On_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you check if Building is defined?\nentitybrick:Building",
    "target_text": "ASK { brick:Building skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all details about Terminal Unit using DESCRIBE.\nentitybrick:Terminal_Unit",
    "target_text": "DESCRIBE brick:Terminal_Unit\nWHERE { brick:Terminal_Unit ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the brick:hasSubstance value for PM2.5 Sensor?\nentitybrick:PM2",
    "target_text": "SELECT ?substance WHERE { brick:PM2.5_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Automatic Tint Window work?\nentitybrick:Automatic_Tint_Window",
    "target_text": "SELECT ?definition WHERE { brick:Automatic_Tint_Window skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time  Air Quality Level data from sensor 5.05.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve full details of the Dual Duct Air Handling Unit.\nentitybrick:Dual_Duct_Air_Handling_Unit",
    "target_text": "SELECT ?label ?definition ?eq (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Dual_Duct_Air_Handling_Unit rdfs:label ?label . brick:Dual_Duct_Air_Handling_Unit skos:definition ?definition . OPTIONAL { brick:Dual_Duct_Air_Handling_Unit owl:equivalentClass ?eq . } OPTIONAL { brick:Dual_Duct_Air_Handling_Unit brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many mixed air temperature measurements were logged on AHU 02 during the early hours today?\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term NO2 trends from Sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the Temperature sensor data for Sensor 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the Sound Noise loudness Sensor  data from sensor 5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the PV Generation System?\nentitybrick:PV_Generation_System",
    "target_text": "SELECT ?tag WHERE { brick:PV_Generation_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification and associated tags are assigned to a Blind Group?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Blind_Group rdfs:subClassOf ?superclass . brick:Blind_Group brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and tags are assigned to the Zone Occupied Load Shed Command?\nentitybrick:Zone_Occupied_Load_Shed_Command",
    "target_text": "SELECT ?label ?tag WHERE { brick:Zone_Occupied_Load_Shed_Command rdfs:label ?label . OPTIONAL { brick:Zone_Occupied_Load_Shed_Command brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.05 and tell me its class.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . bldg:CO_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Noncondensing Natural Gas Boiler.\nentitybrick:Noncondensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?rule WHERE { brick:Noncondensing_Natural_Gas_Boiler sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which units can be used to measure static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the CO  values from sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PM1_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Control Room have?\nentitybrick:Control_Room",
    "target_text": "SELECT ?tag WHERE { brick:Control_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Photovoltaic Array has the tag 'Photovoltaic'.\nentitybrick:Photovoltaic_Array",
    "target_text": "ASK WHERE { brick:Photovoltaic_Array brick:hasAssociatedTag tag:Photovoltaic . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the smallest-scale units applicable to static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), \"Micro\") || CONTAINS(STR(?unit), \"Pico\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Occupancy_Count?\nentitybrick:Occupancy_Count",
    "target_text": "SELECT ?label WHERE { brick:Occupancy_Count rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is the Hold Status used?\nentitybrick:Hold_Status",
    "target_text": "SELECT ?definition WHERE { brick:Hold_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Occupied Cooling Temperature Setpoint.\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Setpoint' one of the tags for Differential Pressure Setpoint?\nentitybrick:Differential_Pressure_Setpoint",
    "target_text": "ASK WHERE { brick:Differential_Pressure_Setpoint brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Dewpoint Sensor?\nentitybrick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Dewpoint_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Thermal Power Meter.\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?label WHERE { brick:Thermal_Power_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition source for FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?source WHERE { brick:Formaldehyde_Concentration rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Time Setpoint?\nentitybrick:Time_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Time_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on temperature Sensor 5.03's performance compared to industry benchmarks.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What points are associated with VAVRM107B?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM107B brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Oxygen,O2 sensor 5.05 and its installation location.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in Illuminance Sensor 5.04's data over the last month?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Outside Air Temperature Low Reset Setpoint have?\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone supply air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.16?\nentitybldg:mqthree5.16",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.16 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from  Air Quality Level 5.01 align with smart building sustainability standards?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a complete overview of the Entering Hot Water Temperature Sensor including its label, definition, parent class, tags, measured quantity, and substance?\nentitybrick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label ?definition ?parent (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) ?quantity ?substance WHERE { brick:Entering_Hot_Water_Temperature_Sensor rdfs:label ?label . brick:Entering_Hot_Water_Temperature_Sensor skos:definition ?definition . brick:Entering_Hot_Water_Temperature_Sensor rdfs:subClassOf ?parent . brick:Entering_Hot_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . brick:Entering_Hot_Water_Temperature_Sensor brick:hasQuantity ?quantity . brick:Entering_Hot_Water_Temperature_Sensor brick:hasSubstance ?substance . } GROUP BY ?label ?definition ?parent ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for a Bypass Air Humidity Setpoint?\nentitybrick:Bypass_Air_Humidity_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Bypass_Air_Humidity_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Exhaust Air Dewpoint Sensor categorized in the ontology?\nentitybrick:Exhaust_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Dewpoint_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Ethyl Alcohol /C2H5CH readings from Sensor 5.02?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter water differential pressure sensor in the Roof.\nentitybldg:Roof \n brick:Filter_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:Roof ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags are used for RM103?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM103 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Relief Damper.\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?rule WHERE { brick:Relief_Damper sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Passive Chilled Beam?\nentitybrick:Passive_Chilled_Beam",
    "target_text": "SELECT ?parent WHERE { brick:Passive_Chilled_Beam rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for  Air Temperature Sensor 5.01.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Occupancy Command.\nentitybrick:Occupancy_Command",
    "target_text": "SELECT ?label WHERE { brick:Occupancy_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are linked to PM10 Sensor?\nentitybrick:PM10_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PM10_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve the descriptive text (skos:definition) for the Discharge Air Temperature Alarm.\nentitybrick:Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.41 located?\nentitybldg:mqnine5.41",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.41 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the  PM10 particulate matter Level Sensor measurements from Sensor 5.03 that might trigger a maintenance alert?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of PM2.5 particulate matter Level Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags assigned to the Proportional Gain Parameter?\nentitybrick:Proportional_Gain_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Proportional_Gain_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe a CO2 level sensor?\nentitybrick:CO2_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO2_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Air Humidity Sensor 5.02 located?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air wet bulb temperature sensor in the Floor4.\nentitybldg:Floor4 \n brick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Wet_Bulb_Temperature_Sensor ; brick:hasLocation bldg:Floor4 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Oxygen,O2 Sensor 5.01 showing any signs of potential failure based on recent data?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the  PM2.5 particulate matter Level Sensor readings from Sensor 5.01 help in predicting potential failures or recalibration needs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is PPB a defined unit for PM2.5Concentration?\nentitybrick:PM2",
    "target_text": "ASK WHERE { brick:PM2.5_Concentration qudt:applicableUnit unit:PPB . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the Temperature sensor installed in room 5.04.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Temperature_Sensor_5.04 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the  CO  sensor 5.02 and where is it located?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:CO_Level_Sensor_5.02 rdfs:label ?label . bldg:CO_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the sash position sensor in the Reading Room.\nentitybldg:Reading_Room \n brick:Sash_Position_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Sash_Position_Sensor ; brick:hasLocation bldg:Reading_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Retail Room extends.\nentitybrick:Retail_Room",
    "target_text": "SELECT ?parent WHERE { brick:Retail_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Compressor?\nentitybrick:Compressor",
    "target_text": "SELECT ?rule WHERE { brick:Compressor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Water Loss Alarm?\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Water_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Report the zone air damper command configuration for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical zone air control temperature setpoint data for RM107A for the previous month.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by Illuminance Sensor 5.01 over the past week?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.04 reported a significant drop or rise in  Illuminance Sensor recently?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is PM2.5 particulate matter Level Sensor 5.02?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that  Alcohol Vapor MQ3 Gas Sensor  5.02 falls under.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve a full description of Entering Chilled Water in RDF format.\nentitybrick:Entering_Chilled_Water",
    "target_text": "DESCRIBE brick:Entering_Chilled_Water\nWHERE { brick:Entering_Chilled_Water ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Sound Noise loudness Sensor  5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the domestic hot water discharge temperature setpoint in the west side.\nentitybldg:west-side \n brick:Domestic_Hot_Water_Discharge_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Domestic_Hot_Water_Discharge_Temperature_Setpoint ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone air temperature value from RM107A in the last 30 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating discharge air flow setpoint in the Playground.\nentitybldg:Playground \n brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Playground ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify whether Demand Setpoint is defined.\nentitybrick:Demand_Setpoint",
    "target_text": "ASK { brick:Demand_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Occupied' is a tag for Occupied Cooling Supply Air Flow Setpoint?\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Occupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in Oxygen,O2 levels from Sensor 5.03 over the last three months?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Air' one of the tags for Supply Air Temperature Step Parameter?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes a Bypass Command?\nentitybrick:Bypass_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Chilled Water Discharge Temperature Sensor belong to?\nentitybrick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Discharge_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 in our smart building?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does brick:isReplacedBy indicate for the Chilled Water Discharge Flow Sensor?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?version ?message ?replacement WHERE { brick:Chilled_Water_Discharge_Flow_Sensor brick:deprecatedInVersion ?version; brick:deprecationMitigationMessage ?message; brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date  Illuminance Sensor level from sensor 5.05?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for Sound Noise loudness Sensor  5.01.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of Chilled Water Temperature Sensor.\nentitybrick:Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for Outside Air Temperature Setpoint.\nentitybrick:Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Load Setpoint identified in the ontology?\nentitybrick:Load_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Load_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Chilled Water Flow Setpoint means.\nentitybrick:Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the aliasOf reference, if any, for the HX class.\nentitybrick:HX",
    "target_text": "SELECT ?alias WHERE { brick:HX brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the skos:broader values for Precipitation?\nentitybrick:Precipitation",
    "target_text": "SELECT ?broader WHERE { brick:Precipitation skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether Occupied Cooling Supply Air Flow Setpoint includes the tag 'Flow'.\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Rain Level Sensor.\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: To which group does a CO Level Sensor belong?\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.34located?\nentitybldg:voc5.34",
    "target_text": "SELECT ?location WHERE { bldg:voc5.34 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what On Off Status means.\nentitybrick:On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name/label for Min Limit?\nentitybrick:Min_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type forCombustible Gas Smoke MQ2 Sensor 5.02.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative CO  change reported by  CO  Sensor 5.02 over the past week?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Occupied Air Temperature Heating Setpoint.\nentitybrick:Occupied_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Air_Temperature_Heating_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering condenser water flow sensor in the central area.\nentitybldg:central-area \n brick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Condenser_Water_Flow_Sensor ; brick:hasLocation bldg:central-area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating mode status in the Vestibule.\nentitybldg:Vestibule \n brick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Mode_Status ; brick:hasLocation bldg:Vestibule ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the  Air Quality Level 5.02 and where is it located?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command point is associated with damperVAVRM112?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:damperVAVRM112 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Thermostat Status.\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Thermostat_Status rdfs:label ?label . brick:Thermostat_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the Hot Water Coil?\nentitybrick:Hot_Water_Coil",
    "target_text": "SELECT ?coil WHERE { ?coil a brick:Hot_Water_Coil . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Disable Status?\nentitybrick:Disable_Status",
    "target_text": "SELECT ?label WHERE { brick:Disable_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Unoccupied Cooling Temperature Setpoint?\nentitybrick:Unoccupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Control Room fit into?\nentitybrick:Control_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Control_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is  Illuminance Sensor 5.03 found?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Discharge Air Temperature Step Parameter.\nentitybrick:Discharge_Air_Temperature_Step_Parameter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Step_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Preheat Supply Air Temperature Sensor means.\nentitybrick:Preheat_Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Preheat_Supply_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Thermal Energy classified in QUDT?\nentitybrick:Thermal_Energy",
    "target_text": "SELECT ?reference WHERE { brick:Thermal_Energy brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the category that the Disable Command extends.\nentitybrick:Disable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Disable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the dimension vector for Voltage Angle.\nentitybrick:Voltage_Angle",
    "target_text": "SELECT ?vector WHERE { brick:Voltage_Angle qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe Terminal Unit?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Terminal_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types of HVAC systems use an Average Heating Demand Sensor?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount Formaldehyde Level sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the quantity measured by Supply Air Differential Pressure Sensor.\nentitybrick:Supply_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Flow means.\nentitybrick:Flow",
    "target_text": "SELECT ?definition WHERE { brick:Flow skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest loop chilled water supply temperature reading for the chiller from the last 2 hours.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow low reset setpoint in the Lobby.\nentitybldg:Lobby \n brick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Low_Reset_Setpoint ; brick:hasLocation bldg:Lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of  Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What systems in the building adjust based on the max hot water differential pressure setpoint limit?\nentitybrick:regulates",
    "target_text": "SELECT ?eq WHERE { ?eq brick:regulates ?limit . ?limit a brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is PhasorAngle defined as a Quantity?\nentitybrick:Phasor_Angle",
    "target_text": "ASK WHERE { brick:Phasor_Angle a brick:Quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if PM1 particulate matter Level Sensor 5.01 shows abnormal readings today.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the inside face surface temperature setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Inside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Inside_Face_Surface_Temperature_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the motion sensor in the Vestibule.\nentitybldg:Vestibule \n brick:Motion_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Motion_Sensor ; brick:hasLocation bldg:Vestibule ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition of Discharge Air Temperature Sensor.\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature cooling setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Discharge_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Cooling_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many supply air temperature measurements were recorded for AHU 02 during the evening period today?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Static Pressure Deadband Setpoint include Static Pressure Deadband Setpoint?\nentitybrick:Supply_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Deadband_Setpoint rdfs:subClassOf brick:Static_Pressure_Deadband_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Outside Air CO2 Sensor?\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?type WHERE { brick:Outside_Air_CO2_Sensor a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine if Sensor 5.01 meets the energy efficiency and sustainability criteria set by our smart building guidelines.\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for Ethyl Alcohol /C2H5CH Sensor 5.02 and its reliability trends.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied target zone air temperature setpoint in the Library.\nentitybldg:Library \n brick:Occupied_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Emergency Alarm inherit from?\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of Irradiance?\nentitybrick:Irradiance",
    "target_text": "SELECT ?definition WHERE { brick:Irradiance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Water Level Alarm.\nentitybrick:Water_Level_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Level_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Temperature High Reset Setpoint?\nentitybrick:Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Absorption Chiller.\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?property ?value WHERE { brick:Absorption_Chiller ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  CO2  Sensor 5.02 set up at?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what power means when describing energy transfer?\nentitybrick:Power",
    "target_text": "SELECT ?definition WHERE { brick:Power skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information for the Heating Supply Air Temperature Integral Time Parameter including its label, tags, and equivalent class.\nentitybrick:Heating_Supply_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?label (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) ?eq WHERE { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter rdfs:label ?label . OPTIONAL { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?eq . } } GROUP BY ?label ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Rain Duration Sensor.\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Rain_Duration_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.03 meet our smartness standards?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of VAV?\nentitybrick:VAV",
    "target_text": "SELECT ?definition WHERE { brick:VAV skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.05 hanging out?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags related to Smoke Alarm.\nentitybrick:Smoke_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Smoke_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is isLocationOf an asymmetric property?\nentitybrick:isLocationOf",
    "target_text": "ASK WHERE { brick:isLocationOf a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Steam System inherit?\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you point out the location for  PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature setpoint in the Atrium.\nentitybldg:Atrium \n brick:Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Setpoint ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Floor represent?\nentitybrick:Floor",
    "target_text": "SELECT ?definition WHERE { brick:Floor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between an Average Heating Demand Sensor and a Peak Heating Demand Sensor?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the high-level category of Discharge Air.\nentitybrick:Discharge_Air",
    "target_text": "SELECT ?broader WHERE { brick:Discharge_Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum CO2  recorded by Sensor 5.02 last week?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the mixed air temperature values for AHU 02 between 9 AM and 11 AM today?\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display all property-value pairs for Terminal Unit.\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?property ?value WHERE { brick:Terminal_Unit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units does Level support?\nentitybrick:Level",
    "target_text": "SELECT ?unit WHERE { brick:Level qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current return air temperature measurement for AHU 02?\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a full overview of the Occupied Air Temperature Setpoint with all its properties.\nentitybrick:Occupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label ?parent (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) ?quantity ?substance WHERE { brick:Occupied_Air_Temperature_Setpoint rdfs:label ?label . brick:Occupied_Air_Temperature_Setpoint rdfs:subClassOf ?parent . brick:Occupied_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . brick:Occupied_Air_Temperature_Setpoint brick:hasQuantity ?quantity . brick:Occupied_Air_Temperature_Setpoint brick:hasSubstance ?substance . } GROUP BY ?label ?parent ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient CO2  as measured by sensor 5.03?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature cooling setpoint in the Balcony.\nentitybldg:Balcony \n brick:Discharge_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Cooling_Setpoint ; brick:hasLocation bldg:Balcony ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for FCU?\nentitybrick:FCU",
    "target_text": "SELECT ?label WHERE { brick:FCU rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is narrower than Luminance?\nentitybrick:Luminance",
    "target_text": "SELECT ?narrower WHERE { brick:Luminance skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the High Static Pressure Cutout Setpoint Limit?\nentitybrick:High_Static_Pressure_Cutout_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:High_Static_Pressure_Cutout_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Formaldehyde Level sensor 5.03 installed?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Unoccupied Return Air Temperature Setpoint.\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Condenser Water Flow Sensor a subclass of Leaving Water Flow Sensor?\nentitybrick:Leaving_Condenser_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Flow_Sensor rdfs:subClassOf brick:Leaving_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What narrower concepts include Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?narrower WHERE { brick:Velocity_Pressure skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the description of Temperature Sensor.\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Unoccupied Supply Air Temperature Setpoint.\nentitybrick:Unoccupied_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Supply_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Air Quality Sensor a subclass of?\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Air_Quality_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.61 located?\nentitybldg:temp5.61",
    "target_text": "SELECT ?location WHERE { bldg:temp5.61 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for Mass in BrickSchema?\nentitybrick:Mass",
    "target_text": "SELECT ?property ?value WHERE { brick:Mass ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:seeAlso reference for Building Primary Function?\nentitybrick:buildingPrimaryFunction",
    "target_text": "SELECT ?reference WHERE { brick:buildingPrimaryFunction rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Temperature Heating Setpoint related to Discharge Air Temperature Heating Setpoint?\nentitybrick:Supply_Air_Temperature_Heating_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Heating_Setpoint owl:equivalentClass brick:Discharge_Air_Temperature_Heating_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for PM1 particulate matter Level Sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you show me the alternative name used by the Max Occupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the  PM10 particulate matter Level Sensor in 5.02 and state its sensor type.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Building is a subclass of another class.\nentitybrick:Building",
    "target_text": "ASK { brick:Building rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Supply Air Static Pressure Sensor.\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water usage sensor in the Conference Room.\nentitybldg:Conference_Room \n brick:Water_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Usage_Sensor ; brick:hasLocation bldg:Conference_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Max Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of System Status?\nentitybrick:System_Status",
    "target_text": "SELECT ?label WHERE { brick:System_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone heating mode command records for RM107A over the past week.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone supply air temperature value for RM107A.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many applicable units are there for Flow?\nentitybrick:Flow",
    "target_text": "SELECT (COUNT(?unit) AS ?unitCount) WHERE { brick:Flow qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is related to Voltage Imbalance?\nentitybrick:Voltage_Imbalance",
    "target_text": "SELECT ?related WHERE { brick:Voltage_Imbalance skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title ofFormaldehyde Level sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is   CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Unoccupied Cooling Temperature Deadband Setpoint.\nentitybrick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint rdfs:label ?label . brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of  Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply water temperature sensor in the Basement.\nentitybldg:Basement \n brick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Water_Temperature_Sensor ; brick:hasLocation bldg:Basement ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Max Occupied Cooling Supply Air Flow Setpoint Limit have?\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does  PM10 particulate matter Level Sensor 5.01 require recalibration according to the data?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does an Absolute Humidity Sensor work with air?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Reception have?\nentitybrick:Reception",
    "target_text": "SELECT ?tag WHERE { brick:Reception brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of Rated Maximum Current Output?\nentitybrick:ratedMaximumCurrentOutput",
    "target_text": "SELECT ?definition WHERE { brick:ratedMaximumCurrentOutput skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a detailed description of Fire Safety Equipment.\nentitybrick:Fire_Safety_Equipment",
    "target_text": "DESCRIBE brick:Fire_Safety_Equipment\nWHERE { brick:Fire_Safety_Equipment ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current status of the zone heating mode command in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for Air Humidity Sensor 5.04 over time?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with NO2 Sensor 5.02?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Overridden On Status?\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_On_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which keywords describe Temperature Sensor?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details for the Return Air Temperature Low Reset Setpoint?\nentitybrick:Return_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Cooling Tower Fan work?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Outside Air Wet Bulb Temperature Sensor inherit?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the relationship between CRAH and other cooling units.\nentitybrick:CRAH",
    "target_text": "SELECT ?equiv WHERE { brick:CRAH owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.29?\nentitybldg:co5.29",
    "target_text": "SELECT ?room WHERE { bldg:co5.29 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the count of narrower terms for Water.\nentitybrick:Water",
    "target_text": "SELECT (COUNT(?narrower) AS ?narrowerCount) WHERE { brick:Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating temperature deadband setpoint in the south east zone.\nentitybldg:south-east-zone \n brick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Trace Heat Sensor?\nentitybrick:Trace_Heat_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Trace_Heat_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the broader category of Condenser Water?\nentitybrick:Condenser_Water",
    "target_text": "SELECT ?broader WHERE { brick:Condenser_Water skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.45?\nentitybldg:airq5.45",
    "target_text": "SELECT ?room WHERE { bldg:airq5.45 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is Illuminance Sensor 5.03?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Breaker Panel a specialized type of power control system?\nentitybrick:Breaker_Panel",
    "target_text": "SELECT ?superclass WHERE { brick:Breaker_Panel rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the description of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Air_Quality_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Unoccupied Supply Air Flow Setpoint.\nentitybrick:Unoccupied_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all tags related to a chilled water meter?\nentitybrick:Chilled_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the cooling command values for AHU 02 yesterday?\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Differential Temperature Setpoint a subclass of?\nentitybrick:Differential_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Differential_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the PV Generation System?\nentitybrick:PV_Generation_System",
    "target_text": "SELECT ?label WHERE { brick:PV_Generation_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much  Illuminance Sensor is recorded by sensor 5.02 right now?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Sound Noise loudness Sensor  fluctuations recorded by Sensor 5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with an Auditorium.\nentitybrick:Auditorium",
    "target_text": "SELECT ?property ?value WHERE { brick:Auditorium ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average supply air pressure reading for AHU 01 in the past 10 minutes?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated quantity for the Mixed Air Humidity Setpoint?\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Mixed_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.02's data deviates from our smart building standards?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Cooling Supply Air Flow Setpoint Limit has the tag 'Flow'?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Generation Sensor?\nentitybrick:Generation_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Generation_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Derivative Time Parameter?\nentitybrick:Derivative_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Derivative_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Max Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of Air Humidity Sensor 5.05?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone supply air temperature status in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Occupied Heating Temperature Setpoint?\nentitybrick:Occupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Heat Exchanger.\nentitybrick:Heat_Exchanger",
    "target_text": "SELECT ?tag WHERE { brick:Heat_Exchanger brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class of Min Unoccupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Fire Safety Equipment a subclass of?\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Fire_Safety_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Elevator Space define in BrickSchema?\nentitybrick:Elevator_Space",
    "target_text": "SELECT ?property ?value WHERE { brick:Elevator_Space ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Network Video Recorder is a subclass of Video Surveillance Equipment.\nentitybrick:Network_Video_Recorder",
    "target_text": "ASK WHERE { brick:Network_Video_Recorder rdfs:subClassOf brick:Video_Surveillance_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone supply air temperature displayed in RM100 currently?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for PM10 particulate matter Level Sensor 5.04.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the type information for Pressure.\nentitybrick:Pressure",
    "target_text": "SELECT ?type WHERE { brick:Pressure a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Mixed Air Filter.\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?property ?value WHERE { brick:Mixed_Air_Filter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate an analytics report comparing Ethyl Alcohol /C2H5CH Sensor 5.04's performance with similar sensors in our facility.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the LPG Natural Gas Town MQ5 Gas Sensor  levels recorded by Sensor 5.03?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is Ethyl Alcohol /C2H5CH Sensor 5.02 found?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Ammonia Sensor classified?\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Ammonia_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for PM2.5 particulate matter Level Sensor 5.02.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does lastKnownValue represent?\nentitybrick:lastKnownValue",
    "target_text": "SELECT ?definition WHERE { brick:lastKnownValue skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.03's  PM10 particulate matter Level Sensor levels and building occupancy patterns.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Reactive Power Sensor.\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Reactive_Power_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Outside Air Temperature Setpoint?\nentitybrick:Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the rain duration sensor in the Library.\nentitybldg:Library \n brick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Rain_Duration_Sensor ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label along with the definition for the Unoccupied Cooling Mode Status?\nentitybrick:Unoccupied_Cooling_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Cooling_Mode_Status rdfs:label ?label . brick:Unoccupied_Cooling_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Rotational Speed described?\nentitybrick:Rotational_Speed",
    "target_text": "SELECT ?label WHERE { brick:Rotational_Speed rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Area.\nentitybrick:area",
    "target_text": "SELECT ?definition WHERE { brick:area skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Speed?\nentitybrick:Speed",
    "target_text": "SELECT ?label WHERE { brick:Speed rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Elevator Shaft a subclass of?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?parent WHERE { brick:Elevator_Shaft rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest Formaldehyde Level sensor reading from Formaldehyde Level sensor 5.02.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Cooling Supply Air Flow Setpoint Limit has the tag 'Max'?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Max . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Hot Water Differential Pressure Setpoint inherit from?\nentitybrick:Hot_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Hot_Water_Differential_Pressure_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is  Illuminance Sensor 5.03 associated with?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Lighting Equipment include Equipment?\nentitybrick:Lighting_Equipment",
    "target_text": "ASK WHERE { brick:Lighting_Equipment rdfs:subClassOf brick:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.33 located?\nentitybldg:mqnine5.33",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.33 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is  Air Temperature Sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the piezoelectric sensor in the Patio.\nentitybldg:Patio \n brick:Piezoelectric_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Piezoelectric_Sensor ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air temperature value from RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air dewpoint sensor in the Auditorium.\nentitybldg:Auditorium \n brick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Dewpoint_Sensor ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Room.\nentitybrick:Room",
    "target_text": "SELECT ?definition WHERE { brick:Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Absorption Chiller classified?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Average Heating Demand Sensor described using tags?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Average_Heating_Demand_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the First Aid Kit?\nentitybrick:First_Aid_Kit",
    "target_text": "SELECT ?label WHERE { brick:First_Aid_Kit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Condenser Water Valve fall?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Steam Valve have?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Unit Failure Alarm.\nentitybrick:Unit_Failure_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Unit_Failure_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the classification of an air flow sensor.\nentitybrick:Air_Flow_Sensor",
    "target_text": "SELECT ?category WHERE { brick:Air_Flow_Sensor rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does VAVRM115 include the tag 'Equipment'?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM115 brick:hasTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Fan?\nentitybrick:Fan",
    "target_text": "SELECT ?label WHERE { brick:Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the CO  sensor in 5.05 and state its sensor type.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . bldg:CO_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.17?\nentitybldg:mqthree5.17",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.17 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the setpoint in the Floor 6.\nentitybldg:Floor_6 \n brick:Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Setpoint ; brick:hasLocation bldg:Floor_6 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Start Stop Status.\nentitybrick:Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Enable Fixed Enthalpy Command?\nentitybrick:Enable_Fixed_Enthalpy_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Fixed_Enthalpy_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Pre Filter Status?\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?definition WHERE { brick:Pre_Filter_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does PM1 particulate matter Level Sensor 5.04 have?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Max Occupied Cooling Supply Air Flow Setpoint Limit means.\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for  Oxygen,O2 Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Effective Air Temperature Setpoint?\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Effective_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Bypass Water Flow Sensor belong to?\nentitybrick:Bypass_Water_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Water_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating discharge air flow setpoint in the Break Room.\nentitybldg:Break_Room \n brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.02 show any unusual temperature spikes today?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  Oxygen,O2 Sensor 5.02 and its impact on indoor sustainability.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much humidity is recorded by sensor 5.03 right now?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Cooling Enable Command used?\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What value is indicated by the zone percent air flow sensor in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve full details of the Differential Entering Leaving Water Temperature Sensor.\nentitybrick:Differential_Entering_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?label ?definition ?tag ?quantity ?substance WHERE { brick:Differential_Entering_Leaving_Water_Temperature_Sensor rdfs:label ?label . brick:Differential_Entering_Leaving_Water_Temperature_Sensor skos:definition ?definition . OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasSubstance ?substance . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . brick:Acceleration_Time_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the name (rdfs:label) of the Discharge Air Temperature Deadband Setpoint?\nentitybrick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Air Humidity Sensor 5.03 over the last six months?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the CO  data from Sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the substance for Water Level Sensor?\nentitybrick:Water_Level_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Water_Level_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Elevator Shaft.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?parent WHERE { brick:Elevator_Shaft rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current reading of the zone supply air temperature sensor in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  Air temperature Sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Battery Voltage Sensor function differently from other voltage measurement devices?\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Voltage_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label, definition, and equivalent class for the Average Supply Air Flow Sensor?\nentitybrick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label ?definition ?eq WHERE { brick:Average_Supply_Air_Flow_Sensor rdfs:label ?label . brick:Average_Supply_Air_Flow_Sensor skos:definition ?definition . brick:Average_Supply_Air_Flow_Sensor owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.02 based on its  PM10 particulate matter Level Sensor data logs?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas stats from Sensor 5.03 and tell me if it's on point with our green goals.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category is Wind Direction a part of?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?broader WHERE { brick:Wind_Direction skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for  Air temperature Sensor 5.05.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Supply Air Flow Sensor?\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Flow_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Waste Storage?\nentitybrick:Waste_Storage",
    "target_text": "SELECT ?label ?definition WHERE { brick:Waste_Storage rdfs:label ?label . brick:Waste_Storage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where  Air Quality sensor 5.04 is placed.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective supply air temperature setpoint in the Craft Room.\nentitybldg:Craft_Room \n brick:Effective_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Supply_Air_Temperature_Setpoint ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current directive for the zone air damper in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the co2 level sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:CO2_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:CO2_Level_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for PM2.5 particulate matter Level Sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Fan?\nentitybrick:Fan",
    "target_text": "SELECT ?tag WHERE { brick:Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Outside Air CO2 Sensor.\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_CO2_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the broader concept of Differential CO Concentration.\nentitybrick:Differential_CO_Concentration",
    "target_text": "SELECT ?broader WHERE { brick:Differential_CO_Concentration skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Emergency Phone?\nentitybrick:Emergency_Phone",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Phone rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night LPG Natural Gas Town MQ5 Gas Sensor  variations as captured by Sensor 5.05?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide full details for the Heating Supply Air Temperature Proportional Band Parameter?\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) ?eq WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . OPTIONAL { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter owl:equivalentClass ?eq . } } GROUP BY ?label ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Hot Water Meter?\nentitybrick:Hot_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water differential pressure load shed status in the Quiet Room.\nentitybldg:Quiet_Room \n brick:Hot_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:Quiet_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.05's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas levels and building occupancy patterns.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02 based on its most recent data.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water return temperature sensor in the south east zone.\nentitybldg:south-east-zone \n brick:Chilled_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Return_Temperature_Sensor ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the dimension vector associated with Position.\nentitybrick:Position",
    "target_text": "SELECT ?vector WHERE { brick:Position qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is measured by Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?tag WHERE { brick:Steam_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature deadband setpoint in the central hall.\nentitybldg:central-hall \n brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:central-hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which associated tags are used for a Change Filter Alarm?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Change_Filter_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Gain Parameter?\nentitybrick:Gain_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Gain_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Radiance?\nentitybrick:Radiance",
    "target_text": "SELECT ?label WHERE { brick:Radiance rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Air Lockout Temperature Setpoint?\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does the Hot Water Differential Pressure Deadband Setpoint belong to?\nentitybrick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Water_Pump ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the absolute humidity sensor in the Meeting Room.\nentitybldg:Meeting_Room \n brick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Absolute_Humidity_Sensor ; brick:hasLocation bldg:Meeting_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Condenser Water Flow Sensor.\nentitybrick:Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Condenser_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for CO Sensor?\nentitybrick:CO_Sensor",
    "target_text": "SELECT ?label WHERE { brick:CO_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Displacement Flow Air Diffuser?\nentitybrick:Displacement_Flow_Air_Diffuser",
    "target_text": "SELECT ?superclass WHERE { brick:Displacement_Flow_Air_Diffuser rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level class of Generator Room?\nentitybrick:Generator_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Generator_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the Sound Noise loudness Sensor  5.03 and show its sensor name.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature high reset setpoint in the Sauna.\nentitybldg:Sauna \n brick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Sauna ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me what class Discharge Air Temperature Sensor is equivalent to?\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that PID Parameter extends.\nentitybrick:PID_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:PID_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much Formaldehyde Level sensor is recorded by sensor 5.01 right now?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.05 due for a recalibration based on its Alcohol Vapor MQ3 Gas Sensor  output?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Return Air CO Sensor.\nentitybrick:Return_Air_CO_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_CO_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Temperature Parameter means.\nentitybrick:Temperature_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 is placed.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Chilled Water Temperature Setpoint?\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which VAV zones receive air from AHU01?\nentitybrick:feeds",
    "target_text": "SELECT ?vav WHERE { bldg:AHU01 brick:feeds ?vav . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.30located?\nentitybldg:voc5.30",
    "target_text": "SELECT ?location WHERE { bldg:voc5.30 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the substance linked to methane level sensors.\nentitybrick:Methane_Level_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Methane_Level_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air flow setpoint in the Spa.\nentitybldg:Spa \n brick:Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Spa ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you count the number of sensors in AHU01?\nentitybrick:hasPoint",
    "target_text": "SELECT (COUNT(?point) AS ?sensor_count) WHERE { bldg:AHU01 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all information associated with a Dimmer.\nentitybrick:Dimmer",
    "target_text": "SELECT ?property ?value WHERE { brick:Dimmer ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the PM10 Level Sensor?\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM10_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Valve Status indicate?\nentitybrick:Valve_Status",
    "target_text": "SELECT ?definition WHERE { brick:Valve_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Electric Baseboard Radiator?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Electric_Baseboard_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the rdfs:subClassOf relationships of PM10 Sensor.\nentitybrick:PM10_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PM10_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Entering Hot Water Flow Sensor?\nentitybrick:Entering_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Hot_Water_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What equipment is providing air to RM107A?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM107A brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the applications of a damper in air distribution?\nentitybrick:Damper",
    "target_text": "SELECT ?definition WHERE { brick:Damper skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the  PM10 particulate matter Level Sensor 5.02 and its location.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector of Wind Direction?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?vector WHERE { brick:Wind_Direction qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve the definition for Liquid CO2.\nentitybrick:Liquid_CO2",
    "target_text": "SELECT ?definition WHERE { brick:Liquid_CO2 skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Rain Level Sensor a subclass of?\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Rain_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Reactive Power Sensor a subclass of?\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Reactive_Power_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Smoke Detector.\nentitybrick:Smoke_Detector",
    "target_text": "SELECT ?label WHERE { brick:Smoke_Detector rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Min Occupied Heating Supply Air Flow Setpoint Limit related to Min Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Static Pressure Sensor have?\nentitybrick:Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Hot Water Differential Pressure Sensor has in BrickSchema.\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Hot_Water_Differential_Pressure_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the NO2 Sensor 5.03 set up?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current zone air control temperature setpoint value for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the relationship between the Heat Wheel and the Heat Exchanger?\nentitybrick:Heat_Wheel",
    "target_text": "SELECT ?relation WHERE { brick:Heat_Wheel rdfs:subClassOf brick:Heat_Exchanger . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality Level is set up in 5.03 and what kind is it?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Max Occupied Heating Supply Air Flow Setpoint Limit is a subclass of Max Heating Supply Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor from room 5.04 and specify its type.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.03 for the past week and show me a summary.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the load shed differential pressure setpoint in the Reception.\nentitybldg:Reception \n brick:Load_Shed_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Load_Shed_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air flow setpoint in the Restroom.\nentitybldg:Restroom \n brick:Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone supply air temperature sensor in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Overridden On Status?\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_On_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Zone a subclass of Location?\nentitybrick:Zone",
    "target_text": "ASK WHERE { brick:Zone rdfs:subClassOf brick:Location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if VAVRM115 includes the tag 'Equipment'.\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM115 brick:hasTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display a full RDF description of Fire Safety Equipment.\nentitybrick:Fire_Safety_Equipment",
    "target_text": "DESCRIBE brick:Fire_Safety_Equipment\nWHERE { brick:Fire_Safety_Equipment ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the class that serves a similar purpose as the Discharge Air Dewpoint Sensor.\nentitybrick:Discharge_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Dewpoint_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What points does VAVRM110 control or measure?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM110 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Outside Face Surface Temperature Sensor.\nentitybrick:Outside_Face_Surface_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Face_Surface_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Core Temperature Setpoint?\nentitybrick:Core_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Core_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.03 found?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the dimension vector for PhasorAngle.\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?dimensionVector WHERE { brick:Phasor_Angle qudt:hasDimensionVector ?dimensionVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Building Chilled Water Meter important?\nentitybrick:Building_Chilled_Water_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Building_Chilled_Water_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Cooling Capacity?\nentitybrick:coolingCapacity",
    "target_text": "SELECT ?label WHERE { brick:coolingCapacity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM10 particulate matter Level Sensor 5.05 and where is it located?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the types for the Min Fresh Air Setpoint Limit.\nentitybrick:Min_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?type WHERE { brick:Min_Fresh_Air_Setpoint_Limit a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  TVOC  sensor 5.04 and its installation location.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader category does Position belong to?\nentitybrick:Position",
    "target_text": "SELECT ?broader WHERE { brick:Position skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.19 located?\nentitybldg:oxy5.19",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.19 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is assigned to the Frost Sensor?\nentitybrick:Frost_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Frost_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Enthalpy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with an air temperature step parameter?\nentitybrick:Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Air_Temperature_Step_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Temperature Step Parameter?\nentitybrick:Temperature_Step_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Step_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the Entering Chilled Water Flow Setpoint?\nentitybrick:Entering_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Chilled_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Discharge Air Temperature Low Reset Setpoint labeled in the ontology?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of fluid is regulated by the Leaving Hot Water Flow Setpoint?\nentitybrick:Leaving_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Hot_Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the title of Temperature Setpoint?\nentitybrick:Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Radioactivity Concentration Sensor is used for.\nentitybrick:Radioactivity_Concentration_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Radioactivity_Concentration_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Operational Stage Count?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?label WHERE { brick:operationalStageCount rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether 'unit:PSI' is used to measure Pressure.\nentitybrick:Pressure",
    "target_text": "ASK { brick:Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Fume Hood Air Flow Sensor in the ontology?\nentitybrick:Fume_Hood_Air_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Fume_Hood_Air_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest zone air damper command event recorded for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements from Air Quality Level 5.01 over the past 24 hours.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the broader category of Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?broader WHERE { brick:Velocity_Pressure skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Static Pressure Integral Time Parameter related to Discharge Air Static Pressure Integral Time Parameter?\nentitybrick:Supply_Air_Static_Pressure_Integral_Time_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Integral_Time_Parameter owl:equivalentClass brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is NO2 Sensor 5.02 showing any signs of potential failure based on recent data?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to the Effective Air Temperature Heating Setpoint?\nentitybrick:Effective_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Effective_Air_Temperature_Heating_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Elevator Space in BrickSchema?\nentitybrick:Elevator_Space",
    "target_text": "SELECT ?property ?value WHERE { brick:Elevator_Space ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Discharge Air Static Pressure Proportional Band Parameter have another name in BrickSchema?\nentitybrick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the quantity for Flow Sensor.\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the inverse property for 'feeds'.\nentitybrick:feeds",
    "target_text": "SELECT ?inverse WHERE { brick:feeds owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Exhaust Air Flow Sensor.\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Exhaust_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum  PM2.5 particulate matter Level Sensor in sensor 5.03 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.46 located?\nentitybldg:temp5.46",
    "target_text": "SELECT ?location WHERE { bldg:temp5.46 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.01's  Illuminance Sensor readings?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Leaving Domestic Hot Water Temperature Setpoint.\nentitybrick:Leaving_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Induction Unit?\nentitybrick:Induction_Unit",
    "target_text": "SELECT ?tag WHERE { brick:Induction_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Occupied Supply Air Flow Setpoint?\nentitybrick:Occupied_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Hot Water Baseboard Radiator work?\nentitybrick:Hot_Water_Baseboard_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Baseboard_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone heating mode command for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.05's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the items related to Phasor?\nentitybrick:Phasor",
    "target_text": "SELECT ?related WHERE { brick:Phasor skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Min Supply Air Temperature Setpoint Limit.\nentitybrick:Min_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Min_Supply_Air_Temperature_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What related concepts are linked to PhasorAngle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?relatedConcept WHERE { brick:Phasor_Angle skos:related ?relatedConcept . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Supply Air Integral Gain Parameter.\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Integral_Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering domestic hot water temperature setpoint in the Game Room.\nentitybldg:Game_Room \n brick:Entering_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Domestic_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Sensor 5.01 indicate any potential issues with  quality in the building?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Return Air Humidity Sensor?\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Humidity_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Vent Operating Mode Status?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Vent_Operating_Mode_Status rdfs:label ?label . brick:Vent_Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for PM10 particulate matter Level Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Damper Position Setpoint?\nentitybrick:Damper_Position_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Damper_Position_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the defining characteristics of a CO Differential Sensor?\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO_Differential_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Entering Chilled Water Flow Sensor?\nentitybrick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Chilled_Water_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name referencing Gasoline.\nentitybrick:Gasoline",
    "target_text": "SELECT ?label WHERE { brick:Gasoline rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Cooling Temperature Setpoint.\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Dehumidification Start Stop Status?\nentitybrick:Dehumidification_Start_Stop_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Dehumidification_Start_Stop_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which parameters belong to the Parameter type?\nentitybrick:Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter rdfs:subClassOf brick:Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Max Occupied Heating Discharge Air Flow Setpoint Limit have an owl:equivalentClass in BrickSchema?\nentitybrick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the current configuration of the zone air control temperature setpoint in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.01 to compute an overall  PM10 particulate matter Level Sensor index.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Retail Room?\nentitybrick:Retail_Room",
    "target_text": "SELECT ?parent WHERE { brick:Retail_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the quantity associated with Pressure Sensor.\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Min Air Flow Setpoint Limit?\nentitybrick:Min_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest NO2 measurement from NO2 Sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the LPG Natural Gas Town MQ5 Gas Sensor  stats from Sensor 5.02 and tell me if it's on point with our green goals.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Flow' one of the tags for Cooling Supply Air Flow Setpoint?\nentitybrick:Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the  PM1 particulate matter Level Sensor 5.01 and where is it located?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is assigned to the Exhaust Fan?\nentitybrick:Exhaust_Fan",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the badge or label for Zone Air?\nentitybrick:Zone_Air",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the replacement sensor for the Chilled Water Supply Temperature Sensor?\nentitybrick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Chilled_Water_Supply_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.03 following in terms of Sound Noise loudness Sensor  for the past hour?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Zone Air Dewpoint Sensor?\nentitybrick:Zone_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Dewpoint_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent  data available from Ethyl Alcohol /C2H5CH  Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for NO2 Sensor 5.01?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick NO2 Sensor 5.03 in the building?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.04 located?\nentitybldg:sound5.04",
    "target_text": "SELECT ?location WHERE { bldg:sound5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Entering Water Flow Sensor a type of Water Flow Sensor?\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Entering_Water_Flow_Sensor rdfs:subClassOf brick:Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Pre Filter Status?\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?tag WHERE { brick:Pre_Filter_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Return Air Temperature High Reset Setpoint have?\nentitybrick:Return_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_Temperature_High_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM1 particulate matter Level Sensor 5.03 chillin' in the building?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for   TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Hail is.\nentitybrick:Hail",
    "target_text": "SELECT ?definition WHERE { brick:Hail skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature deadband setpoint in the Shop.\nentitybldg:Shop \n brick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Chilled Water System?\nentitybrick:Chilled_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Min Chilled Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?p ?o WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for Enthalpy.\nentitybrick:Enthalpy",
    "target_text": "SELECT ?unit WHERE { brick:Enthalpy qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 is located.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Unoccupied Air Temperature Setpoint includes the tag 'Unoccupied'.\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Unoccupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.04 following in terms of temperature for the past hour?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the  PM2.5 particulate matter Level Sensor 5.03 and where it is installed.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.01 over the past week.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the quantity and substance of an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Filter.\nentitybrick:Filter",
    "target_text": "SELECT ?label WHERE { brick:Filter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Outside Air Grains Sensor.\nentitybrick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Grains_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain the meaning of Aggregate?\nentitybrick:aggregate",
    "target_text": "SELECT ?definition WHERE { brick:aggregate skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  Ethyl Alcohol /C2H5CH sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.03 compare to our baseline standards?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all instances of Hot Water Static Pressure Setpoint in the system.\nentitybrick:Hot_Water_Static_Pressure_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Hot_Water_Static_Pressure_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.10?\nentitybldg:notwo5.10",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.10 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does   TVOC  Sensor 5.02 represent?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Enable Differential Enthalpy Command?\nentitybrick:Enable_Differential_Enthalpy_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Differential_Enthalpy_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_System rdfs:label ?label . brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Leaving Domestic Hot Water Temperature Setpoint set?\nentitybrick:Leaving_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of Energy Storage from BrickSchema.\nentitybrick:Energy_Storage",
    "target_text": "SELECT ?definition WHERE { brick:Energy_Storage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_CO2_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Domestic Hot Water Valve?\nentitybrick:Domestic_Hot_Water_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Domestic_Hot_Water_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor doesSound Noise loudness Sensor  5.05 represent?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Unit Failure Alarm?\nentitybrick:Unit_Failure_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Unit_Failure_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Effective Zone Air Temperature Setpoint?\nentitybrick:Effective_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Zone_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the NO2 Level Sensor.\nentitybrick:NO2_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:NO2_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Space Heater refer to?\nentitybrick:Space_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Space_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is CO2  Sensor 5.04 located in?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of System?\nentitybrick:System",
    "target_text": "SELECT ?label WHERE { brick:System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the CO  levels recorded by Sensor 5.05?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags are linked to the Humidification Start Stop Status?\nentitybrick:Humidification_Start_Stop_Status",
    "target_text": "SELECT ?tag WHERE { brick:Humidification_Start_Stop_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.02 for the past week and show me a summary.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What conditions must a CO2 Differential Sensor follow?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:CO2_Differential_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Water System labeled in the ontology?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label assigned to Min Discharge Air Temperature Setpoint Limit?\nentitybrick:Min_Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Discharge_Air_Temperature_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of LPG Natural Gas Town MQ5 Gas Sensor  readings from Sensor 5.03 for sustainability reporting.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Refrigerant_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Leaving Water Differential Pressure Deadband Setpoint belong to a broader category of HVAC control settings?\nentitybrick:Leaving_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does Bypass Air belong to?\nentitybrick:Bypass_Air",
    "target_text": "SELECT ?broader WHERE { brick:Bypass_Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.04 and tell me its class.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What zone air damper command is linked to damperVAVRM112?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:damperVAVRM112 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Ventilation Air System.\nentitybrick:Ventilation_Air_System",
    "target_text": "SELECT ?label ?definition WHERE { brick:Ventilation_Air_System rdfs:label ?label . brick:Ventilation_Air_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings ofSound Noise loudness Sensor  5.02 compared to its normal range?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all zone supply air temperature readings for RM107A this morning?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average outside air temperature reading from AHU 01 for the last 24 hours.\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of NO2 readings from Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Sound Noise loudness Sensor  5.03.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Dimmer?\nentitybrick:Dimmer",
    "target_text": "SELECT ?tag WHERE { brick:Dimmer brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Report the current measurement of zone supply air temperature in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What narrower categories does Phasor Angle belong to?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?narrower WHERE { brick:Phasor_Angle skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Acceleration Time Setpoint.\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Acceleration_Time_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Preheat Command?\nentitybrick:Preheat_Command",
    "target_text": "SELECT ?label WHERE { brick:Preheat_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Discharge Air Plenum?\nentitybrick:Discharge_Air_Plenum",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Plenum rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Transformer.\nentitybrick:Transformer",
    "target_text": "SELECT ?definition WHERE { brick:Transformer skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone supply air flow for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of the Disable Fixed Enthalpy Command?\nentitybrick:Disable_Fixed_Enthalpy_Command",
    "target_text": "SELECT ?definition WHERE { brick:Disable_Fixed_Enthalpy_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for Oxygen,O2 at 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Alcohol Vapor MQ3 Gas Sensor  5.01.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the classification and metadata tags for a Building Air Humidity Setpoint.\nentitybrick:Building_Air_Humidity_Setpoint",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Air_Humidity_Setpoint rdfs:subClassOf ?superclass . brick:Building_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition of Discharge Air Temperature Sensor.\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_CO2_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone supply air temperature measurement in RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Entering Hot Water Flow Sensor?\nentitybrick:Entering_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Hot_Water_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much Alcohol Vapor MQ3 Gas Sensor  is recorded by sensor 5.04 right now?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the Garden.\nentitybldg:Garden \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Radiant Panel Temperature Setpoint?\nentitybrick:Radiant_Panel_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Radiant_Panel_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain the function of chilled water?\nentitybrick:Chilled_Water",
    "target_text": "SELECT ?usage WHERE { brick:Chilled_Water skos:definition ?usage . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Temperature readings from Sensor 5.01 help in predicting potential failures or recalibration needs?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water flow setpoint in the Floor 5.\nentitybldg:Floor_5 \n brick:Leaving_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Flow_Setpoint ; brick:hasLocation bldg:Floor_5 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Return Air Enthalpy Sensor?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Enthalpy_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of humidity readings from Sensor 5.05 for sustainability reporting.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for PM10 particulate matter Level Sensor 5.04?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve a full RDF overview of Discharge Air Temperature Sensor.\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "DESCRIBE brick:Discharge_Air_Temperature_Sensor\nWHERE { brick:Discharge_Air_Temperature_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Thermal Power Meter.\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Thermal_Power_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes of the Lockout Temperature Differential Parameter.\nentitybrick:Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Lockout_Temperature_Differential_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the substance measured by Leaving Chilled Water Flow setpoint?\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak cooling valve output readings for AHU 01 on the previous day?\nentitybldg:bldg1.AHU.AHU01.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for MAU?\nentitybrick:MAU",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:MAU ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the types for the Natural Gas Seismic Shutoff Valve.\nentitybrick:Natural_Gas_Seismic_Shutoff_Valve",
    "target_text": "SELECT ?type WHERE { brick:Natural_Gas_Seismic_Shutoff_Valve a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Chilled Water Flow Sensor?\nentitybrick:Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Supply Air Humidity Setpoint have?\nentitybrick:Supply_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Dual Duct Air Handling Unit?\nentitybrick:Dual_Duct_Air_Handling_Unit",
    "target_text": "SELECT ?label WHERE { brick:Dual_Duct_Air_Handling_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Chilled Water Temperature Sensor measures.\nentitybrick:Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Passive Chilled Beam.\nentitybrick:Passive_Chilled_Beam",
    "target_text": "SELECT ?parent WHERE { brick:Passive_Chilled_Beam rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Min Speed Setpoint Limit?\nentitybrick:Min_Speed_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Speed_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?broader WHERE { brick:Velocity_Pressure skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all attributes of the Entering Water Temperature Alarm?\nentitybrick:Entering_Water_Temperature_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Water_Temperature_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone air temperature readings were recorded for RM107B today?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the CO2  measurements from Sensor 5.01 day-to-day?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain Measured Module Conversion Efficiency?\nentitybrick:measuredModuleConversionEfficiency",
    "target_text": "SELECT ?definition WHERE { brick:measuredModuleConversionEfficiency skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Valve Position Sensor.\nentitybrick:Valve_Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Valve_Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the First Aid Kit a subclass of?\nentitybrick:First_Aid_Kit",
    "target_text": "SELECT ?superclass WHERE { brick:First_Aid_Kit rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for  Oxygen,O2 Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by Air Quality Level 5.05's readings over the past 48 hours.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Humidity Setpoint the same as Discharge Air Humidity Setpoint?\nentitybrick:Supply_Air_Humidity_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Humidity_Setpoint owl:equivalentClass brick:Discharge_Air_Humidity_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Leaving Water Temperature Proportional Band Parameter belong to a broader category of HVAC control settings?\nentitybrick:Leaving_Water_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Temperature_Proportional_Band_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags describe the Alarm Sensitivity Parameter?\nentitybrick:Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Alarm_Sensitivity_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if Terminal Unit has the tag 'Terminal'.\nentitybrick:Terminal_Unit",
    "target_text": "ASK { brick:Terminal_Unit brick:hasAssociatedTag tag:Terminal . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied discharge air temperature setpoint in the Elevator.\nentitybldg:Elevator \n brick:Unoccupied_Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Discharge_Air_Temperature_Setpoint ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the rdfs:isDefinedBy reference for Phasor Magnitude?\nentitybrick:Phasor_Magnitude",
    "target_text": "SELECT ?definedBy WHERE { brick:Phasor_Magnitude rdfs:isDefinedBy ?definedBy . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Differential Temperature Setpoint measures.\nentitybrick:Differential_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.11 located?\nentitybldg:airq5.11",
    "target_text": "SELECT ?location WHERE { bldg:airq5.11 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the complete metadata set for an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Acceleration_Time_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Reheat Valve.\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Reheat_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air grains sensor in the Dining Room.\nentitybldg:Dining_Room \n brick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Grains_Sensor ; brick:hasLocation bldg:Dining_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Combustible Gas Smoke MQ2 Sensor  5.02 and its location.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air static pressure deadband setpoint in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Supply_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Max Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the   Ethyl Alcohol /C2H5CH sensor 5.01 along with its location in the building.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Command' attached to Command?\nentitybrick:Command",
    "target_text": "ASK { brick:Command brick:hasAssociatedTag tag:Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags associated with Hazardous Materials Storage?\nentitybrick:Hazardous_Materials_Storage",
    "target_text": "SELECT ?tag WHERE { brick:Hazardous_Materials_Storage brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Exhaust Air Flow Setpoint has in BrickSchema.\nentitybrick:Exhaust_Air_Flow_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Exhaust_Air_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Video Intercom a subclass of?\nentitybrick:Video_Intercom",
    "target_text": "SELECT ?parent WHERE { brick:Video_Intercom rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.03 located?\nentitybldg:mqfive5.03",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Zone CO2 Level Sensor?\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_CO2_Level_Sensor rdfs:label ?label . brick:Zone_CO2_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings of Illuminance Sensor 5.01 compared to its normal range?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?label WHERE { brick:Control_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Return Water Flow Sensor?\nentitybrick:Return_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Return_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Steam Valve.\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the total count of complex power measurement units?\nentitybrick:Complex_Power",
    "target_text": "SELECT (COUNT(?unit) AS ?unitcount) WHERE { brick:Complex_Power qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of  Oxygen,O2 Sensor 5.05 based on recent readings.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if hasLocation is a subProperty of Relationship.\nentitybrick:hasLocation",
    "target_text": "ASK WHERE { brick:hasLocation rdfs:subPropertyOf brick:Relationship . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Enthalpy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Condenser Water System?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Demand Setpoint a subclass of?\nentitybrick:Demand_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Demand_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data from Sensor 5.05.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What points does AHU02 have?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest zone heating mode command value for RM107B from the last 2 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Electrical System inherit from?\nentitybrick:Electrical_System",
    "target_text": "SELECT ?superclass WHERE { brick:Electrical_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective heating zone air temperature setpoint in the Hallway.\nentitybldg:Hallway \n brick:Effective_Heating_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Heating_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Sound Noise loudness Sensor  5.04?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating supply air flow setpoint in the Control Room.\nentitybldg:Control_Room \n brick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class equivalent to Max Heating Supply Air Flow Setpoint Limit.\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Chilled Water Valve a subclass of another valve type?\nentitybrick:Chilled_Water_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the  Illuminance Sensor reading from sensor 5.03 right now?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Particulate Matter Sensor.\nentitybrick:Particulate_Matter_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Particulate_Matter_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Heating Supply Air Flow Setpoint Limit has the tag 'Discharge'?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for    TVOC  Sensor 5.01.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Building Meter includes the tag 'Meter'.\nentitybrick:Building_Meter",
    "target_text": "ASK WHERE { brick:Building_Meter brick:hasAssociatedTag tag:Meter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Air Temperature High Reset Setpoint.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.03's  PM10 particulate matter Level Sensor data by hour, day, and week.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Heating Command.\nentitybrick:Heating_Command",
    "target_text": "SELECT ?label WHERE { brick:Heating_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Leaving Chilled Water?\nentitybrick:Leaving_Chilled_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What details are available about an Ablutions Room?\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Ablutions_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Occupied Cooling Temperature Deadband Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for  Air Humidity Sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on Ethyl Alcohol /C2H5CH Sensor 5.04's performance compared to industry benchmarks.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the present zone air control temperature setpoint for RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term humidity trends from Sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Cooling Temperature Setpoint?\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air temperature sensor in the Library.\nentitybldg:Library \n brick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Temperature_Sensor ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of  Illuminance Sensor fluctuations recorded by Sensor 5.04?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.12 located?\nentitybldg:mqnine5.12",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.12 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Relative Humidity Sensor.\nentitybrick:Relative_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Relative_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air velocity pressure sensor in the Courtyard.\nentitybldg:Courtyard \n brick:Supply_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:Courtyard ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the Speed units that have 'DEG' in their name.\nentitybrick:Speed",
    "target_text": "SELECT ?unit\nWHERE {  brick:Speed qudt:applicableUnit ?unit .  FILTER(regex(str(?unit), \"DEG\", \"i\"))}"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Max Discharge Air Temperature Setpoint Limit.\nentitybrick:Max_Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Discharge_Air_Temperature_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all data and equivalent classes related to the Discharge Air Flow Low Reset Setpoint?\nentitybrick:Discharge_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Flow_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Temperature Coefficient defined?\nentitybrick:temperatureCoefficientofPmax",
    "target_text": "SELECT ?definition WHERE { brick:temperatureCoefficientofPmax skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent  PM2.5 particulate matter Level Sensor measurement from sensor 5.02, please.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Occupied Cooling Temperature Deadband Setpoint.\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve tags containing 'Photovoltaic' for Photovoltaic Current Output Sensor.\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Photovoltaic_Current_Output_Sensor brick:hasAssociatedTag ?tag . FILTER(CONTAINS(STR(?tag), \"Photovoltaic\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags that are associated with a damper command.\nentitybrick:Damper_Command",
    "target_text": "SELECT ?tag WHERE { brick:Damper_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with an Access Reader?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?tag WHERE { brick:Access_Reader brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Motor On Off Status.\nentitybrick:Motor_On_Off_Status",
    "target_text": "SELECT ?rule WHERE { brick:Motor_On_Off_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of a Change Filter Alarm.\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . brick:Change_Filter_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Liquid Detection Alarm indicate?\nentitybrick:Liquid_Detection_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Liquid_Detection_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data for Sensor 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Leaving Hot Water Temperature Setpoint.\nentitybrick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Temperature Deadband Setpoint a type of Deadband Setpoint?\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "ASK WHERE { brick:Temperature_Deadband_Setpoint rdfs:subClassOf brick:Deadband_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Air Diffuser.\nentitybrick:Air_Diffuser",
    "target_text": "SELECT ?definition WHERE { brick:Air_Diffuser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Condenser Water Valve?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?rule WHERE { brick:Condenser_Water_Valve sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Radiation Hot Water System a subclass of?\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?parent WHERE { brick:Radiation_Hot_Water_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Water Meter?\nentitybrick:Water_Meter",
    "target_text": "SELECT ?label WHERE { brick:Water_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Touchpanel.\nentitybrick:Touchpanel",
    "target_text": "SELECT ?label WHERE { brick:Touchpanel rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned toFormaldehyde Level sensor 5.05?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe what an Electric Boiler does?\nentitybrick:Electric_Boiler",
    "target_text": "SELECT ?definition WHERE { brick:Electric_Boiler skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the classification and metadata tags for a Building Gas Meter.\nentitybrick:Building_Gas_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Gas_Meter rdfs:subClassOf ?superclass . brick:Building_Gas_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Temporary Occupancy Status.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?definition WHERE { brick:Temporary_Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label describes the Gas Sensor?\nentitybrick:Gas_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Gas_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Air Flow Loss Alarm fall?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Air_Flow_Loss_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Curtailment Override Command?\nentitybrick:Curtailment_Override_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Curtailment_Override_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Air_Quality_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of Air Quality Level 5.01 based on recent readings.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative humidity change reported by  Air Humidity Sensor 5.02 over the past week?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Temperature Differential Reset Setpoint?\nentitybrick:Temperature_Differential_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Differential_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to the Discharge Fan?\nentitybrick:Discharge_Fan",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Fan owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of is associated with?\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?definition WHERE { brick:isAssociatedWith skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Leaving Water Temperature Setpoint represent?\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Mixed Air Humidity Sensor have?\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Mixed_Air_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.28located?\nentitybldg:voc5.28",
    "target_text": "SELECT ?location WHERE { bldg:voc5.28 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Chilled Water System?\nentitybrick:Chilled_Water_System",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data from Sensor 5.03.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Leaving Condenser Water Flow Sensor.\nentitybrick:Leaving_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Condenser_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the IDF?\nentitybrick:IDF",
    "target_text": "SELECT ?tag WHERE { brick:IDF brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is PSI a valid unit for static pressure readings?\nentitybrick:Static_Pressure",
    "target_text": "ASK WHERE { brick:Static_Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the Entering Chilled Water Flow Sensor?\nentitybrick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Chilled_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if PM2.5 particulate matter Level Sensor 5.05 shows abnormal readings today.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of an Alarm Delay Parameter?\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Alarm_Delay_Parameter rdfs:subClassOf ?superclass . brick:Alarm_Delay_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Cooling Tower?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for   Carbon monoxide, CO  Sensor 5.01.\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Cooling Valve'.\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the Combustible Gas Smoke MQ2 Sensor  in 5.05, including its category.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Visitor Lobby is used for.\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?definition WHERE { brick:Visitor_Lobby skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the On Command?\nentitybrick:On_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:On_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.02 measuring NO2 at the moment?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Leaving Water Differential Pressure Integral Time Parameter regulate?\nentitybrick:Leaving_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Differential_Pressure_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current sensor output of the zone reheat valve command in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which static pressure units measure the tiniest pressure levels?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), \"Micro\") || CONTAINS(STR(?unit), \"Pico\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What BrickSchema information is stored for the Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class equivalent to Air Handler Unit.\nentitybrick:Air_Handler_Unit",
    "target_text": "SELECT ?equiv WHERE { brick:Air_Handler_Unit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.58 located?\nentitybldg:light5.58",
    "target_text": "SELECT ?location WHERE { bldg:light5.58 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.05 meet our smartness standards?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the different types of sensors in AHU02.\nentitybrick:hasPoint",
    "target_text": "SELECT ?sensor WHERE { bldg:AHU02 brick:hasPoint ?sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the superclass of Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Enable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Temperature Deadband Setpoint.\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: When was Supply Water Flow Setpoint marked as deprecated?\nentitybrick:Supply_Water_Flow_Setpoint",
    "target_text": "SELECT ?version WHERE { brick:Supply_Water_Flow_Setpoint brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if VAVRM103 has the tag 'HVAC'?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM103 brick:hasTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess how environmental changes, such as HVAC adjustments, impact the CO  readings of Sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is is associated with defined as an object property?\nentitybrick:isAssociatedWith",
    "target_text": "ASK WHERE { brick:isAssociatedWith a owl:ObjectProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of  Alcohol Vapor MQ3 Gas Sensor  5.03 based on recent readings.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all information associated with a Differential Speed Setpoint.\nentitybrick:Differential_Speed_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Differential_Speed_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Air Differential Pressure Setpoint.\nentitybrick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Air_Differential_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does Irradiance define in BrickSchema?\nentitybrick:Irradiance",
    "target_text": "SELECT ?property ?value WHERE { brick:Irradiance ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Supply Fan?\nentitybrick:Supply_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Preheat Hot Water Valve.\nentitybrick:Preheat_Hot_Water_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Preheat_Hot_Water_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Touchpanel.\nentitybrick:Touchpanel",
    "target_text": "SELECT ?definition WHERE { brick:Touchpanel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.05 to forecast potential maintenance needs due to Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas deviations.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define an air temperature step parameter?\nentitybrick:Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Air_Temperature_Step_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.18?\nentitybldg:cotwo5.18",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.18 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Air Flow Setpoint?\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Air_Flow_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving High Temperature Hot Water Temperature Sensor a type of Leaving Hot Water Temperature Sensor?\nentitybrick:Leaving_High_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_High_Temperature_Hot_Water_Temperature_Sensor rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Stage Riser represent?\nentitybrick:Stage_Riser",
    "target_text": "SELECT ?definition WHERE { brick:Stage_Riser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything stored about a Chilled Water Differential Pressure Sensor.\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone supply air temperature for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to Air Quality Level 5.05?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Dehumidification Start Stop Status track?\nentitybrick:Dehumidification_Start_Stop_Status",
    "target_text": "SELECT ?quantity WHERE { brick:Dehumidification_Start_Stop_Status brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, rules, and labels for an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Absolute_Humidity_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Leaving Condenser Water Temperature Sensor?\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of   TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label forSound Noise loudness Sensor  5.02.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.57 airq5.57?\nentitybldg:hum5.57",
    "target_text": "SELECT ?room WHERE { bldg:hum5.57 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Alcohol Vapor MQ3 Gas Sensor  data by Sensor 5.05?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the High Humidity Alarm Parameter?\nentitybrick:High_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:High_Humidity_Alarm_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the active zone heating mode command for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Cooling Demand Setpoint.\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Demand_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there an external reference for the Heat Wheel?\nentitybrick:Heat_Wheel",
    "target_text": "SELECT ?reference WHERE { brick:Heat_Wheel rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam Valve?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?label WHERE { brick:Steam_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Voltage Imbalance Sensor.\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Voltage_Imbalance_Sensor rdfs:label ?label . brick:Voltage_Imbalance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for Demand Setpoint.\nentitybrick:Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.03's Formaldehyde Level sensor readings?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.05's Temperature levels and building occupancy patterns.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Corridor.\nentitybldg:Corridor \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Corridor ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Water Temperature Alarm.\nentitybrick:Water_Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Water_Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.53?\nentitybldg:mqfive5.53",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.53 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied humidity setpoint in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Unoccupied_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Humidity_Setpoint ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Air Humidity Sensor 5.03 showing any signs of potential failure based on recent data?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the points for VAVRM103?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM103 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Alcohol Vapor MQ3 Gas Sensor  fluctuations recorded by Sensor 5.04?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the live sensor measurement for zone supply air flow in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.38?\nentitybldg:notwo5.38",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.38 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that Illuminance Sensor 5.01 falls under.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current TVOC  sensor 5.04 status across the smart home?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the  PM10 particulate matter Level Sensor data from Sensor 5.05.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone supply air flow reading for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Dry Cooler?\nentitybrick:Dry_Cooler",
    "target_text": "SELECT ?label WHERE { brick:Dry_Cooler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.01 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam Valve a subclass of?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Water Flow Sensor?\nentitybrick:Water_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Water_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air flow high reset setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Discharge_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Flow_High_Reset_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a link to an external source for Atrium information?\nentitybrick:Atrium",
    "target_text": "SELECT ?reference WHERE { brick:Atrium rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Low Outside Air Lockout Temperature Differential Parameter a type of temperature control setting?\nentitybrick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the complete details of the Entering Water Flow Setpoint.\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Entering_Water_Flow_Setpoint rdfs:label ?label . brick:Entering_Water_Flow_Setpoint skos:definition ?definition . OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Ceiling Fan represented in the ontology?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Ceiling_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is pir5.50 located?\nentitybldg:pir5.50",
    "target_text": "SELECT ?location WHERE { bldg:pir5.50 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Supply Air Temperature High Reset Setpoint means.\nentitybrick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Temperature_High_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Standby Unit On Off Status?\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?label WHERE { brick:Standby_Unit_On_Off_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM2.5 particulate matter Level Sensor 5.03 at, like, in the building?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for zone percent air flow in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the cooling valve output records for AHU 02 over the past week.\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Particulate Matter Sensor.\nentitybrick:Particulate_Matter_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Particulate_Matter_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and the definition for the Space Heater.\nentitybrick:Space_Heater",
    "target_text": "SELECT ?label ?definition WHERE { brick:Space_Heater rdfs:label ?label . brick:Space_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current supply air temperature measurement for AHU 02?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the zone air temperature setpoint in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current output of the zone air temperature sensor in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone air temperature in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.05 and tell me its class.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Heating Ventilation Air Conditioning System has the tag 'Heat'?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "ASK WHERE { brick:Heating_Ventilation_Air_Conditioning_System brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Carbon monoxide  sensors 5.05 in our building?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Velocity Pressure.\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?definition WHERE { brick:Velocity_Pressure skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the title of Discharge Air Flow Sensor?\nentitybrick:Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Radon Concentration Sensor.\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Radon_Concentration_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the broader category of Relative Humidity?\nentitybrick:Relative_Humidity",
    "target_text": "SELECT ?broader WHERE { brick:Relative_Humidity skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air flow demand setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Discharge_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Flow_Demand_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is CO  Sensor 5.04 at, like, in the building?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Temperature sensor 5.05.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  CO  Sensor 5.02 located?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the load shed differential pressure setpoint in the Storage Room.\nentitybldg:Storage_Room \n brick:Load_Shed_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Load_Shed_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Storage_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.50 located?\nentitybldg:mqfive5.50",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.50 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.02 to forecast potential maintenance needs due to LPG Natural Gas Town MQ5 Gas Sensor  deviations.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Outside Air CO Sensor?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_CO_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you verify if Differential Pressure Deadband Setpoint has a superclass?\nentitybrick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "ASK { brick:Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Alcohol Vapor MQ3 Gas Sensor  5.01 hanging out?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Cooling Valve?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you show me the label for Max Water Temperature Setpoint?\nentitybrick:Max_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Max_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water flow setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Flow_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which devices trigger a Low Voltage Alarm?\nentitybrick:Low_Voltage_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:Low_Voltage_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Temperature Low Reset Setpoint has the tag 'Point'.\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Unoccupied Heating Discharge Air Flow Setpoint?\nentitybrick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the measured quantity for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Pressure Setpoint related to Setpoint?\nentitybrick:Pressure_Setpoint",
    "target_text": "ASK WHERE { brick:Pressure_Setpoint rdfs:subClassOf brick:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone supply air flow reading for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entity is equivalent to a discharge air dewpoint sensor?\nentitybrick:Discharge_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Dewpoint_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by the Return Air Differential Pressure Setpoint?\nentitybrick:Return_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Differential_Pressure_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Sensor include the tag 'Sensor'?\nentitybrick:Sensor",
    "target_text": "ASK WHERE { brick:Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.05 measuring  PM2.5 particulate matter Level Sensor at the moment?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of Air Quality Level 5.05, please.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Combustible Gas Smoke MQ2 Sensor  5.04?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Temperature Tolerance Parameter have?\nentitybrick:Temperature_Tolerance_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Tolerance_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Hot Water Differential Pressure Deadband Setpoint typically applied?\nentitybrick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader categories and specific subtypes are associated with COConcentration?\nentitybrick:CO_Concentration",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowerConcepts) WHERE { brick:CO_Concentration skos:broader ?broader . OPTIONAL { brick:CO_Concentration skos:narrower ?narrower . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes Audio Visual Equipment unique?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Alarm' one of the tags for Temperature Alarm?\nentitybrick:Temperature_Alarm",
    "target_text": "ASK WHERE { brick:Temperature_Alarm brick:hasAssociatedTag tag:Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Fire Sensor?\nentitybrick:Fire_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Fire_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Staircase?\nentitybrick:Staircase",
    "target_text": "SELECT ?label ?definition WHERE { brick:Staircase rdfs:label ?label . brick:Staircase skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Building Meter?\nentitybrick:Building_Meter",
    "target_text": "SELECT ?parent WHERE { brick:Building_Meter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can a meter have sub-metering functionality?\nentitybrick:Meter",
    "target_text": "SELECT ?subMeter WHERE { brick:Meter sh:property bsh:isSubMeterOfShape . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label ofSound Noise loudness Sensor  5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Air_Quality_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the related items for Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?related WHERE { brick:Wind_Direction skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Zone Air Humidity Sensor.\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM1 particulate matter Level Sensor 5.04 installed?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Sound Noise loudness Sensor  5.01 over the last six months?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass property of Has part.\nentitybrick:hasPart",
    "target_text": "SELECT ?parentProp WHERE { brick:hasPart rdfs:subPropertyOf ?parentProp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient Formaldehyde Level sensor as measured by sensor 5.05?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Zone Air Humidity Setpoint.\nentitybrick:Zone_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Humidity_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Water System.\nentitybrick:Water_System",
    "target_text": "SELECT ?definition WHERE { brick:Water_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Heating Mode Status have?\nentitybrick:Heating_Mode_Status",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Mode_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Energy Zone?\nentitybrick:Energy_Zone",
    "target_text": "SELECT ?tag WHERE { brick:Energy_Zone brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM2.5 particulate matter Level Sensor 5.05 and where is it set up?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow low reset setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Low_Reset_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Disable Command?\nentitybrick:Disable_Command",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Disable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What unit does Position use?\nentitybrick:Position",
    "target_text": "SELECT ?unit WHERE { brick:Position qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.61 located?\nentitybldg:oxy5.61",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.61 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the CO  trend from  CO  Sensor 5.04 over the past week.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current directive for heating in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest Oxygen,O2 measurement from  Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a VFD used?\nentitybrick:VFD",
    "target_text": "SELECT ?definition WHERE { brick:VFD skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical cooling valve output data for AHU 02 for the previous month.\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Off Command?\nentitybrick:Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Media Room related to Room?\nentitybrick:Media_Room",
    "target_text": "ASK WHERE { brick:Media_Room rdfs:subClassOf brick:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Absolute Humidity Sensor classified?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Filter means.\nentitybrick:Filter",
    "target_text": "SELECT ?definition WHERE { brick:Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  Air Quality Level 5.01 at?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the Heating Enable Command.\nentitybrick:Heating_Enable_Command",
    "target_text": "SELECT ?command WHERE { ?command a brick:Heating_Enable_Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Pantry.\nentitybldg:Pantry \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Pantry ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of is associated with?\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?label WHERE { brick:isAssociatedWith rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Water Tank.\nentitybrick:Water_Tank",
    "target_text": "SELECT ?parent WHERE { brick:Water_Tank rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the lockout status in the Elevator.\nentitybldg:Elevator \n brick:Lockout_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Lockout_Status ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Flow High Reset Setpoint includes the tag 'Air'.\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.03.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the aliasOf relationship for Rest Room.\nentitybrick:Rest_Room",
    "target_text": "SELECT ?alias WHERE { brick:Rest_Room brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Chilled Water Coil?\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Coil rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Access Reader important?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?definition WHERE { brick:Access_Reader rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the core temperature setpoint in the Patio.\nentitybldg:Patio \n brick:Core_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Core_Temperature_Setpoint ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.02 meet our smartness standards?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.19?\nentitybldg:co5.19",
    "target_text": "SELECT ?room WHERE { bldg:co5.19 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is  Air Humidity Sensor 5.04 a member of?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Deionized Water Alarm?\nentitybrick:Deionized_Water_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Deionized_Water_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of Illuminance Sensor 5.01?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Illuminance_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water differential pressure load shed reset status in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Acceleration_Time_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is set for heating in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for PM2.5 particulate matter Level Sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Bus Riser compare to a Breaker Panel?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Chilled Water System?\nentitybrick:Chilled_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency ofSound Noise loudness Sensor  5.05 based on recent readings.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air static pressure deadband setpoint in the Control Room.\nentitybldg:Control_Room \n brick:Supply_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Emergency Power Off System Activated By High Temperature Status.\nentitybrick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.62?\nentitybldg:co5.62",
    "target_text": "SELECT ?room WHERE { bldg:co5.62 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Condenser Water System?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Automatic Mode Command fall?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Automatic_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with PM2.5 particulate matter Level Sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Ammonia Concentration have related concepts?\nentitybrick:Ammonia_Concentration",
    "target_text": "SELECT ?related WHERE { brick:Ammonia_Concentration skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Natural Gas Usage Sensor.\nentitybrick:Natural_Gas_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Natural_Gas_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the dimension vector for Level.\nentitybrick:Level",
    "target_text": "SELECT ?dimensionVector WHERE { brick:Level qudt:hasDimensionVector ?dimensionVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if VAVRM110 is a Variable Air Volume Box.\nentitybrick:Variable_Air_Volume_Box",
    "target_text": "ASK WHERE { bldg:VAVRM110 a brick:Variable_Air_Volume_Box . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Hot Water Differential Pressure Sensor?\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Hot_Water_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Bus Riser.\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?property ?value WHERE { brick:Bus_Riser ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current CO2  sensor 5.05 status across the smart home?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types is the Min Outside Air Flow Setpoint Limit?\nentitybrick:Min_Outside_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?type WHERE { brick:Min_Outside_Air_Flow_Setpoint_Limit a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label ofFormaldehyde Level sensor 5.04?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between Formaldehyde Level sensor and temperature in the area monitored by Sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the label and the definition of the Soil Temperature Sensor?\nentitybrick:Soil_Temperature_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Soil_Temperature_Sensor rdfs:label ?label . brick:Soil_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe a conductivity sensor?\nentitybrick:Conductivity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Conductivity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is return air related to air?\nentitybrick:Return_Air",
    "target_text": "ASK WHERE { brick:Return_Air skos:broader brick:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display all property–value pairs for Supply Air.\nentitybrick:Supply_Air",
    "target_text": "SELECT ?property ?value WHERE { brick:Supply_Air ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Return Air Temperature Sensor?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the most recent zone supply air flow reading for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Touchpanel inherit?\nentitybrick:Touchpanel",
    "target_text": "SELECT ?parent WHERE { brick:Touchpanel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.71?\nentitybldg:airq5.71",
    "target_text": "SELECT ?room WHERE { bldg:airq5.71 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Refrigerant Level Sensor have?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Refrigerant_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Min Load Setpoint.\nentitybrick:Min_Load_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Min_Load_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Bypass Valve?\nentitybrick:Bypass_Valve",
    "target_text": "SELECT ?label WHERE { brick:Bypass_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the Formaldehyde Level sensor data from sensor 5.05?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does  Oxygen,O2 Sensor 5.03 have?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the measurement of Leaving Condenser Water Temperature Sensor?\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Failure Alarm?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Failure_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Alcohol Vapor MQ3 Gas Sensor  readings from Sensor 5.04?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.03's Alcohol Vapor MQ3 Gas Sensor  levels and building occupancy patterns.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Preheat Demand Setpoint.\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Preheat_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the High Return Air Temperature Alarm detect?\nentitybrick:High_Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:High_Return_Air_Temperature_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where Air Temperature Sensor 5.02 is located.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the measurable quantity of an air flow demand setpoint.\nentitybrick:Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Air_Flow_Demand_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Steam On Off Command represent?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Emergency Push Button Status categorized in the ontology?\nentitybrick:Emergency_Push_Button_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Push_Button_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current damper position command measurement for the economizer?\nentitybldg:bldg1.CHW.ECONOMIZER",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.ECONOMIZER ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Air Humidity Sensor.\nentitybrick:Outside_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is linked to the TVOC Sensor?\nentitybrick:TVOC_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:TVOC_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a CO2 Alarm Sensitivity Parameter represented in the ontology?\nentitybrick:CO2_Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:CO2_Alarm_Sensitivity_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  Air Quality Level 5.02 installed and what is it called?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time zone supply air flow value for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current  Air Quality Level 5.04 status across the smart home?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Bus Riser belong to?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_System rdfs:label ?label . brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for   CO  Sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Rated Speed Setpoint?\nentitybrick:Rated_Speed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Rated_Speed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags are linked to the Low Outside Air Temperature Enable Setpoint?\nentitybrick:Low_Outside_Air_Temperature_Enable_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Low_Outside_Air_Temperature_Enable_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the differential pressure deadband setpoint in the Cafe.\nentitybldg:Cafe \n brick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Differential_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to the Discharge Air Flow Demand Setpoint?\nentitybrick:Discharge_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Flow_Demand_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Zone.\nentitybrick:Zone",
    "target_text": "SELECT ?definition WHERE { brick:Zone skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does   CO2  Sensor 5.05 belong to?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Air Diffuser.\nentitybrick:Air_Diffuser",
    "target_text": "SELECT ?label WHERE { brick:Air_Diffuser rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me an extensive overview of all attributes of a Blind.\nentitybrick:Blind",
    "target_text": "SELECT ?property ?value WHERE { brick:Blind ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the CO  levels recorded by Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Humidifier Fault Status categorized using tags?\nentitybrick:Humidifier_Fault_Status",
    "target_text": "SELECT ?tag WHERE { brick:Humidifier_Fault_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Effective Air Temperature Heating Setpoint fall?\nentitybrick:Effective_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Effective_Air_Temperature_Heating_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes a CO Differential Sensor unique?\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO_Differential_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature high reset setpoint in the Office.\nentitybldg:Office \n brick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Office ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's  Air Quality sensor measurements over the last quarter.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Standby Glycool Unit On Off Status?\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?tag WHERE { brick:Standby_Glycool_Unit_On_Off_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for Illuminance Sensor 5.04.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Air' one of the tags for Supply Air Flow High Reset Setpoint?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the Alcohol Vapor MQ3 Gas Sensor  in 5.03, including its category.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering condenser water temperature setpoint in the Locker Room.\nentitybldg:Locker_Room \n brick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Condenser_Water_Temperature_Setpoint ; brick:hasLocation bldg:Locker_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with   CO  Sensor 5.04?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Tint Status?\nentitybrick:Tint_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Tint_Status rdfs:label ?label . brick:Tint_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.01's Combustible Gas Smoke MQ2 Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date CO2  level from sensor 5.03?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Exhaust Air Stack Flow Sensor do?\nentitybrick:Exhaust_Air_Stack_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Stack_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current  PM1 particulate matter Level Sensor values from Sensor 5.03 compare with historical averages?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Chilled Water Differential Temperature Sensor fit into?\nentitybrick:Chilled_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Differential_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the parent property of Rated Minimum Current Output.\nentitybrick:ratedMinimumCurrentOutput",
    "target_text": "SELECT ?parent WHERE { brick:ratedMinimumCurrentOutput rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present setting of the zone air damper command in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Oxygen,O2 Sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the max load setpoint defined?\nentitybrick:Max_Load_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Max_Load_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam Valve?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?label WHERE { brick:Steam_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Pressure Setpoint?\nentitybrick:Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there an external resource explaining Collection Basin Water Heaters?\nentitybrick:Collection_Basin_Water_Heater",
    "target_text": "SELECT ?source WHERE { brick:Collection_Basin_Water_Heater rdfs:seeAlso ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Thermal Power?\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?label WHERE { brick:Thermal_Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which scales are applied to measure CO concentration?\nentitybrick:CO_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:CO_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Emergency Alarm a subclass of any BrickSchema classes?\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all details about Electric Power using a DESCRIBE query.\nentitybrick:Electric_Power",
    "target_text": "DESCRIBE brick:Electric_Power\nWHERE { brick:Electric_Power ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the rdf:type of the Occupied Heating Mode Status.\nentitybrick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?type WHERE { brick:Occupied_Heating_Mode_Status a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which categories is Entering Chilled Water classified?\nentitybrick:Entering_Chilled_Water",
    "target_text": "SELECT ?broader WHERE { brick:Entering_Chilled_Water skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which property is the inverse of has sub-meter?\nentitybrick:hasSubMeter",
    "target_text": "SELECT ?inverse WHERE { brick:hasSubMeter owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest reading of the zone percent air flow for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the textual representation of Phasor Magnitude?\nentitybrick:Phasor_Magnitude",
    "target_text": "SELECT ?label WHERE { brick:Phasor_Magnitude rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why was the Chilled Water Discharge Flow Sensor deprecated?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?version ?message ?replacement WHERE { brick:Chilled_Water_Discharge_Flow_Sensor brick:deprecatedInVersion ?version; brick:deprecationMitigationMessage ?message; brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Relief Fan.\nentitybrick:Relief_Fan",
    "target_text": "SELECT ?parent WHERE { brick:Relief_Fan rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Collection Basin Water Heater fails?\nentitybrick:Collection_Basin_Water_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Collection_Basin_Water_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Dewpoint Sensor has the tag 'Discharge'.\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the  PM10 particulate matter Level Sensor readings from Sensor 5.03?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.05's  PM2.5 particulate matter Level Sensor readings and overall building air quality index?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does ICT Equipment call itself?\nentitybrick:ICT_Equipment",
    "target_text": "SELECT ?label WHERE { brick:ICT_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for  Oxygen,O2 Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the live sensor measurement for zone supply air flow in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Medical Room has in BrickSchema.\nentitybrick:Medical_Room",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Medical_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the Sound Noise loudness Sensor  levels recorded by Sensor 5.05?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Air Quality sensor 5.03 installed?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the complete data of the Fresh Air Setpoint Limit.\nentitybrick:Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Fresh_Air_Setpoint_Limit rdfs:label ?label . brick:Fresh_Air_Setpoint_Limit skos:definition ?definition . OPTIONAL { brick:Fresh_Air_Setpoint_Limit brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Power Factor Sensor extends.\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Power_Factor_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with System Status?\nentitybrick:System_Status",
    "target_text": "SELECT ?tag WHERE { brick:System_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Oxygen,O2 readings from Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Leaving Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Area.\nentitybrick:area",
    "target_text": "SELECT ?label WHERE { brick:area rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water differential temperature setpoint in the Locker Room.\nentitybldg:Locker_Room \n brick:Water_Differential_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Differential_Temperature_Setpoint ; brick:hasLocation bldg:Locker_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties are specified for the Discharge Air Plenum?\nentitybrick:Discharge_Air_Plenum",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Plenum ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor from room 5.04 and specify its type.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.04 rdfs:label ?label . bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Chilled Water Flow Setpoint control?\nentitybrick:Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active setting of the zone air damper command in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which system is supplying air to RM107A?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM107A brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which dimension vector is defined for FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?dimVector WHERE { brick:Formaldehyde_Concentration qudt:hasDimensionVector ?dimVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Chilled Water Differential Pressure Load Shed Setpoint play in HVAC systems?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me if static pressure is a subset of pressure.\nentitybrick:Static_Pressure",
    "target_text": "ASK WHERE { brick:Static_Pressure skos:broader brick:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the general group for Discharge Air.\nentitybrick:Discharge_Air",
    "target_text": "SELECT ?broader WHERE { brick:Discharge_Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the rain level sensor in the Laboratory.\nentitybldg:Laboratory \n brick:Rain_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Rain_Level_Sensor ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Flow Sensor represent?\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone percent air flow measurement for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  TVOC  Sensor 5.01 set up at?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  PM10 particulate matter Level Sensor 5.05 located?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak outside air temperature reading for AHU 02 on the previous day?\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent classification of Cloudage?\nentitybrick:Cloudage",
    "target_text": "SELECT ?broader WHERE { brick:Cloudage skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Reheat Hot Water System inherit?\nentitybrick:Reheat_Hot_Water_System",
    "target_text": "SELECT ?parent WHERE { brick:Reheat_Hot_Water_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Contact Sensor.\nentitybrick:Contact_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Contact_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to an Absorption Chiller?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?property ?value WHERE { brick:Absorption_Chiller ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas trends from Sensor 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum return air temperature readings for AHU 01 from this morning.\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Hot Water Flow Sensor.\nentitybrick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Air Flow Setpoint means.\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name for an Ablutions Room?\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?label WHERE { brick:Ablutions_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the Alcohol Vapor MQ3 Gas Sensor  5.02 and where is it located?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label and definition for the Speed Mode Status.\nentitybrick:Speed_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Speed_Mode_Status rdfs:label ?label . brick:Speed_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Electric Energy Sensor.\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Electric_Energy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Vent Operating Mode Status indicates.\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?definition WHERE { brick:Vent_Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for Outside.\nentitybrick:Outside",
    "target_text": "SELECT ?rule WHERE { brick:Outside sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.03 show any unusual LPG Natural Gas Town MQ5 Gas Sensor  spikes today?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest NO2 reading from  NO2 sensor5.05.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.05 located?\nentitybldg:temp5.05",
    "target_text": "SELECT ?location WHERE { bldg:temp5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the outside air temperature sensor updating on AHU 02 during the last hour?\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Deceleration Time Setpoint?\nentitybrick:Deceleration_Time_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Deceleration_Time_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the brick:hasAssociatedTag references for the Electric Radiator.\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Ticketing Booth.\nentitybrick:Ticketing_Booth",
    "target_text": "SELECT ?definition WHERE { brick:Ticketing_Booth skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Pressure Status.\nentitybrick:Pressure_Status",
    "target_text": "SELECT ?label WHERE { brick:Pressure_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent property for 'meters'?\nentitybrick:meters",
    "target_text": "SELECT ?parent WHERE { brick:meters rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone supply air temperature reading for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature high reset setpoint in the Hallway.\nentitybldg:Hallway \n brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Makeup Air Unit.\nentitybrick:Makeup_Air_Unit",
    "target_text": "SELECT ?label WHERE { brick:Makeup_Air_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.02 following in terms of Formaldehyde Level sensor for the past hour?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Building Hot Water Meter.\nentitybrick:Building_Hot_Water_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Building_Hot_Water_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Unoccupied Supply Air Flow Setpoint related to Unoccupied Discharge Air Flow Setpoint?\nentitybrick:Unoccupied_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Supply_Air_Flow_Setpoint owl:equivalentClass brick:Unoccupied_Discharge_Air_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does  PM1 particulate matter Level Sensor 5.04 require recalibration according to the data?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title ofSound Noise loudness Sensor  5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for the FormaldehydeConcentration.\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:Formaldehyde_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Natural Gas Usage Sensor refer to?\nentitybrick:Natural_Gas_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Natural_Gas_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Alcohol Vapor MQ3 Gas Sensor s 5.05 in our building?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the First Aid Room?\nentitybrick:First_Aid_Room",
    "target_text": "SELECT ?superclass WHERE { brick:First_Aid_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess how environmental changes, such as HVAC adjustments, impact the NO2 readings of Sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is measured by Hot Water Flow Sensor?\nentitybrick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Hot_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label forSound Noise loudness Sensor  5.01.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Valve Position Command.\nentitybrick:Valve_Position_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Valve_Position_Command rdfs:label ?label . brick:Valve_Position_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  PM1 particulate matter Level Sensor 5.01.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What CO2  sensor is set up in room 5.02, and what category does it fall under?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.02 rdfs:label ?label . bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings ofCombustible Gas Smoke MQ2 Sensor 5.04 compared to its normal range?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the Ethyl Alcohol /C2H5CH measurements from sensor5.02?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the defining characteristics of an Average Heating Demand Sensor?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of the Emergency Alarm from BrickSchema.\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Combustible Gas Smoke MQ2 Sensor  measured by Sensor 5.03 during peak occupancy hours?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest chilled water supply temperature event recorded for the building chilled water system?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Temperature Deadband Setpoint have?\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cooling Tower labeled in the ontology?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Tower rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Oxygen,O2 Sensor 5.05.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any constraints on Operational Stage Count?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?constraint WHERE { brick:operationalStageCount sh:property ?constraint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve every property of the Safety Shower.\nentitybrick:Safety_Shower",
    "target_text": "SELECT ?property ?value WHERE { brick:Safety_Shower ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.02's  Illuminance Sensor output compare with other sensors in the building?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all HVAC zones on Floor 1?\nentitybrick:isPartOf",
    "target_text": "SELECT ?zone WHERE { ?room brick:isPartOf bldg:floor1 . ?zone brick:hasPart ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to VAVRM112.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:VAVRM112 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does a Collection Basin Water Level Sensor measure?\nentitybrick:Collection_Basin_Water_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Collection_Basin_Water_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average heating demand sensor in the Training Room.\nentitybldg:Training_Room \n brick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Heating_Demand_Sensor ; brick:hasLocation bldg:Training_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Temperature Alarm a subclass of Air Temperature Alarm?\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Alarm rdfs:subClassOf brick:Air_Temperature_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the  PM10 particulate matter Level Sensor installed in 5.01 and what is its classification?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Manual Auto Status fall?\nentitybrick:Manual_Auto_Status",
    "target_text": "SELECT ?parent WHERE { brick:Manual_Auto_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied discharge air temperature setpoint in the Craft Room.\nentitybldg:Craft_Room \n brick:Unoccupied_Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Discharge_Air_Temperature_Setpoint ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label property (rdfs:label) for Domestic Water.\nentitybrick:Domestic_Water",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for humidity sensors 5.05 in our building?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum chilled water return temperature detected for the building chiller over the last 3 hours?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Sound Noise loudness Sensor  5.01 and where is it set up?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Radiant Panel Temperature Sensor.\nentitybrick:Radiant_Panel_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Radiant_Panel_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Deceleration Time Setpoint?\nentitybrick:Deceleration_Time_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Deceleration_Time_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Low Temperature Alarm?\nentitybrick:Low_Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Low_Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the set of tags assigned to bldg:chiller.\nentitybrick:hasTag",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { bldg:chiller brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Max Water Level Alarm?\nentitybrick:Max_Water_Level_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Max_Water_Level_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Leaving Hot Water Temperature Load Shed Status inherit from?\nentitybrick:Leaving_Hot_Water_Temperature_Load_Shed_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Leaving_Hot_Water_Temperature_Load_Shed_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the Combustible Gas Smoke MQ2 Sensor  5.01 for yesterday?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the gas sensor in the Garden.\nentitybldg:Garden \n brick:Gas_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Gas_Sensor ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Pre Filter extends.\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Pre_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What CO2  reading is sensor 5.02 reporting right now?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone supply air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone supply air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the zone supply air temperature as recorded by RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates Domestic Water has.\nentitybrick:Domestic_Water",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Domestic_Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent class for Photovoltaic Current Output Sensor.\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Photovoltaic_Current_Output_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is set by Supply Air Temperature High Reset Setpoint?\nentitybrick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Temperature_High_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current control command for the zone air damper in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_CO2_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of CO2  readings from Sensor 5.04 for sustainability reporting.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of the Filter Status from BrickSchema.\nentitybrick:Filter_Status",
    "target_text": "SELECT ?definition WHERE { brick:Filter_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all information associated with a Domestic Water Loop.\nentitybrick:Domestic_Water_Loop",
    "target_text": "SELECT ?property ?value WHERE { brick:Domestic_Water_Loop ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is being applied to the zone heating mode in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Radon Concentration Sensor?\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Radon_Concentration_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Min Occupied Heating Discharge Air Flow Setpoint Limit equivalent to?\nentitybrick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Occupied Discharge Air Flow Setpoint labeled?\nentitybrick:Occupied_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to   TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Demand Sensor a subclass of?\nentitybrick:Demand_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Demand_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition source for FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?source WHERE { brick:Formaldehyde_Concentration rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Combustible Gas Smoke MQ2 Sensor  5.05 is placed.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  NO2 Sensor 5.01 is located.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air co2 sensor in the Boutique.\nentitybldg:Boutique \n brick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_CO2_Sensor ; brick:hasLocation bldg:Boutique ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in CO  sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Exhaust Air Flow Sensor?\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Exhaust_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Information Area provide?\nentitybrick:Information_Area",
    "target_text": "SELECT ?definition WHERE { brick:Information_Area skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.02 and where is it located?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the sensor indicate for the zone supply air flow in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Gas Meter?\nentitybrick:Gas_Meter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Gas_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Wet_Bulb_Temperature have a dimension vector?\nentitybrick:Wet_Bulb_Temperature",
    "target_text": "ASK { brick:Wet_Bulb_Temperature qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the definition source for FormaldehydeConcentration.\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?source WHERE { brick:Formaldehyde_Concentration rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Cooling Enable Command'.\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is pir5.24 located?\nentitybldg:pir5.24",
    "target_text": "SELECT ?location WHERE { bldg:pir5.24 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes a CO Level Sensor?\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Overload Alarm refer to?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Overload_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Switch Room have?\nentitybrick:Switch_Room",
    "target_text": "SELECT ?tag WHERE { brick:Switch_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Preheat Demand Setpoint?\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Preheat_Demand_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all tags for Leaving Hot Water Temperature Setpoint.\nentitybrick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of  Air Quality Level 5.05 over the last month?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the number of tags for Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT (COUNT(?tag) AS ?tagCount) WHERE { brick:Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the  PM10 particulate matter Level Sensor readings from Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Standby Glycool Unit On Off Status.\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Standby_Glycool_Unit_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which air Temperature sensor 5.02 are we talking about and where is it placed?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which dimension vector is defined for CurrentImbalance?\nentitybrick:Current_Imbalance",
    "target_text": "SELECT ?dimVector WHERE { brick:Current_Imbalance qudt:hasDimensionVector ?dimVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Domestic Water Loop?\nentitybrick:Domestic_Water_Loop",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Water_Loop rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and all narrower terms related to Time?\nentitybrick:Time",
    "target_text": "SELECT ?label ?narrower WHERE { brick:Time rdfs:label ?label; skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Water Alarm?\nentitybrick:Water_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Water_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level classification of an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from PM2.5 particulate matter Level Sensor 5.03 over the past week.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the return air temperature values for AHU 02 between 9 AM and 11 AM today?\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  PM10 particulate matter Level Sensor trends and their variation over the last 24 hours in room or sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the general groups and the exact subtype for COConcentration.\nentitybrick:CO_Concentration",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowerConcepts) WHERE { brick:CO_Concentration skos:broader ?broader . OPTIONAL { brick:CO_Concentration skos:narrower ?narrower . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current  Air Quality sensor stats from sensor 5.02.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the LPG Natural Gas Town MQ5 Gas Sensor  data from sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air temperature setpoint in the Rest Area.\nentitybldg:Rest_Area \n brick:Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Temperature_Setpoint ; brick:hasLocation bldg:Rest_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Overload Alarm?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Overload_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the  Air Quality Level 5.03 and show its sensor name.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow setpoint in the Kitchen.\nentitybldg:Kitchen \n brick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Setpoint ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of  Alcohol Vapor MQ3 Gas Sensor  5.01, please.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Power Factor Sensor?\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Power_Factor_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied supply air flow setpoint in the Restaurant.\nentitybldg:Restaurant \n brick:Unoccupied_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Restaurant ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.30 located?\nentitybldg:oxy5.30",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.30 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Occupied Supply Air Flow Setpoint extends.\nentitybrick:Occupied_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Supply_Air_Flow_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Warmest Zone Air Temperature Sensor.\nentitybrick:Warmest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Warmest_Zone_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.71 located?\nentitybldg:temp5.71",
    "target_text": "SELECT ?location WHERE { bldg:temp5.71 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the heating mode command for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Air Loop important?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?definition WHERE { brick:Air_Loop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air damper command log for RM107A for the last 15 minutes.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Return Air Dewpoint Sensor.\nentitybrick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Dewpoint_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Temperature Deadband Setpoint.\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Library.\nentitybldg:Library \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.05 is keeping it real with our smart building air quality standards?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the specific subcategories under Leaving Water.\nentitybrick:Leaving_Water",
    "target_text": "SELECT ?narrower WHERE { brick:Leaving_Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Combustible Gas Smoke MQ2 Sensor  values from sensor 5.02?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Water Flow Sensor.\nentitybrick:Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone air damper command readings were recorded for RM107A today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the property 'meters' means.\nentitybrick:meters",
    "target_text": "SELECT ?definition WHERE { brick:meters skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02 installed?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Reception.\nentitybrick:Reception",
    "target_text": "SELECT ?tag WHERE { brick:Reception brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does  Air temperature Sensor 5.01 have?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Emergency Alarm named in the ontology?\nentitybrick:Emergency_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Supply Air Flow Setpoint?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall zone air temperature statistics for RM107B for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air flow sensor in the Playground.\nentitybldg:Playground \n brick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Flow_Sensor ; brick:hasLocation bldg:Playground ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Damper Position Setpoint.\nentitybrick:Damper_Position_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Damper_Position_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Heating Supply Air Temperature Proportional Band Parameter?\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available from Illuminance Sensor 5.05?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the  CO2  sensor 5.05 and show its sensor name.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.04's  Illuminance Sensor data by hour, day, and week.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the sensor for supply air temperature in AHU01.\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU01 brick:hasPoint bldg:bldg1.AHU.AHU01.Supply_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum zone heating mode command readings for RM107A from this morning.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a Battery Energy Storage System and a Flywheel Energy Storage System?\nentitybrick:Battery_Energy_Storage_System",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Energy_Storage_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Static Pressure Proportional Band Parameter?\nentitybrick:Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time  PM1 particulate matter Level Sensor level from sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Bypass Air Humidity Setpoint control indoor climate?\nentitybrick:Bypass_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the return air temperature values for AHU 01 yesterday?\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantitative parameter of Temperature Sensor?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Reactive Power Sensor?\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Reactive_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone air damper command for RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air flow demand setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Discharge_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Flow_Demand_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the category that Ice falls under in the Brick schema.\nentitybrick:Ice",
    "target_text": "SELECT ?broader WHERE { brick:Ice skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label ofFormaldehyde Level sensor 5.05.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does Water Flow Setpoint refer to?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.02's Ethyl Alcohol /C2H5CH analytics in relation to system sustainability?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all RDF properties for a Disable Status.\nentitybrick:Disable_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Disable_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the live measurement of zone percent air flow in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Condenser Heat Exchanger belong to?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Heat_Exchanger rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Water Pump has the tag 'Water'?\nentitybrick:Water_Pump",
    "target_text": "ASK WHERE { brick:Water_Pump brick:hasAssociatedTag tag:Water . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the rain duration sensor in the Music Room.\nentitybldg:Music_Room \n brick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Rain_Duration_Sensor ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the Ethyl Alcohol /C2H5CH data from Sensor 5.01 with HVAC anomalies?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow setpoint in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Setpoint ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the humidity data from sensor 5.03?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating supply air flow setpoint in the Cafeteria.\nentitybldg:Cafeteria \n brick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Cafeteria ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time CO  data from sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone supply air temperature value for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is co5.40 located?\nentitybldg:co5.40",
    "target_text": "SELECT ?location WHERE { bldg:co5.40 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Outside Air Lockout Temperature Setpoint.\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does the Intrusion Detection Equipment belong to?\nentitybrick:Intrusion_Detection_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Intrusion_Detection_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Open Heating Valve Outside Air Temperature Setpoint?\nentitybrick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average cooling valve output reading from AHU 02 for the last 24 hours.\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Humidity Setpoint set?\nentitybrick:Supply_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.02's Oxygen,O2 analytics in relation to system sustainability?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Leaving Condenser Water?\nentitybrick:Leaving_Condenser_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Condenser_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all instances of Humidification Start Stop Status?\nentitybrick:Humidification_Start_Stop_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Humidification_Start_Stop_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Water Differential Temperature Sensor.\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Water_Differential_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the deprecation version for Return Water Temperature Sensor?\nentitybrick:Return_Water_Temperature_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Return_Water_Temperature_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for floor1.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:floor1 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present reading of the zone supply air flow sensor in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Min Water Temperature Setpoint?\nentitybrick:Min_Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Min_Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the High Discharge Air Temperature Alarm?\nentitybrick:High_Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:High_Discharge_Air_Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Emergency Power Off System Activated By Leak Detection System Status a subclass of another entity?\nentitybrick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label for the First Aid Room?\nentitybrick:First_Aid_Room",
    "target_text": "SELECT ?label WHERE { brick:First_Aid_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the present reading of the zone air control temperature setpoint in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Get the full details for DDAHU including its label, definition, equivalent class, and alias.\nentitybrick:DDAHU",
    "target_text": "SELECT ?label ?definition ?eq ?alias WHERE { brick:DDAHU rdfs:label ?label . brick:DDAHU skos:definition ?definition . OPTIONAL { brick:DDAHU owl:equivalentClass ?eq . } OPTIONAL { brick:DDAHU brick:aliasOf ?alias . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Condenser Water Bypass Valve?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Bypass_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Entering Condenser Water Temperature Sensor?\nentitybrick:Entering_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Condenser_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Trace Heat Sensor have?\nentitybrick:Trace_Heat_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Trace_Heat_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Position Sensor represent?\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Position_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.35 located?\nentitybldg:mqnine5.35",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.35 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Min Frequency Command.\nentitybrick:Min_Frequency_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Min_Frequency_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Cloudage measured?\nentitybrick:Cloudage",
    "target_text": "SELECT ?definition WHERE { brick:Cloudage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's current output for the zone air temperature in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which units can be used to measure Solar Irradiance?\nentitybrick:Solar_Irradiance",
    "target_text": "SELECT ?unit WHERE { brick:Solar_Irradiance qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Ticketing Booth.\nentitybrick:Ticketing_Booth",
    "target_text": "SELECT ?parent WHERE { brick:Ticketing_Booth rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Sound Noise loudness Sensor  is deployed in room 5.04 and what is its kind?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entity is Air Handler Unit an alias of?\nentitybrick:Air_Handler_Unit",
    "target_text": "SELECT ?alias WHERE { brick:Air_Handler_Unit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the keywords linked to the Entering Hot Water Temperature Sensor.\nentitybrick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Entering_Hot_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the LPG Natural Gas Town MQ5 Gas Sensor  sensor installed in room 5.02.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Return Air Humidity Sensor?\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for   TVOC  Sensor 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone air temperature setpoint for RM107A for the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Cooling Demand Setpoint?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the aliasOf relationship for Run Time Sensor.\nentitybrick:Run_Time_Sensor",
    "target_text": "SELECT ?alias WHERE { brick:Run_Time_Sensor brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list any subclasses of the Hot Water System?\nentitybrick:Hot_Water_System",
    "target_text": "SELECT ?subsystem WHERE { ?subsystem rdfs:subClassOf brick:Hot_Water_System . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Compressor?\nentitybrick:Compressor",
    "target_text": "SELECT ?tag WHERE { brick:Compressor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Building Hot Water Meter?\nentitybrick:Building_Hot_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Building_Hot_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for Flow Sensor.\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge water flow setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Discharge_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Water_Flow_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for Ethyl Alcohol /C2H5CH Sensor 5.05 over time?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of  Air temperature Sensor 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum CO  in sensor 5.02 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current output of the zone percent air flow sensor in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Min Unoccupied Heating Supply Air Flow Setpoint Limit have the tag 'Supply'?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest zone air damper command configuration in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  Air Quality sensor 5.05 along with its location in the building.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.05 rdfs:label ?label . bldg:Air_Quality_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Torque means.\nentitybrick:Torque",
    "target_text": "SELECT ?definition WHERE { brick:Torque skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the quantity measured by Leaving Chilled Water Flow setpoint.\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class doesSound Noise loudness Sensor  5.01 belong to?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Zone Air Temperature Sensor.\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label for the Entering Hot Water Temperature Sensor.\nentitybrick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Hot_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the role of the Dewpoint Sensor in sensing dewpoint temperature?\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest status of the zone reheat valve command for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Leaving Hot Water Temperature High Reset Setpoint.\nentitybrick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical measurement is set by the Exhaust Air Flow Setpoint?\nentitybrick:Exhaust_Air_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Exhaust_Air_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night Alcohol Vapor MQ3 Gas Sensor  variations as captured by Sensor 5.03?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Occupied Heating Temperature Deadband Setpoint?\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Air' a tag for Max Air Flow Setpoint Limit?\nentitybrick:Max_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the set of tags for Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Max Unoccupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the full list of properties of Thermal Power?\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?property ?value WHERE { brick:Thermal_Power ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.03 over the past week?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Water Loss Alarm.\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader categories does the Exhaust Air Flow Setpoint fall under?\nentitybrick:Exhaust_Air_Flow_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Flow_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of room is a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Control_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Staircase a subclass of?\nentitybrick:Staircase",
    "target_text": "SELECT ?parent WHERE { brick:Staircase rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.47?\nentitybldg:notwo5.47",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.47 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum return air temperature value detected in AHU 02 over the last 3 hours?\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags describe the Formaldehyde Level Sensor?\nentitybrick:Formaldehyde_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Formaldehyde_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone air temperature data for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the absolute humidity sensor in the Garden.\nentitybldg:Garden \n brick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Absolute_Humidity_Sensor ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.01 and tell me its class.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Cooling Tower Fan?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Luminaire?\nentitybrick:Luminaire",
    "target_text": "SELECT ?luminaire WHERE { ?luminaire a brick:Luminaire . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Natural Gas Seismic Shutoff Valve?\nentitybrick:Natural_Gas_Seismic_Shutoff_Valve",
    "target_text": "SELECT ?type WHERE { brick:Natural_Gas_Seismic_Shutoff_Valve a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Entering Condenser Water Temperature Setpoint identified in BrickSchema?\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for Air Quality sensor 5.03?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Makeup Water Valve typically used?\nentitybrick:Makeup_Water_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Makeup_Water_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current heating mode information for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Aggregate described?\nentitybrick:aggregate",
    "target_text": "SELECT ?label WHERE { brick:aggregate rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the Temperature measurements from Sensor 5.03 that might trigger a maintenance alert?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current CO  value from sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the attributes describing the chiller.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:chiller brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Lockout Temperature Setpoint?\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Flow Sensor represent?\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Alcohol Vapor MQ3 Gas Sensor  data by Sensor 5.02?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Domestic Water Loop have?\nentitybrick:Domestic_Water_Loop",
    "target_text": "SELECT ?tag WHERE { brick:Domestic_Water_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Outside Face Surface Temperature Sensor refer to?\nentitybrick:Outside_Face_Surface_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Face_Surface_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Hot Water Meter.\nentitybrick:Hot_Water_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Hot_Water_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for  PM10 particulate matter Level Sensor 5.05.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Entering Medium Temperature Hot Water Temperature Sensor.\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Min Fresh Air Setpoint Limit belong to?\nentitybrick:Min_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?type WHERE { brick:Min_Fresh_Air_Setpoint_Limit a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Humidity Deadband Setpoint defined?\nentitybrick:Humidity_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Humidity_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Unoccupied Air Temperature Setpoint a subclass of?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find  TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does the TVOC Sensor belong to?\nentitybrick:TVOC_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:TVOC_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Equipment?\nentitybrick:Equipment",
    "target_text": "SELECT ?label WHERE { brick:Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Natural Gas Flow Sensor.\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Natural_Gas_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water differential temperature sensor in the Restroom.\nentitybldg:Restroom \n brick:Hot_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Differential_Temperature_Sensor ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.60 located?\nentitybldg:oxy5.60",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.60 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Solar Azimuth Angle Sensor?\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Solar_Azimuth_Angle_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_CO2_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM2.5 particulate matter Level Sensor 5.04 hanging out?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone supply air flow reading for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the textual representation of Occupied Load Shed Command?\nentitybrick:Occupied_Load_Shed_Command",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Load_Shed_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where are Inside Face Surface Temperature Sensors installed in a smart building?\nentitybrick:Inside_Face_Surface_Temperature_Sensor",
    "target_text": "SELECT ?sensor WHERE { ?sensor a brick:Inside_Face_Surface_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the function of Shading System.\nentitybrick:Shading_System",
    "target_text": "SELECT ?definition WHERE { brick:Shading_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Steam Baseboard Radiator is.\nentitybrick:Steam_Baseboard_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Steam_Baseboard_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does Condenser Water Temperature Sensor relate to?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Zone Air Cooling Temperature Setpoint.\nentitybrick:Zone_Air_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air_Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM10 particulate matter Level Sensor is deployed in room 5.03 and what is its kind?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Occupied Supply Air Temperature Setpoint a subclass of Occupied Air Temperature Setpoint?\nentitybrick:Occupied_Supply_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Supply_Air_Temperature_Setpoint rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Dewpoint Sensor?\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Dewpoint_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is the Hot Water Usage Sensor?\nentitybrick:Hot_Water_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  PM2.5 particulate matter Level Sensor 5.03 at?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Energy Usage Sensor belong to?\nentitybrick:Energy_Usage_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Energy_Usage_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount  Air Quality Level 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Damper.\nentitybrick:Damper",
    "target_text": "SELECT ?label WHERE { brick:Damper rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Office include the tag 'Room'?\nentitybrick:Office",
    "target_text": "ASK WHERE { brick:Office brick:hasAssociatedTag tag:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest Temperature measurement from  temperature Sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Formaldehyde Level sensor levels over the past quarter?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's Air Temperature Sensor 5.02 set up at?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of zone air damper command occurrences for RM107A for today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Formaldehyde Level sensor is set up in 5.04 and what kind is it?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Fan.\nentitybrick:Fan",
    "target_text": "SELECT ?tag WHERE { brick:Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.60 located?\nentitybldg:dust5.60",
    "target_text": "SELECT ?location WHERE { bldg:dust5.60 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fan on off status in the Retail Store.\nentitybldg:Retail_Store \n brick:Fan_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fan_On_Off_Status ; brick:hasLocation bldg:Retail_Store ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.20?\nentitybldg:hcho5.20",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.20 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the property shapes associated with System.\nentitybrick:System",
    "target_text": "SELECT ?property WHERE { brick:System sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Leaving Condenser Water Flow Sensor include Leaving Water Flow Sensor?\nentitybrick:Leaving_Condenser_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Flow_Sensor rdfs:subClassOf brick:Leaving_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of hasPoint?\nentitybrick:hasPoint",
    "target_text": "SELECT ?definition WHERE { brick:hasPoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of HVAC Zone?\nentitybrick:HVAC_Zone",
    "target_text": "SELECT ?label WHERE { brick:HVAC_Zone rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from CO  Sensor 5.01 align with smart building sustainability standards?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the owl:equivalentClass for NVR?\nentitybrick:NVR",
    "target_text": "SELECT ?equiv WHERE { brick:NVR owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a comprehensive description of Electric Power.\nentitybrick:Electric_Power",
    "target_text": "DESCRIBE brick:Electric_Power\nWHERE { brick:Electric_Power ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the complete list of sh:property values for Equipment?\nentitybrick:Equipment",
    "target_text": "SELECT ?property WHERE { brick:Equipment sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Electric Baseboard Radiator?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Electric_Baseboard_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's Sound Noise loudness Sensor  5.04 set up at?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Formaldehyde Level sensor readings from Sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the co2 setpoint in the floor1.\nentitybldg:floor1 \n brick:CO2_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:CO2_Setpoint ; brick:hasLocation bldg:floor1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What format does Rated Minimum Voltage Input follow?\nentitybrick:ratedMinimumVoltageInput",
    "target_text": "SELECT ?datatype WHERE { brick:ratedMinimumVoltageInput rdfs:range ?datatype . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Min Outside Air Flow Setpoint Limit?\nentitybrick:Min_Outside_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Outside_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Leaving Chilled Water Flow Sensor?\nentitybrick:Leaving_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Core Temperature Sensor?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Core_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.03 and tell me its class.\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.03 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does PM2.5 particulate matter Level Sensor 5.02 have?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PM1_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the high temperature hot water discharge temperature sensor in the Music Room.\nentitybldg:Music_Room \n brick:High_Temperature_Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:High_Temperature_Hot_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Low Temperature Alarm Parameter a type of HVAC parameter?\nentitybrick:Low_Temperature_Alarm_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Low_Temperature_Alarm_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is differential dry bulb temperature a subset of another temperature category?\nentitybrick:Differential_Dry_Bulb_Temperature",
    "target_text": "SELECT ?category WHERE { brick:Differential_Dry_Bulb_Temperature skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the  Illuminance Sensor readings from Sensor 5.05 have triggered any automated health alerts recently.\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the current sensor in the Break Room.\nentitybldg:Break_Room \n brick:Current_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Current_Sensor ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Motor Speed Sensor.\nentitybrick:Motor_Speed_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Motor_Speed_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Air Temperature Integral Time Parameter a type of Integral Time Parameter?\nentitybrick:Air_Temperature_Integral_Time_Parameter",
    "target_text": "ASK { brick:Air_Temperature_Integral_Time_Parameter rdfs:subClassOf brick:Integral_Time_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has pir5.63?\nentitybldg:pir5.63",
    "target_text": "SELECT ?room WHERE { bldg:pir5.63 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the skos:broader value for Condenser Water.\nentitybrick:Condenser_Water",
    "target_text": "SELECT ?broader WHERE { brick:Condenser_Water skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does Return Air Temperature Sensor measure?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label for the Dewpoint Sensor.\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Dewpoint_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all zone percent air flow readings for RM107B recorded today.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch the rdfs:label for a Chilled Water Differential Pressure Deadband Setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which concept is broader than CurrentAngle?\nentitybrick:Current_Angle",
    "target_text": "SELECT ?broader WHERE { brick:Current_Angle skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What textual description is given to a Chilled Water Differential Pressure Proportional Band Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What environmental variable is adjusted using the Leaving Hot Water Flow Setpoint?\nentitybrick:Leaving_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Hot_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Demand Sensor?\nentitybrick:Demand_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Demand_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display all details of the Run Request Status?\nentitybrick:Run_Request_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Run_Request_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which QUDT quantity does capacity relate to?\nentitybrick:Capacity",
    "target_text": "SELECT ?reference WHERE { brick:Capacity brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the Oxygen,O2 sensor installed in 5.04 and what is its classification?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many measurement points does AHU02 have?\nentitybrick:hasPoint",
    "target_text": "SELECT (COUNT(?point) AS ?sensor_count) WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Oxygen,O2 Sensor 5.05 hanging out?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied room air temperature setpoint in the Zone B.\nentitybldg:Zone B \n brick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Room_Air_Temperature_Setpoint ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent temperature measurement from sensor 5.05, please.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is the Occupied Heating Mode Status a subclass of?\nentitybrick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Heating_Mode_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a full overview of Position covering its label, definition, applicable unit, dimension vector, and broader category.\nentitybrick:Position",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?unit; separator=\", \") AS ?units) ?vector (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) WHERE { brick:Position rdfs:label ?label . brick:Position skos:definition ?definition . brick:Position qudt:applicableUnit ?unit . brick:Position qudt:hasDimensionVector ?vector . brick:Position skos:broader ?broader . } GROUP BY ?label ?definition ?vector"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Water Temperature Setpoint?\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the measured quantity of the Return Air Differential Pressure Setpoint?\nentitybrick:Return_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Differential_Pressure_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the effective air temperature heating setpoint in the Art Room.\nentitybldg:Art_Room \n brick:Effective_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Effective_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of PM1 particulate matter Level Sensor 5.03.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level classification of a Bus Riser?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What advantage does an Absorption Chiller have over other chiller types?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving water flow sensor in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Water_Flow_Sensor ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the purpose of the Standby Glycool Unit On Off Status.\nentitybrick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Standby_Glycool_Unit_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Transfer Fan?\nentitybrick:Transfer_Fan",
    "target_text": "SELECT ?label ?definition WHERE { brick:Transfer_Fan rdfs:label ?label . brick:Transfer_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is PM1 particulate matter Level Sensor 5.02 a member of?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Basement'.\nentitybrick:Basement",
    "target_text": "SELECT ?definition WHERE { brick:Basement skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Output Frequency Sensor belong to?\nentitybrick:Output_Frequency_Sensor",
    "target_text": "SELECT ?type WHERE { brick:Output_Frequency_Sensor a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Heating Demand Sensor inherit from?\nentitybrick:Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is  Illuminance Sensor 5.01 associated with?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_On_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Supply Air Static Pressure Sensor.\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Occupied Cooling Temperature Setpoint.\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Cooling_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Leaving Chilled Water Temperature Setpoint?\nentitybrick:Leaving_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Chilled_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Computer Room Air Handler?\nentitybrick:Computer_Room_Air_Handler",
    "target_text": "SELECT ?label WHERE { brick:Computer_Room_Air_Handler rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for PM2.5 particulate matter Level Sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the preheat discharge air temperature sensor in the Study Room.\nentitybldg:Study_Room \n brick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Preheat_Discharge_Air_Temperature_Sensor ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Disconnect Switch?\nentitybrick:Disconnect_Switch",
    "target_text": "SELECT ?label WHERE { brick:Disconnect_Switch rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Speed Sensor?\nentitybrick:Speed_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Speed_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Max Occupied Heating Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Position Sensor?\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Position_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What material or fluid is tracked by the Entering Chilled Water Flow Sensor?\nentitybrick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Chilled_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Exhaust Air Flow Sensor measure a particular quantity?\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Exhaust_Air_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air temperature low reset setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Return_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of DDAHU?\nentitybrick:DDAHU",
    "target_text": "SELECT ?eq WHERE { brick:DDAHU owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of hasAssociatedTag?\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?label WHERE { brick:hasAssociatedTag rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average zone air temperature sensor in the Kitchen.\nentitybldg:Kitchen \n brick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Zone_Air_Temperature_Sensor ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Chilled Water Temperature Setpoint.\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the defining characteristics of a Broadcast Room?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Broadcast_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Heat' associated with Max Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  PM2.5 particulate matter Level Sensor level recorded by  Sensor 5.04 over the past 24 hours?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which command does damperVAVRM107A operate?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:damperVAVRM107A brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Conference Room?\nentitybrick:Conference_Room",
    "target_text": "SELECT ?tag WHERE { brick:Conference_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air humidity sensor 5.01 and its installation location.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.03's Combustible Gas Smoke MQ2 Sensor  data by hour, day, and week.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe an angle?\nentitybrick:Angle",
    "target_text": "SELECT ?definition WHERE { brick:Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Proportional' associated with Supply Air Static Pressure Proportional Band Parameter?\nentitybrick:Supply_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag tag:Proportional . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Contact Sensor detect contact?\nentitybrick:Contact_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Contact_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Derivative Gain Parameter have?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Derivative_Gain_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Static Pressure Deadband Setpoint a subclass of Discharge Air Static Pressure Setpoint?\nentitybrick:Supply_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Static_Pressure_Deadband_Setpoint rdfs:subClassOf brick:Discharge_Air_Static_Pressure_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC system feeds RM120?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM120 brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of Air Quality sensor 5.01 based on recent readings.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sh:rule references for the Entering Hot Water Temperature High Reset Setpoint.\nentitybrick:Entering_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Entering_Hot_Water_Temperature_High_Reset_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Temperature Low Reset Setpoint.\nentitybrick:Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Low_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Vent Operating Mode Status.\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Vent_Operating_Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Mixed Air Humidity Setpoint refer to?\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all zone air damper command readings for RM107A this morning?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest zone air temperature setpoint configuration for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Ethyl Alcohol /C2H5CH  sensors 5.01 in our building?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Parameter.\nentitybrick:Parameter",
    "target_text": "SELECT ?label WHERE { brick:Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has temp5.43?\nentitybldg:temp5.43",
    "target_text": "SELECT ?room WHERE { bldg:temp5.43 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality Level 5.03 is in use and what is its installation spot?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Outdoor Area?\nentitybrick:Outdoor_Area",
    "target_text": "SELECT ?label WHERE { brick:Outdoor_Area rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for Air Quality Level 5.05?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are linked to Min Static Pressure Setpoint Limit?\nentitybrick:Min_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Static_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class replaces the Discharge Hot Water Temperature Setpoint?\nentitybrick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?replacement WHERE { brick:Discharge_Hot_Water_Temperature_Setpoint brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Power Factor Sensor.\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Power_Factor_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Shading System do?\nentitybrick:Shading_System",
    "target_text": "SELECT ?definition WHERE { brick:Shading_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Elevator Shaft a subclass of?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?parent WHERE { brick:Elevator_Shaft rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Security Equipment.\nentitybrick:Security_Equipment",
    "target_text": "SELECT ?definition WHERE { brick:Security_Equipment skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Mail Room?\nentitybrick:Mail_Room",
    "target_text": "SELECT ?parent WHERE { brick:Mail_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Cooling Start Stop Status a subclass of another type of status?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Start_Stop_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define an Automatic Tint Window Array?\nentitybrick:Automatic_Tint_Window_Array",
    "target_text": "SELECT ?tag WHERE { brick:Automatic_Tint_Window_Array brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum LPG Natural Gas Town MQ5 Gas Sensor  in sensor 5.05 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Temperature High Reset Setpoint.\nentitybrick:Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hum5.58 located?\nentitybldg:hum5.58",
    "target_text": "SELECT ?location WHERE { bldg:hum5.58 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.69?\nentitybldg:mqfive5.69",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.69 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Supply Air Duct Pressure Status?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Duct_Pressure_Status owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is   CO2  Sensor 5.04?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Cooling Tower?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Tower ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the classes that Max Supply Air Temperature Setpoint Limit derives from.\nentitybrick:Max_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Max_Supply_Air_Temperature_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change in zone supply air flow for RM107A in the past week?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the defining source of PM10Concentration?\nentitybrick:PM10_Concentration",
    "target_text": "SELECT ?resource WHERE { brick:PM10_Concentration rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Combustible Gas Smoke MQ2 Sensor  5.02 readings from yesterday.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type forFormaldehyde Level sensor 5.01.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Relief Damper?\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?parent WHERE { brick:Relief_Damper rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Preheat Discharge Air Temperature Sensor?\nentitybrick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Preheat_Discharge_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Jet Nozzle Air Diffuser?\nentitybrick:Jet_Nozzle_Air_Diffuser",
    "target_text": "SELECT ?tag WHERE { brick:Jet_Nozzle_Air_Diffuser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any rule-based requirements for a Centrifugal Chiller?\nentitybrick:Centrifugal_Chiller",
    "target_text": "SELECT ?rule WHERE { brick:Centrifugal_Chiller sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest outside air temperature reading for AHU 01 from the last 2 hours.\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the LPG Natural Gas Town MQ5 Gas Sensor  readings from Sensor 5.04 have triggered any automated health alerts recently.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.22 located?\nentitybldg:light5.22",
    "target_text": "SELECT ?location WHERE { bldg:light5.22 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Bypass Air Flow Sensor?\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Bypass_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show every property-value pair describing Fuel Oil.\nentitybrick:Fuel_Oil",
    "target_text": "SELECT ?property ?value WHERE { brick:Fuel_Oil ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water discharge flow setpoint in the Studio.\nentitybldg:Studio \n brick:Hot_Water_Discharge_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Discharge_Flow_Setpoint ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for thermal transmittance.\nentitybrick:thermalTransmittance",
    "target_text": "SELECT ?label WHERE { brick:thermalTransmittance rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What description is associated with Operating Mode Status?\nentitybrick:Operating_Mode_Status",
    "target_text": "SELECT ?definition WHERE { brick:Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a discharge air dewpoint sensor referred to by another name?\nentitybrick:Discharge_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Dewpoint_Sensor brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Safety System.\nentitybrick:Safety_System",
    "target_text": "SELECT ?tag WHERE { brick:Safety_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.01 reported a significant drop or rise in Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas recently?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hum5.54 located?\nentitybldg:hum5.54",
    "target_text": "SELECT ?location WHERE { bldg:hum5.54 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of  Oxygen,O2 Sensor 5.01.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.02's Alcohol Vapor MQ3 Gas Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Restroom?\nentitybrick:Restroom",
    "target_text": "SELECT ?tag WHERE { brick:Restroom brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does 'meters' have the type owl:AsymmetricProperty?\nentitybrick:meters",
    "target_text": "ASK WHERE { brick:meters a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is tag:Voltage associated with the Voltage Ratio Setpoint?\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "ASK { brick:Voltage_Ratio_Setpoint brick:hasAssociatedTag tag:Voltage . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the  PM1 particulate matter Level Sensor installed in room 5.05.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has dust5.09?\nentitybldg:dust5.09",
    "target_text": "SELECT ?room WHERE { bldg:dust5.09 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the CO  sensor in 5.04 and state its sensor type.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.04 rdfs:label ?label . bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Short Cycle Alarm?\nentitybrick:Short_Cycle_Alarm",
    "target_text": "SELECT ?label ?definition WHERE { brick:Short_Cycle_Alarm rdfs:label ?label . brick:Short_Cycle_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the deprecation mitigation message for Supply Water Temperature Sensor?\nentitybrick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?message WHERE { brick:Supply_Water_Temperature_Sensor brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Filter.\nentitybrick:Filter",
    "target_text": "SELECT ?definition WHERE { brick:Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the Formaldehyde Level sensor in 5.05 and state its sensor type.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.05 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest status of the zone reheat valve command in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for   TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Building Meter?\nentitybrick:Building_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Building_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PM10_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe a direction status?\nentitybrick:Direction_Status",
    "target_text": "SELECT ?tag WHERE { brick:Direction_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'unit:DEG_C' an applicable measurement unit for Temperature?\nentitybrick:Temperature",
    "target_text": "ASK { brick:Temperature qudt:applicableUnit unit:DEG_C . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Audio Visual Equipment a type of ICT Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to System.\nentitybrick:System",
    "target_text": "SELECT ?tag WHERE { brick:System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What specific measurement is linked to the Hot Water Differential Pressure Deadband Setpoint?\nentitybrick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Hot_Water_Differential_Pressure_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the inverse of isPartOf?\nentitybrick:isPartOf",
    "target_text": "SELECT ?inverse WHERE { brick:isPartOf owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Unoccupied Room Air Temperature Setpoint?\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Room_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current sensor value for the zone supply air temperature in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?label WHERE { brick:Control_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label, parent classes, and tags for the Unoccupied Zone Air Temperature Setpoint?\nentitybrick:Unoccupied_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label ?parent ?tag WHERE { brick:Unoccupied_Zone_Air_Temperature_Setpoint rdfs:label ?label . OPTIONAL { brick:Unoccupied_Zone_Air_Temperature_Setpoint rdfs:subClassOf ?parent . } OPTIONAL { brick:Unoccupied_Zone_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Hot Water System.\nentitybrick:Hot_Water_System",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has sound5.43?\nentitybldg:sound5.43",
    "target_text": "SELECT ?room WHERE { bldg:sound5.43 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the motor on off status in the Board Room.\nentitybldg:Board_Room \n brick:Motor_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Motor_On_Off_Status ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether Occupied Heating Supply Air Flow Setpoint includes the tag 'Heat'.\nentitybrick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Heating_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the humidity sensor installed in room 5.05 and what type is it?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fume hood air flow sensor in the Basement.\nentitybldg:Basement \n brick:Fume_Hood_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fume_Hood_Air_Flow_Sensor ; brick:hasLocation bldg:Basement ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Deionized Water Alarm?\nentitybrick:Deionized_Water_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Deionized_Water_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the skos:broader value for PM1Concentration.\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?broader WHERE { brick:PM1_Concentration skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Temperature Low Reset Setpoint has the tag 'Temperature'.\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag tag:Temperature . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.01 due for a recalibration based on its  Air Quality sensor output?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone percent air flow reading for RM107A for the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Condenser Water Flow Setpoint.\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Water_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Deadband Setpoint contribute to system efficiency?\nentitybrick:Chilled_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Gas Meter?\nentitybrick:Gas_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Gas_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the class that serves a similar purpose as the Discharge Air Plenum.\nentitybrick:Discharge_Air_Plenum",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Plenum owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water temperature sensor in the Playground.\nentitybldg:Playground \n brick:Entering_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Temperature_Sensor ; brick:hasLocation bldg:Playground ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for  Air Humidity Sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label WHERE { brick:Steam_On_Off_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Curtailment Override Command have?\nentitybrick:Curtailment_Override_Command",
    "target_text": "SELECT ?tag WHERE { brick:Curtailment_Override_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where Air Temperature Sensor 5.01 is located.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total count of zone heating mode commands for RM107A this morning?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the live sensor measurement for zone supply air temperature in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me if an air flow sensor has multiple classification tags.\nentitybrick:Air_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Air_Flow_Sensor brick:hasAssociatedTag ?tag1 . FILTER(EXISTS { brick:Air_Flow_Sensor brick:hasAssociatedTag ?tag2 . FILTER(?tag1 != ?tag2) }) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the Entering Water Temperature Deadband Setpoint?\nentitybrick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Water_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which markers are linked to Air Quality Sensor?\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Air_Quality_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available fromSound Noise loudness Sensor  5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Mixed Damper refer to?\nentitybrick:Mixed_Damper",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Damper skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Failure Alarm represent?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Failure_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name for  Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Chilled Water Discharge Flow Sensor'.\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Discharge_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Leaving Hot Water Temperature Sensor means.\nentitybrick:Leaving_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Hot_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.47located?\nentitybldg:voc5.47",
    "target_text": "SELECT ?location WHERE { bldg:voc5.47 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the CO2  readings from Sensor 5.01 have triggered any automated health alerts recently.\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Formaldehyde Level sensor 5.05 positioned?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the  Air Quality Level readings from Sensor 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Hot Water Differential Pressure Load Shed Status?\nentitybrick:Hot_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Hot_Water_Differential_Pressure_Load_Shed_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in Sound Noise loudness Sensor  from Sensor 5.01 could be used to forecast future maintenance needs?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from Air Quality sensor 5.01 for a specific date, for example 2025-02-15.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to a Broadcast Room?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Broadcast_Room rdfs:subClassOf ?superclass . brick:Broadcast_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the badge or label for Leaving Water Temperature Setpoint.\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Parking Space.\nentitybrick:Parking_Space",
    "target_text": "SELECT ?rule WHERE { brick:Parking_Space sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Temperature sensor is deployed in room 5.01 and what is its kind?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Temperature_Sensor_5.01 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the central lobby.\nentitybldg:central-lobby \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:central-lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Fume Hood?\nentitybrick:Fume_Hood",
    "target_text": "SELECT ?tag WHERE { brick:Fume_Hood brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Return Air Temperature Low Reset Setpoint have?\nentitybrick:Return_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_Temperature_Low_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Oxygen,O2 Sensor 5.04 located?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Water Alarm.\nentitybrick:Water_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Water_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does   CO  Sensor 5.05 have?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to the Low Voltage Alarm.\nentitybrick:Low_Voltage_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Low_Voltage_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance of the Zone CO2 Level Sensor.\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Zone_CO2_Level_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Contact Sensor?\nentitybrick:Contact_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Contact_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Water Temperature Setpoint.\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Ozone Level Sensor?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ozone_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Solar Azimuth Angle Sensor?\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Solar_Azimuth_Angle_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick Alcohol Vapor MQ3 Gas Sensor  5.05 in the building?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Unoccupied Heating Temperature Setpoint.\nentitybrick:Unoccupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Heating_Temperature_Setpoint rdfs:label ?label . brick:Unoccupied_Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all classes that descend from brick:HVAC_Equipment.\nentitybrick:HVAC_Equipment",
    "target_text": "SELECT ?class WHERE {  ?class rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Outside Illuminance Sensor have?\nentitybrick:Outside_Illuminance_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Illuminance_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  PM2.5 particulate matter Level Sensor trends and their variation over the last 24 hours in room or sensor 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Lead Lag Status help manage system efficiency?\nentitybrick:Lead_Lag_Status",
    "target_text": "SELECT ?definition WHERE { brick:Lead_Lag_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Combustible Gas Smoke MQ2 Sensor  measurements from Sensor 5.02 day-to-day?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.41 located?\nentitybldg:c2h5ch5.41",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.41 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity associated with Supply Air Flow Low Reset Setpoint.\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest zone heating mode setting for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Copy Room?\nentitybrick:Copy_Room",
    "target_text": "SELECT ?tag WHERE { brick:Copy_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the  PM2.5 particulate matter Level Sensor 5.03 and its location.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?tag WHERE { brick:Cafeteria brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the meaning of Leaving Hot Water Temperature Setpoint?\nentitybrick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for DDAHU.\nentitybrick:DDAHU",
    "target_text": "SELECT ?label WHERE { brick:DDAHU rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Voltage Sensor is a subclass of Sensor.\nentitybrick:Voltage_Sensor",
    "target_text": "ASK WHERE { brick:Voltage_Sensor rdfs:subClassOf brick:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Angle Sensor inherit?\nentitybrick:Angle_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Angle_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the dewpoint setpoint in the Restroom.\nentitybldg:Restroom \n brick:Dewpoint_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Dewpoint_Setpoint ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering hot water temperature sensor in the Theater.\nentitybldg:Theater \n brick:Entering_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Hot_Water_Temperature_Sensor ; brick:hasLocation bldg:Theater ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent CO  data available from  CO  Sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units are applicable for static pressure measurement?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Network Video Recorder include Video Surveillance Equipment?\nentitybrick:Network_Video_Recorder",
    "target_text": "ASK WHERE { brick:Network_Video_Recorder rdfs:subClassOf brick:Video_Surveillance_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Oxygen,O2 Sensor 5.03 is placed.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Chilled Water Differential Pressure Step Parameter a subclass of another parameter type?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Correlate the NO2 readings of  NO2 Sensor 5.01 with indoor  quality metrics.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for NO2 Sensor 5.05.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Formaldehyde Level sensor 5.04 and its location.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?tag WHERE { brick:Overridden_On_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the textual representation of Min Cooling Discharge Air Flow Setpoint Limit.\nentitybrick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for TVOC  at 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Rated Speed Setpoint.\nentitybrick:Rated_Speed_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Rated_Speed_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Battery Voltage Sensor?\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Battery_Voltage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current sensor output of the zone reheat valve command in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has light5.49?\nentitybldg:light5.49",
    "target_text": "SELECT ?room WHERE { bldg:light5.49 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the TVOC  readings from Sensor 5.02 have triggered any automated health alerts recently.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest  Air Quality Level reading from  Air Quality Level 5.02.\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rule set for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Enthalpy_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current cooling valve output measurement for AHU 02?\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Combustible Gas Smoke MQ2 Sensor  5.01 showing any signs of potential failure based on recent data?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a Change Filter Alarm and a Smoke Alarm?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Space?\nentitybrick:Space",
    "target_text": "SELECT ?definition WHERE { brick:Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by the Return Air Humidity Sensor?\nentitybrick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Humidity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency for our sensors in the smart home related to humity in 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.02 following in terms of Combustible Gas Smoke MQ2 Sensor  for the past hour?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Trace Heat Sensor?\nentitybrick:Trace_Heat_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Trace_Heat_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details (label, definition, tags, quantity, substances) for the Differential Entering Leaving Water Temperature Sensor?\nentitybrick:Differential_Entering_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?label ?definition ?tag ?quantity ?substance WHERE { brick:Differential_Entering_Leaving_Water_Temperature_Sensor rdfs:label ?label . brick:Differential_Entering_Leaving_Water_Temperature_Sensor skos:definition ?definition . OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Differential_Entering_Leaving_Water_Temperature_Sensor brick:hasSubstance ?substance . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with Illuminance Sensor 5.04?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount Air Humidity Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Position defined?\nentitybrick:Position",
    "target_text": "SELECT ?source WHERE { brick:Position rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if the Unoccupied Return Air Temperature Setpoint has the tag 'Heat'.\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Cooling Tower Fan aid in heat exchange?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of PM2.5 particulate matter Level Sensor 5.05?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for HVAC Equipment.\nentitybrick:HVAC_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:HVAC_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM1 particulate matter Level Sensor 5.01 positioned?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for PM1 particulate matter Level Sensor 5.01.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What term is used for Hallway?\nentitybrick:Hallway",
    "target_text": "SELECT ?label WHERE { brick:Hallway rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Underfloor Air Plenum inherit?\nentitybrick:Underfloor_Air_Plenum",
    "target_text": "SELECT ?parent WHERE { brick:Underfloor_Air_Plenum rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class forSound Noise loudness Sensor  5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient Combustible Gas Smoke MQ2 Sensor  as measured by sensor 5.03?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current output of the zone reheat valve command for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Max Unoccupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for Illuminance Sensor 5.03.\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Illuminance_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Close Limit?\nentitybrick:Close_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Close_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the isDefinedBy value for Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?resource WHERE { brick:Wind_Direction rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show every attribute defined for the Discharge Air Plenum?\nentitybrick:Discharge_Air_Plenum",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Plenum ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow sensor in the south east zone.\nentitybldg:south-east-zone \n brick:Exhaust_Air_Stack_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Sensor ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What CO2  reading is sensor 5.04 reporting right now?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum CO2  in sensor 5.04 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for   Ethyl Alcohol /C2H5CH Sensor 5.04.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Electric Radiator.\nentitybrick:Electric_Radiator",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Electric_Radiator ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from  PM2.5 particulate matter Level Sensor 5.01 align with smart building sustainability standards?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the measured quantity of the Return Air Differential Pressure Sensor?\nentitybrick:Return_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Air Temperature Integral Time Parameter inherit properties from Temperature Parameter?\nentitybrick:Air_Temperature_Integral_Time_Parameter",
    "target_text": "ASK { brick:Air_Temperature_Integral_Time_Parameter rdfs:subClassOf brick:Temperature_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for a Blind?\nentitybrick:Blind",
    "target_text": "SELECT ?rule WHERE { brick:Blind sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.06?\nentitybldg:airq5.06",
    "target_text": "SELECT ?room WHERE { bldg:airq5.06 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's Air Temperature Sensor 5.02 located?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Deionised Water Level Sensor.\nentitybrick:Deionised_Water_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Deionised_Water_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label ofFormaldehyde Level sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.05 based on its  PM2.5 particulate matter Level Sensor data logs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Sensor' a tag associated with Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time humidity level from sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Alcohol Vapor MQ3 Gas Sensor  5.05 and where is it set up?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does  Air Quality Level 5.05 require recalibration according to the data?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Enthalpy Setpoint'.\nentitybrick:Enthalpy_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Enthalpy_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the AHUs supplied by the chiller.\nentitybrick:isFedBy",
    "target_text": "SELECT ?ahu WHERE { ?ahu brick:isFedBy bldg:chiller . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using Sound Noise loudness Sensor  data from Sensor 5.02.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  quality trends over the past month using CO2  sensor 5.02.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are relevant to an Alarm Delay Parameter?\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Alarm_Delay_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags are used for damperVAVRM107A?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:damperVAVRM107A brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current Temperature reading from temperature Sensor 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is  PM1 particulate matter Level Sensor 5.04 showing any signs of potential failure based on recent data?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Automatic Mode Command?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?definition WHERE { brick:Automatic_Mode_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for Voltage Sensor.\nentitybrick:Voltage_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Voltage_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Flow' one of the tags for Air Flow Setpoint?\nentitybrick:Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Air_Flow_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.48 located?\nentitybldg:hcho5.48",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.48 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Relay Command.\nentitybrick:Relay_Command",
    "target_text": "SELECT ?parent WHERE { brick:Relay_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Rated Module Conversion Efficiency described?\nentitybrick:ratedModuleConversionEfficiency",
    "target_text": "SELECT ?label WHERE { brick:ratedModuleConversionEfficiency rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest zone air temperature event recorded for room RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Peak Demand Sensor extends.\nentitybrick:Peak_Demand_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Peak_Demand_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Formaldehyde Level sensor 5.05 status across the smart home?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Temperature Alarm equivalent to Discharge Air Temperature Alarm?\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Alarm owl:equivalentClass brick:Discharge_Air_Temperature_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average TVOC  level recorded by  TVOC  Sensor 5.03 over the past 24 hours?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Differential Pressure Load Shed Status?\nentitybrick:Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { brick:Differential_Pressure_Load_Shed_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  NO2 Sensor 5.01 and its impact on indoor sustainability.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Min Occupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?category WHERE { brick:Access_Control_Equipment rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Temperature readings from Sensor 5.05 help in predicting potential failures or recalibration needs?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Overload_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the current operating directive for the zone reheat valve in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many return air temperature readings were recorded in AHU 01 today?\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Access Reader?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?definition WHERE { brick:Access_Reader rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Alcohol Vapor MQ3 Gas Sensor  5.04 status across the smart home?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of   TVOC  Sensor 5.05.\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Entering Water call itself?\nentitybrick:Entering_Water",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering domestic hot water temperature setpoint in the Hallway.\nentitybldg:Hallway \n brick:Entering_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Domestic_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Min Heating Supply Air Flow Setpoint Limit is equivalent to Min Heating Discharge Air Flow Setpoint Limit.\nentitybrick:Min_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe an air flow sensor?\nentitybrick:Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Zone Unoccupied Load Shed Command have?\nentitybrick:Zone_Unoccupied_Load_Shed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Unoccupied_Load_Shed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What conditions must an Absolute Humidity Sensor follow?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Absolute_Humidity_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the subclasses of the Max Speed Setpoint Limit?\nentitybrick:Max_Speed_Setpoint_Limit",
    "target_text": "SELECT ?subclass WHERE { brick:Max_Speed_Setpoint_Limit rdfs:subClassOf ?subclass. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all tags related to a cold deck?\nentitybrick:Cold_Deck",
    "target_text": "SELECT ?tag WHERE { brick:Cold_Deck brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.02's Ethyl Alcohol /C2H5CH data by hour, day, and week.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.04 based on its Alcohol Vapor MQ3 Gas Sensor  data logs?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has pir5.46?\nentitybldg:pir5.46",
    "target_text": "SELECT ?room WHERE { bldg:pir5.46 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification ofFormaldehyde Level sensor 5.04.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Flow Demand Setpoint has the tag 'Supply'?\nentitybrick:Supply_Air_Flow_Demand_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Demand_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command point is associated with damperVAVRM100?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:damperVAVRM100 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Studio.\nentitybldg:Studio \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the NO2 Level Sensor?\nentitybrick:NO2_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:NO2_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many pump start/stop command events were recorded for the chiller during the evening period today?\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Voltage Imbalance Sensor.\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Voltage_Imbalance_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to Air Quality sensor 5.01?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Trace Heat Sensor.\nentitybrick:Trace_Heat_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Trace_Heat_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Outside Air CO2 Sensor.\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_CO2_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Supply Air Flow Sensor?\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Flow_Sensor owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Ethyl Alcohol /C2H5CH Sensor 5.03 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is Formaldehyde Level sensor 5.03 found?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average TVOC  level recorded by  TVOC  Sensor 5.01 over the past 24 hours?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if PM10 particulate matter Level Sensor 5.04 shows abnormal readings today.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term  Air Quality Level trends from Sensor 5.01?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature deadband setpoint in the Art Room.\nentitybldg:Art_Room \n brick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Overload Alarm?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Overload_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of a max load setpoint?\nentitybrick:Max_Load_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Max_Load_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.34 located?\nentitybldg:mqfive5.34",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.34 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Supply Air Flow Sensor.\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest loop chilled water supply temperature reading for the chiller from the last 2 hours.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe a chilled water meter?\nentitybrick:Chilled_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the energy usage sensor in the Basement.\nentitybldg:Basement \n brick:Energy_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Energy_Usage_Sensor ; brick:hasLocation bldg:Basement ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Combustible Gas Smoke MQ2 Sensor  data by Sensor 5.05?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount  Ethyl Alcohol /C2H5CH Sensor 5.05?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does CO2 Sensor have a parent class defined?\nentitybrick:CO2_Sensor",
    "target_text": "ASK { brick:CO2_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Exhaust Air Differential Pressure Setpoint set?\nentitybrick:Exhaust_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Differential_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance is associated with Room Air Temperature Setpoint?\nentitybrick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Room_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the PlugStrip.\nentitybrick:PlugStrip",
    "target_text": "SELECT ?rule WHERE { brick:PlugStrip sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Temperature Heating Setpoint is equivalent to Discharge Air Temperature Heating Setpoint.\nentitybrick:Supply_Air_Temperature_Heating_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Heating_Setpoint owl:equivalentClass brick:Discharge_Air_Temperature_Heating_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term TVOC  trends from Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Domestic Hot Water System Enable Command function?\nentitybrick:Domestic_Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Domestic_Hot_Water_System_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Temperature Step Parameter include the tag 'Air'?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical zone heating mode command data for RM107B for the previous month.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone supply air temperature sensor indicate in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Differential Speed Setpoint?\nentitybrick:Differential_Speed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Differential_Speed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the category that Gasoline falls under in the Brick schema.\nentitybrick:Gasoline",
    "target_text": "SELECT ?broader WHERE { brick:Gasoline skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Chilled Water Flow Setpoint?\nentitybrick:Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Underfloor Air Temperature Sensor.\nentitybrick:Underfloor_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Underfloor_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Report the current measurement of zone supply air temperature in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the broader terms associated with Occupancy_Count.\nentitybrick:Occupancy_Count",
    "target_text": "SELECT ?broader WHERE { brick:Occupancy_Count skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of an Absorption Chiller.\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . brick:Absorption_Chiller brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest Alcohol Vapor MQ3 Gas Sensor  reading from Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to know how many predicates the Discharge Air Static Pressure Deadband Setpoint has.\nentitybrick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the additional information for Thermally Activated Building System Panel?\nentitybrick:Thermally_Activated_Building_System_Panel",
    "target_text": "SELECT ?link WHERE { brick:Thermally_Activated_Building_System_Panel rdfs:seeAlso ?link . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Enable Status.\nentitybrick:Enable_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Enable_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Steam Distribution?\nentitybrick:Steam_Distribution",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Distribution rdfs:label ?label . brick:Steam_Distribution skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Entering Chilled Water Temperature Setpoint?\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Water Flow Setpoint extends.\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Water_Flow_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.04 reported a significant drop or rise in Alcohol Vapor MQ3 Gas Sensor  recently?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is VAVRM120 a Variable Air Volume system?\nentitybrick:VAV",
    "target_text": "ASK WHERE { bldg:VAVRM120 a brick:VAV . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Emergency Power Off System Status.\nentitybrick:Emergency_Power_Off_System_Status",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Power_Off_System_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does   Ethyl Alcohol /C2H5CH Sensor 5.02 belong to?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam Valve a subclass of?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to Gas Valve?\nentitybrick:Gas_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Gas_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all attributes of a Dimmer?\nentitybrick:Dimmer",
    "target_text": "SELECT ?property ?value WHERE { brick:Dimmer ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Core Temperature Setpoint labeled in the ontology?\nentitybrick:Core_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Core_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Oxygen,O2 Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for  PM10 particulate matter Level Sensor 5.03.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM1 particulate matter Level Sensor 5.03 and where is it set up?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature low reset setpoint in the Showroom.\nentitybldg:Showroom \n brick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Showroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Audio Visual Equipment different from other equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to know how many predicates the Discharge Air Smoke Detection Alarm has.\nentitybrick:Discharge_Air_Smoke_Detection_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Smoke_Detection_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Return Air Differential Pressure Sensor.\nentitybrick:Return_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Heating Discharge Air Temperature Proportional Band Parameter in BrickSchema?\nentitybrick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas output compare with other sensors in the building?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Zone Air Dewpoint Sensor?\nentitybrick:Zone_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Dewpoint_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has sound5.36?\nentitybldg:sound5.36",
    "target_text": "SELECT ?room WHERE { bldg:sound5.36 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of Air Humidity Sensor 5.03 over the last month?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Air Temperature Sensor 5.01 at?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Filter' one of the tags for Filter?\nentitybrick:Filter",
    "target_text": "ASK WHERE { brick:Filter brick:hasAssociatedTag tag:Filter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader class of Rated Minimum Voltage Input?\nentitybrick:ratedMinimumVoltageInput",
    "target_text": "SELECT ?parent WHERE { brick:ratedMinimumVoltageInput rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the declared label for Command?\nentitybrick:Command",
    "target_text": "SELECT ?label WHERE { brick:Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a connection between Electric Current and Alternating Current Frequency?\nentitybrick:Alternating_Current_Frequency",
    "target_text": "ASK { brick:Alternating_Current_Frequency skos:related brick:Electric_Current . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Oxygen,O2 sensor 5.02 and where is it located?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Enable Hot Water System Outside Air Temperature Setpoint fall?\nentitybrick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.02 meet our smartness standards?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the inside face surface temperature setpoint in the Bar.\nentitybldg:Bar \n brick:Inside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Inside_Face_Surface_Temperature_Setpoint ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Leaving Chilled Water Temperature Sensor represent?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Entering Chilled Water Flow Setpoint'.\nentitybrick:Entering_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Chilled_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water supply flow sensor in the West.\nentitybldg:West \n brick:Hot_Water_Supply_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Supply_Flow_Sensor ; brick:hasLocation bldg:West ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.03 following in terms of  Air Quality sensor for the past hour?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Supply Air Flow High Reset Setpoint?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is NO2 Sensor 5.02?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Low Voltage Alarm contribute to system safety?\nentitybrick:Low_Voltage_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Low_Voltage_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Flow' one of the tags for Flow Sensor?\nentitybrick:Flow_Sensor",
    "target_text": "ASK WHERE { brick:Flow_Sensor brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the properties belonging to the Discharge Air Temperature Deadband Setpoint?\nentitybrick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Load Current Sensor contribute to power usage monitoring?\nentitybrick:Load_Current_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Load_Current_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Stage Enable Command.\nentitybrick:Stage_Enable_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Stage_Enable_Command rdfs:label ?label . brick:Stage_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  Air Quality Level installed in room 5.03 and what type is it?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air wet bulb temperature sensor in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Wet_Bulb_Temperature_Sensor ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name for PM10 particulate matter Level Sensor 5.05.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all tags related to a damper command?\nentitybrick:Damper_Command",
    "target_text": "SELECT ?tag WHERE { brick:Damper_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Mixed Air Humidity Sensor extends.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Mixed_Air_Humidity_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current  Illuminance Sensor 5.05 status across the smart home?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sh:property values are defined for Location?\nentitybrick:Location",
    "target_text": "SELECT ?property WHERE { brick:Location sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of capacity is recorded by a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Capacity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air grains sensor in the Sauna.\nentitybldg:Sauna \n brick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Grains_Sensor ; brick:hasLocation bldg:Sauna ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the sh:rule properties of the Return Air Dewpoint Sensor.\nentitybrick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Dewpoint_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Battery?\nentitybrick:Battery",
    "target_text": "SELECT ?tag WHERE { brick:Battery brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does chilled water mean in HVAC systems?\nentitybrick:Chilled_Water",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Humidity Sensor a type of Relative Humidity Sensor?\nentitybrick:Supply_Air_Humidity_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Humidity_Sensor rdfs:subClassOf brick:Relative_Humidity_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Gas Distribution represent?\nentitybrick:Gas_Distribution",
    "target_text": "SELECT ?definition WHERE { brick:Gas_Distribution skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Entering Water?\nentitybrick:Entering_Water",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the equivalent class for the Heating Supply Air Temperature Integral Time Parameter?\nentitybrick:Heating_Supply_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?eq WHERE { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.03 reported a significant drop or rise in  Air Quality sensor recently?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does Temperature Setpoint extend?\nentitybrick:Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving water pressure sensor in the Playground.\nentitybldg:Playground \n brick:Leaving_Water_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Water_Pressure_Sensor ; brick:hasLocation bldg:Playground ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Embedded Temperature Sensor?\nentitybrick:Embedded_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Embedded_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Return Air Grains Sensor refer to?\nentitybrick:Return_Air_Grains_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Grains_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does an air wet bulb temperature sensor measure?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Air_Wet_Bulb_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's Air Temperature Sensor 5.01 set up at?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What other name does the Max Discharge Air Temperature Setpoint Limit go by in BrickSchema?\nentitybrick:Max_Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Max_Discharge_Air_Temperature_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  temperature Sensor 5.05's readings over the past 48 hours.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the Sound Noise loudness Sensor  in 5.02 and state its sensor type.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's  Illuminance Sensor output compare with other sensors in the building?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the adjust sensor in the Roof.\nentitybldg:Roof \n brick:Adjust_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Adjust_Sensor ; brick:hasLocation bldg:Roof ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the superclass of Fire Safety Equipment.\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Fire_Safety_Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of Air Quality Level 5.01?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which point records the mixed air temperature for AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Mixed_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Min Load Setpoint belong to?\nentitybrick:Min_Load_Setpoint",
    "target_text": "SELECT ?type WHERE { brick:Min_Load_Setpoint a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from  temperature Sensor 5.01 to compute an overall Temperature index.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does angle measurement refer to?\nentitybrick:Angle",
    "target_text": "SELECT ?definition WHERE { brick:Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.04 say about the current CO ?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Natural Gas Flow Sensor.\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Natural_Gas_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Occupied Heating Temperature Deadband Setpoint.\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What reading does the sensor report for the zone air temperature in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Air Diffuser include the tag 'Diffuser'?\nentitybrick:Air_Diffuser",
    "target_text": "ASK WHERE { brick:Air_Diffuser brick:hasAssociatedTag tag:Diffuser . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label along with the definition for the Zone Air Cooling Temperature Setpoint?\nentitybrick:Zone_Air_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_Air_Cooling_Temperature_Setpoint rdfs:label ?label . brick:Zone_Air_Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Cooling Demand Setpoint?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the High Humidity Alarm Parameter.\nentitybrick:High_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:High_Humidity_Alarm_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Occupancy Status?\nentitybrick:Occupancy_Status",
    "target_text": "SELECT ?definition WHERE { brick:Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Combustible Gas Smoke MQ2 Sensor  measured by Sensor 5.02 during peak occupancy hours?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Unoccupied Heating Temperature Deadband Setpoint?\nentitybrick:Unoccupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Heating_Temperature_Deadband_Setpoint rdfs:label ?label . brick:Unoccupied_Heating_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Zone Standby Load Shed Command inherit?\nentitybrick:Zone_Standby_Load_Shed_Command",
    "target_text": "SELECT ?parent WHERE { brick:Zone_Standby_Load_Shed_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded outside air temperature events for AHU 01 during the last weekend.\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Humidity.\nentitybrick:Humidity",
    "target_text": "SELECT ?label WHERE { brick:Humidity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between LPG Natural Gas Town MQ5 Gas Sensor  and temperature in the area monitored by Sensor 5.03?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for  PM10 particulate matter Level Sensor at 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Heating Demand Setpoint.\nentitybrick:Heating_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the points associated with AHU02.\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Outside Air Temperature High Reset Setpoint.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Formaldehyde Level sensor 5.05 located in?\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Leaving Water Temperature Proportional Band Parameter fall?\nentitybrick:Leaving_Water_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Temperature_Proportional_Band_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for CurrentAngle.\nentitybrick:Current_Angle",
    "target_text": "SELECT ?unit WHERE { brick:Current_Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Condenser Water Isolation Valve?\nentitybrick:Condenser_Water_Isolation_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Isolation_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Occupied Cooling Temperature Setpoint have?\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Cooling_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are examples of devices that use an Automatic Mode Command?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Automatic_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  TVOC  Sensor 5.01?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Game Room.\nentitybldg:Game_Room \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rule set for the Riser.\nentitybrick:Riser",
    "target_text": "SELECT ?rule WHERE { brick:Riser sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.04 is keeping it real with our smart building air quality standards?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Wind Speed Sensor?\nentitybrick:Wind_Speed_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Wind_Speed_Sensor rdfs:label ?label . brick:Wind_Speed_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the active configuration of the zone air control temperature setpoint in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which units are associated with PM1Concentration?\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:PM1_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Unoccupied Cooling Temperature Deadband Setpoint.\nentitybrick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest NO2 measurement from  NO2 Sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Discharge Air Flow Sensor measures.\nentitybrick:Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a complete description of Electric Power?\nentitybrick:Electric_Power",
    "target_text": "DESCRIBE brick:Electric_Power\nWHERE { brick:Electric_Power ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.01 following in terms of temperature for the past hour?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Communication Loss Alarm indicate a system failure?\nentitybrick:Communication_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Communication_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Equipment Room.\nentitybldg:Equipment_Room \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Equipment_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.05 based on its Combustible Gas Smoke MQ2 Sensor  data logs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is co5.69 located?\nentitybldg:co5.69",
    "target_text": "SELECT ?location WHERE { bldg:co5.69 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?definition WHERE { brick:Wind_Direction skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Cooling Command represent?\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Chilled Water System Enable Command?\nentitybrick:Chilled_Water_System_Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_System_Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has light5.04?\nentitybldg:light5.04",
    "target_text": "SELECT ?room WHERE { bldg:light5.04 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Supply Air Flow Setpoint include Unoccupied Discharge Air Flow Setpoint?\nentitybrick:Unoccupied_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Supply_Air_Flow_Setpoint owl:equivalentClass brick:Unoccupied_Discharge_Air_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Zone Air Humidity Sensor.\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Humidity_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Utility Room.\nentitybldg:Utility_Room \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Alcohol Vapor MQ3 Gas Sensor  5.02 showing any signs of potential failure based on recent data?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the hierarchical classification of a Chilled Water Pump?\nentitybrick:Chilled_Water_Pump",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Pump rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details available for Temperature Sensor?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label and definition are assigned to the Space Heater?\nentitybrick:Space_Heater",
    "target_text": "SELECT ?label ?definition WHERE { brick:Space_Heater rdfs:label ?label . brick:Space_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Energy Generation System define in BrickSchema?\nentitybrick:Energy_Generation_System",
    "target_text": "SELECT ?property ?value WHERE { brick:Energy_Generation_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of the Heating Supply Air Temperature Integral Time Parameter?\nentitybrick:Heating_Supply_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?eq WHERE { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of PM10 particulate matter Level Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does   CO2  Sensor 5.02 represent?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Flow High Reset Setpoint has the tag 'Supply'?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Heating Discharge Air Temperature Integral Time Parameter define in BrickSchema?\nentitybrick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Remotely On Off Status?\nentitybrick:Remotely_On_Off_Status",
    "target_text": "SELECT ?parent WHERE { brick:Remotely_On_Off_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.71?\nentitybldg:oxy5.71",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.71 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Operative Temperature labeled?\nentitybrick:Operative_Temperature",
    "target_text": "SELECT ?label WHERE { brick:Operative_Temperature rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has voc5.29?\nentitybldg:voc5.29",
    "target_text": "SELECT ?room WHERE { bldg:voc5.29 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Hot Water Differential Pressure Load Shed Status?\nentitybrick:Hot_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Hot_Water_Differential_Pressure_Load_Shed_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Hot Box?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?box WHERE { ?box a brick:Hot_Box . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurement from sensor 5.02, please.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is PV Array equivalent to Photovoltaic Array?\nentitybrick:PV_Array",
    "target_text": "ASK WHERE { brick:PV_Array owl:equivalentClass brick:Photovoltaic_Array . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality Level reading is sensor 5.02 reporting right now?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?label WHERE { brick:Cafeteria rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if the tag 'PID' is associated with Supply Air Proportional Gain Parameter?\nentitybrick:Supply_Air_Proportional_Gain_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Proportional_Gain_Parameter brick:hasAssociatedTag tag:PID . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of    Ethyl Alcohol /C2H5CH Sensor 5.01.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which parent class does the Disable Command belong to?\nentitybrick:Disable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Disable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes a Blind from other window coverings?\nentitybrick:Blind",
    "target_text": "SELECT ?superclass WHERE { brick:Blind rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is  PM1 particulate matter Level Sensor 5.03 associated with?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for an Automatic Tint Window?\nentitybrick:Automatic_Tint_Window",
    "target_text": "SELECT ?tag WHERE { brick:Automatic_Tint_Window brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Temperature Low Reset Setpoint control?\nentitybrick:Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Low_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the associated tags for Pressure Sensor?\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current reading from the zone air temperature sensor in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the current configuration of the zone air control temperature setpoint for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Thermal Power Meter?\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?label WHERE { brick:Thermal_Power_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.27 located?\nentitybldg:cotwo5.27",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.27 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Chilled Water Differential Pressure Step Parameter used in stepwise control loops?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter ?property ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification includes the Hold Status?\nentitybrick:Hold_Status",
    "target_text": "SELECT ?parent WHERE { brick:Hold_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What setting is applied for the zone air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What insights can we draw from Sensor 5.02's data regarding energy consumption and HVAC efficiency?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02 positioned?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about Rated Minimum Voltage Output.\nentitybrick:ratedMinimumVoltageOutput",
    "target_text": "SELECT ?definition WHERE { brick:ratedMinimumVoltageOutput skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if PM2.5Concentration uses unit PPB?\nentitybrick:PM2",
    "target_text": "ASK WHERE { brick:PM2.5_Concentration qudt:applicableUnit unit:PPB . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Water Loop means.\nentitybrick:Water_Loop",
    "target_text": "SELECT ?definition WHERE { brick:Water_Loop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest Sound Noise loudness Sensor  data for 5.02.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Temperature Low Reset Setpoint.\nentitybrick:Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the  PM2.5 particulate matter Level Sensor measurements from sensor 5.04?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  Oxygen,O2 Sensor 5.03 based on its most recent data.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water static pressure setpoint in the Spa.\nentitybldg:Spa \n brick:Hot_Water_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Static_Pressure_Setpoint ; brick:hasLocation bldg:Spa ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Chilled Water System Enable Command?\nentitybrick:Chilled_Water_System_Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_System_Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Heating Discharge Air Temperature Deadband Setpoint?\nentitybrick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a definition of the Low Voltage Alarm?\nentitybrick:Low_Voltage_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Low_Voltage_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the textual explanation of the Generation Sensor from BrickSchema.\nentitybrick:Generation_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Generation_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.04 show any unusual  Illuminance Sensor spikes today?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if System Enable Command is a subclass of Enable Command.\nentitybrick:System_Enable_Command",
    "target_text": "ASK WHERE { brick:System_Enable_Command rdfs:subClassOf brick:Enable_Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of medium temperature hot water differential pressure load shed setpoint?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.33 located?\nentitybldg:hcho5.33",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.33 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What TVOC  reading is sensor 5.01 reporting right now?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Mixed Air Humidity Setpoint?\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Mixed_Air_Humidity_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and what Building Air means.\nentitybrick:Building_Air",
    "target_text": "SELECT ?label ?definition WHERE { brick:Building_Air rdfs:label ?label; skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what Mixed Air means?\nentitybrick:Mixed_Air",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Space Heater?\nentitybrick:Space_Heater",
    "target_text": "SELECT ?label WHERE { brick:Space_Heater rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest  Air Quality sensor reading from  Air Quality sensor 5.04.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which points does VAVRM115 have?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM115 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Common Space?\nentitybrick:Common_Space",
    "target_text": "SELECT ?tag WHERE { brick:Common_Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Solar Zenith Angle Sensor.\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Zenith_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the zone co2 level sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Zone_CO2_Level_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the Oxygen,O2 sensor 5.05 and where it is installed.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Water Temperature Setpoint?\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Hot Water Pump regulate water circulation?\nentitybrick:Hot_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the Oxygen,O2 sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the classification and metadata tags for a Chilled Water Coil.\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Chilled_Water_Coil rdfs:subClassOf ?superclass . brick:Chilled_Water_Coil brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes an Automatic Tint Window unique?\nentitybrick:Automatic_Tint_Window",
    "target_text": "SELECT ?superclass WHERE { brick:Automatic_Tint_Window rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Heat Exchanger do?\nentitybrick:Heat_Exchanger",
    "target_text": "SELECT ?definition WHERE { brick:Heat_Exchanger skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Common Space?\nentitybrick:Common_Space",
    "target_text": "SELECT ?tag WHERE { brick:Common_Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.04 say about the current TVOC ?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.68 located?\nentitybldg:oxy5.68",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.68 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Hot Water Loop?\nentitybrick:Hot_Water_Loop",
    "target_text": "SELECT ?loop WHERE { ?loop a brick:Hot_Water_Loop . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the domestic hot water differential pressure setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Domestic_Hot_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Domestic_Hot_Water_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category ofSound Noise loudness Sensor  5.03.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply condenser water flow sensor in the Zone C.\nentitybldg:Zone_C \n brick:Supply_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Condenser_Water_Flow_Sensor ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Occupied Supply Air Flow Setpoint.\nentitybrick:Occupied_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqnine5.08?\nentitybldg:mqnine5.08",
    "target_text": "SELECT ?room WHERE { bldg:mqnine5.08 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient humidity as measured by sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the chilled water return temperature sensor updating on the building chiller during the last hour?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Site?\nentitybrick:Site",
    "target_text": "SELECT ?label WHERE { brick:Site rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Heat_Exchanger skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.02's  Air Quality Level readings and overall building air quality index?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Exhaust Air Stack Flow Deadband Setpoint belong to?\nentitybrick:Exhaust_Air_Stack_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Ammonia Sensor'.\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ammonia_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Hot Water Differential Temperature Sensor?\nentitybrick:Hot_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does VAVRM107A depend on?\nentitybrick:isFedBy",
    "target_text": "SELECT ?source WHERE { bldg:VAVRM107A brick:isFedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Hot Water Flow Sensor a subclass of?\nentitybrick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the measurement points in AHU01?\nentitybrick:hasPoint",
    "target_text": "SELECT ?sensor WHERE { bldg:AHU01 brick:hasPoint ?sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Condenser Water Bypass Valve?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Bypass_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the CO  measurements from sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Oxygen,O2 Sensor 5.04 over the last six months?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Steam System extends.\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector of GrainsOfMoisture?\nentitybrick:GrainsOfMoisture",
    "target_text": "SELECT ?dimensionVector WHERE { brick:GrainsOfMoisture qudt:hasDimensionVector ?dimensionVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Safety Equipment?\nentitybrick:Safety_Equipment",
    "target_text": "SELECT ?label WHERE { brick:Safety_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Concession have?\nentitybrick:Concession",
    "target_text": "SELECT ?tag WHERE { brick:Concession brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the unit type for Tilt.\nentitybrick:tilt",
    "target_text": "SELECT ?unit WHERE { brick:tilt qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Standby Load Shed Command?\nentitybrick:Standby_Load_Shed_Command",
    "target_text": "SELECT ?parent WHERE { brick:Standby_Load_Shed_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the applicable units for GrainsOfMoisture.\nentitybrick:GrainsOfMoisture",
    "target_text": "SELECT ?unit WHERE { brick:GrainsOfMoisture qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Oxygen,O2 sensor is set up in 5.03 and what kind is it?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Cooling Tower'.\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Air Quality?\nentitybrick:Air_Quality",
    "target_text": "SELECT ?label WHERE { brick:Air_Quality rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  Illuminance Sensor measurements from Sensor 5.01 day-to-day?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Valve Status a subclass of?\nentitybrick:Valve_Status",
    "target_text": "SELECT ?parent WHERE { brick:Valve_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Low Outside Air Lockout Temperature Differential Parameter fall?\nentitybrick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Voltage Imbalance Sensor?\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Imbalance_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the motor current sensor in the Parking Lot.\nentitybldg:Parking_Lot \n brick:Motor_Current_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Motor_Current_Sensor ; brick:hasLocation bldg:Parking_Lot ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the Electric Radiator?\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Electric_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which version was the Discharge Hot Water Temperature Setpoint deprecated in?\nentitybrick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Hot_Water_Temperature_Setpoint brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving water temperature deadband setpoint in the Staircase.\nentitybldg:Staircase \n brick:Leaving_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Water_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Staircase ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags come with Pressure Sensor?\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Entering Medium Temperature Hot Water Temperature Low Reset Setpoint?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does the High Humidity Alarm Parameter fall?\nentitybrick:High_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:High_Humidity_Alarm_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the No Water Alarm.\nentitybrick:No_Water_Alarm",
    "target_text": "SELECT ?label WHERE { brick:No_Water_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_CO2_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Combustible Gas Smoke MQ2 Sensor  5.04 installed and what is it called?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for PM2.5 particulate matter Level Sensor 5.01.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average supply air flow sensor in the Study Room.\nentitybldg:Study_Room \n brick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Supply_Air_Flow_Sensor ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Evaporative Heat Exchanger.\nentitybrick:Evaporative_Heat_Exchanger",
    "target_text": "SELECT ?tag WHERE { brick:Evaporative_Heat_Exchanger brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone supply air temperature as detected in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from  Alcohol Vapor MQ3 Gas Sensor  5.04 over the past week.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using  PM2.5 particulate matter Level Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the disable status in the Art Room.\nentitybldg:Art_Room \n brick:Disable_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Disable_Status ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Entering Chilled Water Temperature Setpoint?\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the zone air control temperature setpoint updating for RM107B during the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name referencing the Entering Water Temperature Sensor.\nentitybrick:Entering_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the thermal energy usage sensor in the Lobby.\nentitybldg:Lobby \n brick:Thermal_Energy_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Thermal_Energy_Usage_Sensor ; brick:hasLocation bldg:Lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03 installed?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Rain Level Sensor.\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Hot Water Differential Pressure Proportional Band Parameter a subclass of another parameter type?\nentitybrick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data from Sensor 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest zone heating mode command event recorded for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for the Hot Water Differential Pressure Sensor?\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Hot_Water_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for  Oxygen,O2 Sensor 5.01.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest cooling command event recorded for AHU 02?\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does a direction sensor measure?\nentitybrick:Direction_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Direction_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Cooling Tower?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Exhaust Air Flow Sensor.\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Exhaust_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone reheat valve command for RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Sound Noise loudness Sensor  values from sensor 5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest configuration of the zone air temperature setpoint in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Condenser Water System?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all supply air temperature readings from AHU 02 recorded today.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fan on off status in the Lobby.\nentitybldg:Lobby \n brick:Fan_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fan_On_Off_Status ; brick:hasLocation bldg:Lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Occupied Return Air Temperature Setpoint.\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Bus Riser belong to, and what tags describe it?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . brick:Bus_Riser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are linked to the Alarm Sensitivity Parameter?\nentitybrick:Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Alarm_Sensitivity_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Mixed Air Temperature Sensor?\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Mixed_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the Combustible Gas Smoke MQ2 Sensor  data from Sensor 5.02 for the past year.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Ethyl Alcohol /C2H5CH Sensor 5.02 indicate any potential issues with  quality in the building?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the label and definition of the Short Cycle Alarm?\nentitybrick:Short_Cycle_Alarm",
    "target_text": "SELECT ?label ?definition WHERE { brick:Short_Cycle_Alarm rdfs:label ?label . brick:Short_Cycle_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air control temperature setpoint as measured in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Damper Position Status?\nentitybrick:Damper_Position_Status",
    "target_text": "SELECT ?definition WHERE { brick:Damper_Position_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader class of Has Address?\nentitybrick:hasAddress",
    "target_text": "SELECT ?parent WHERE { brick:hasAddress rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What system is damperVAVRM110 a part of?\nentitybrick:isPartOf",
    "target_text": "SELECT ?system WHERE { bldg:damperVAVRM110 brick:isPartOf ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to  Air Humidity Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Computer Room Air Conditioning.\nentitybrick:Computer_Room_Air_Conditioning",
    "target_text": "SELECT ?definition WHERE { brick:Computer_Room_Air_Conditioning skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Water Temperature Setpoint.\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Power Loss Alarm.\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Power_Loss_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Water' one of the tags for Leaving Chilled Water Temperature Sensor?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Water . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  PM10 particulate matter Level Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow deadband setpoint in the West.\nentitybldg:West \n brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint ; brick:hasLocation bldg:West ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of the Hot Box?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Box skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for Illuminance Sensor 5.02.\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Illuminance_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Zone Air means.\nentitybrick:Zone_Air",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas from Sensor 5.03 could be used to forecast future maintenance needs?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the full BrickSchema entry for the Discharge Air Smoke Detection Alarm?\nentitybrick:Discharge_Air_Smoke_Detection_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Smoke_Detection_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about an Access Reader.\nentitybrick:Access_Reader",
    "target_text": "SELECT ?property ?value WHERE { brick:Access_Reader ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Natural Gas?\nentitybrick:Natural_Gas",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  Air temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the Sound Noise loudness Sensor  in 5.01, including its category.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Dedicated Outdoor Air System Unit.\nentitybrick:Dedicated_Outdoor_Air_System_Unit",
    "target_text": "SELECT ?tag WHERE { brick:Dedicated_Outdoor_Air_System_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Temperature Deadband Setpoint include Temperature Setpoint?\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "ASK WHERE { brick:Temperature_Deadband_Setpoint rdfs:subClassOf brick:Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What alternative class does the Discharge Air Static Pressure Deadband Setpoint reference via aliasOf?\nentitybrick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Static_Pressure_Deadband_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.52?\nentitybldg:oxy5.52",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.52 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the reference key from QUDT for Enthalpy.\nentitybrick:Enthalpy",
    "target_text": "SELECT ?reference WHERE { brick:Enthalpy brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Electric Current.\nentitybrick:Electric_Current",
    "target_text": "SELECT ?label WHERE { brick:Electric_Current rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Blind Group play in automated shading?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?definition WHERE { brick:Blind_Group skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Pump described?\nentitybrick:Pump",
    "target_text": "SELECT ?label WHERE { brick:Pump rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent  PM10 particulate matter Level Sensor measurement from sensor 5.04, please.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the types for the Occupied Heating Temperature Setpoint.\nentitybrick:Occupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?type WHERE { brick:Occupied_Heating_Temperature_Setpoint a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Hot Water System Enable Command have any rule definitions in BrickSchema?\nentitybrick:Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?rule WHERE { brick:Hot_Water_System_Enable_Command sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Cooling Start Stop Status belong to?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Start_Stop_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of  Alcohol Vapor MQ3 Gas Sensor  5.05?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Cooling Start Stop Status?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Start_Stop_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  NO2 sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.04 rdfs:label ?label . bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Preheat Demand Setpoint?\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Preheat_Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:PM10_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Max Chilled Water Differential Pressure Setpoint Limit?\nentitybrick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?limit WHERE { ?limit a brick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for  Air Humidity Sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Ceiling Fan belong to?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Ceiling_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to the Fire Sensor?\nentitybrick:Fire_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Fire_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Water Tank?\nentitybrick:Water_Tank",
    "target_text": "SELECT ?label ?definition WHERE { brick:Water_Tank rdfs:label ?label . brick:Water_Tank skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Temperature Sensor measure?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the rdfs:label value for NVR.\nentitybrick:NVR",
    "target_text": "SELECT ?label WHERE { brick:NVR rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Luminaires in the building?\nentitybrick:Luminaire",
    "target_text": "SELECT ?luminaire WHERE { ?luminaire a brick:Luminaire . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of Ethyl Alcohol /C2H5CH readings from Sensor 5.03 for sustainability reporting.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest CO2  reading from  CO2  sensor 5.04.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  PM10 particulate matter Level Sensor reading is sensor 5.05 reporting right now?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Overload_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for PM10 Sensor?\nentitybrick:PM10_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM10_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Combustible Gas Smoke MQ2 Sensor  readings from Sensor 5.04 help in predicting potential failures or recalibration needs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature low reset setpoint in the Cinema.\nentitybldg:Cinema \n brick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Chilled Water Differential Pressure Step Parameter.\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Air Lockout Temperature Setpoint.\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone air temperature reading for RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the Oxygen,O2 sensor 5.01 for yesterday?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Position Sensor extends.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Position_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there another name for the Effective Discharge Air Temperature Setpoint via aliasOf?\nentitybrick:Effective_Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Effective_Discharge_Air_Temperature_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Damper Position Status have?\nentitybrick:Damper_Position_Status",
    "target_text": "SELECT ?tag WHERE { brick:Damper_Position_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current humidity stats from sensor 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantity linked to the Return Air Enthalpy Sensor?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest Temperature measurement from  temperature Sensor 5.01.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the parent classes of Outside Air Temperature Enable Differential Sensor?\nentitybrick:Outside_Air_Temperature_Enable_Differential_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Enable_Differential_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings of Air Quality sensor 5.01 compared to its normal range?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.02 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Preheat Command.\nentitybrick:Preheat_Command",
    "target_text": "SELECT ?rule WHERE { brick:Preheat_Command sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for CO2 Concentration.\nentitybrick:CO2_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:CO2_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Outside Air Grains Sensor?\nentitybrick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Grains_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Static Pressure Setpoint?\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does an air temperature setpoint limit fall?\nentitybrick:Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?category WHERE { brick:Air_Temperature_Setpoint_Limit rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Active Power Sensor contribute to energy analysis?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Active_Power_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Formaldehyde Level Sensor in the Brick Schema?\nentitybrick:Formaldehyde_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Formaldehyde_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Cubicle?\nentitybrick:Cubicle",
    "target_text": "SELECT ?tag WHERE { brick:Cubicle brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all information associated with a Disable Fixed Temperature Command.\nentitybrick:Disable_Fixed_Temperature_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Disable_Fixed_Temperature_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of Supply Air Temperature Setpoint?\nentitybrick:Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Temperature_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor from room 5.05 and specify its type.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night Sound Noise loudness Sensor  variations as captured by Sensor 5.04?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the qudt:applicableUnit values for Power Factor?\nentitybrick:Power_Factor",
    "target_text": "SELECT ?unit WHERE { brick:Power_Factor qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Pressure Alarm?\nentitybrick:Pressure_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Pressure_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the zone air temperature setpoint for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for CO2  Sensor 5.04.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  Air Quality Level 5.03 hanging out?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Occupied Cooling Temperature Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving chilled water flow sensor in the Bar.\nentitybldg:Bar \n brick:Leaving_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Chilled_Water_Flow_Sensor ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What system falls under the Hot Water System category?\nentitybrick:Hot_Water_System",
    "target_text": "SELECT ?subsystem WHERE { ?subsystem rdfs:subClassOf brick:Hot_Water_System . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Discharge Air Temperature Setpoint?\nentitybrick:Discharge_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category ofSound Noise loudness Sensor  5.04.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature deadband setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Min Speed Setpoint Limit.\nentitybrick:Min_Speed_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Min_Speed_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Eye Wash Station?\nentitybrick:Eye_Wash_Station",
    "target_text": "SELECT ?label WHERE { brick:Eye_Wash_Station rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM1_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest Temperature measurement from temperature Sensor 5.04.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Cafeteria rdfs:subClassOf ?superclass . brick:Cafeteria brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone air damper command observed for RM107B in the last 30 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to an Active Power Sensor?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Active_Power_Sensor rdfs:subClassOf ?superclass . brick:Active_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of  Alcohol Vapor MQ3 Gas Sensor  5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the standard QUDT reference for atmospheric pressure?\nentitybrick:Atmospheric_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Atmospheric_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify whether Building specifies any sh:property values.\nentitybrick:Building",
    "target_text": "ASK { brick:Building sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor isFormaldehyde Level sensor 5.03?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Solar Radiance means.\nentitybrick:Solar_Radiance",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Radiance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Electrical Equipment a subclass of Equipment?\nentitybrick:Electrical_Equipment",
    "target_text": "ASK WHERE { brick:Electrical_Equipment rdfs:subClassOf brick:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'System' a tag for Water System?\nentitybrick:Water_System",
    "target_text": "ASK WHERE { brick:Water_System brick:hasAssociatedTag tag:System . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the source defining Cloudage in BrickSchema?\nentitybrick:Cloudage",
    "target_text": "SELECT ?source WHERE { brick:Cloudage rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Damper?\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Damper ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.02 Oxygen,O2 level and is it within expected ranges?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all rooms that are part of RM110.\nentitybrick:hasPart",
    "target_text": "SELECT ?room WHERE { bldg:RM110 brick:hasPart ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Enthalpy Setpoint?\nentitybrick:Enthalpy_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Enthalpy_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the measured quantity of the Speed Reset Command.\nentitybrick:Speed_Reset_Command",
    "target_text": "SELECT ?quantity WHERE { brick:Speed_Reset_Command brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What external resources describe an Active Power Sensor?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?reference WHERE { brick:Active_Power_Sensor rdfs:seeAlso ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Entering Condenser Water Flow Sensor inherit from?\nentitybrick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Condenser_Water_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to   CO  Sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with Entering Water Flow Sensor?\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using humidity sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you count the number of constraints applied to direction status?\nentitybrick:Direction_Status",
    "target_text": "SELECT (COUNT(?rule) AS ?rule_count) WHERE { brick:Direction_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What property is the inverse of isPartOf?\nentitybrick:isPartOf",
    "target_text": "SELECT ?inverse WHERE { brick:isPartOf owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader concept of Radiant Temperature?\nentitybrick:Radiant_Temperature",
    "target_text": "SELECT ?broader WHERE { brick:Radiant_Temperature skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'High' one of the tags for Supply Air Flow High Reset Setpoint?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag tag:High . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.20?\nentitybldg:mqthree5.20",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.20 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given toCombustible Gas Smoke MQ2 Sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Air Humidity Sensor 5.03 is placed.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Energy System have?\nentitybrick:Energy_System",
    "target_text": "SELECT ?tag WHERE { brick:Energy_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  CO2  sensor5.05 is in use and what is its installation spot?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in  NO2 Sensor 5.02's data over the last month?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Leaving Hot Water Temperature High Reset Setpoint have a brick:hasQuantity or brick:hasSubstance reference?\nentitybrick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint brick:hasQuantity ?quantity ; brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Ethyl Alcohol /C2H5CH sensor 5.03 is in use and what is its installation spot?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the rdfs:label value for Min Temperature Setpoint Limit.\nentitybrick:Min_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Temperature_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where NO2 Sensor 5.04 is placed.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for ratedVoltageOutput?\nentitybrick:ratedVoltageOutput",
    "target_text": "SELECT ?label WHERE { brick:ratedVoltageOutput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.01 is in use and what is its installation spot?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which more detailed term is associated with Radioactivity Concentration?\nentitybrick:Radioactivity_Concentration",
    "target_text": "SELECT ?narrower WHERE { brick:Radioactivity_Concentration skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the luminance setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Luminance_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Luminance_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Water Level Sensor.\nentitybrick:Water_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Water_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Entering Medium Temperature Hot Water Temperature Load Shed Setpoint.\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.05 and its installation location.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Leaving Medium Temperature Hot Water Temperature High Reset Setpoint contribute to system efficiency?\nentitybrick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.04's CO2  output contribute to the overall building  quality index?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Surveillance Camera.\nentitybrick:Surveillance_Camera",
    "target_text": "SELECT ?tag WHERE { brick:Surveillance_Camera brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Supply Air Integral Gain Parameter?\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Integral_Gain_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Zone Air Temperature Setpoint?\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the High Outside Air Lockout Temperature Differential Parameter control?\nentitybrick:High_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:High_Outside_Air_Lockout_Temperature_Differential_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me some recorded values of Year Built.\nentitybrick:yearBuilt",
    "target_text": "SELECT ?value WHERE { ?entity brick:yearBuilt ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What textual description is given to a Chilled Water Differential Pressure Step Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using humidity sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Min Unoccupied Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Min_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Min_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the max hot water differential pressure setpoint limit defined in the system?\nentitybrick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?limit WHERE { ?limit a brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Outside Air Enthalpy Sensor inherit?\nentitybrick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Enthalpy_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which VAV unit contains damperVAVRM103?\nentitybrick:isPartOf",
    "target_text": "SELECT ?system WHERE { bldg:damperVAVRM103 brick:isPartOf ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Standby Unit On Off Status represents.\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Standby_Unit_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Outside Air Flow Setpoint.\nentitybrick:Outside_Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for   CO2  Sensor 5.02.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Correlate the humidity readings of  Air Humidity Sensor 5.01 with indoor air quality metrics.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Zone Air Heating Temperature Setpoint?\nentitybrick:Zone_Air_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Occupancy Count Sensor.\nentitybrick:Occupancy_Count_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Occupancy_Count_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Condenser Water Pump used?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Max Unoccupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the load shed setpoint in the Kitchen.\nentitybldg:Kitchen \n brick:Load_Shed_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Load_Shed_Setpoint ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label forFormaldehyde Level sensor 5.02.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for   TVOC  Sensor 5.05?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge hot water temperature setpoint in the Art Room.\nentitybldg:Art_Room \n brick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Terminal Unit mean?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Terminal_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Luminance means.\nentitybrick:Luminance",
    "target_text": "SELECT ?definition WHERE { brick:Luminance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter water differential pressure sensor in the Library.\nentitybldg:Library \n brick:Filter_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Return Air CO Sensor.\nentitybrick:Return_Air_CO_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_CO_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for   TVOC  Sensor 5.05.\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with RM107A?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM107A brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone supply air flow reading for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Outside Air Voltage Sensor?\nentitybrick:Output_Voltage_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Output_Voltage_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label of the Mixed Air Filter?\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?label WHERE { brick:Mixed_Air_Filter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Light Command categorized using tags?\nentitybrick:Light_Command",
    "target_text": "SELECT ?tag WHERE { brick:Light_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units are used for Ammonia Concentration?\nentitybrick:Ammonia_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:Ammonia_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.03's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve every property of the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  Air Quality sensor 5.01 and its installation location.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for PM1 particulate matter Level Sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current operational setting of the zone air temperature setpoint in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Entering Medium Temperature Hot Water Temperature Low Reset Setpoint measure?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.04's data deviates from our smart building standards?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is  Alcohol Vapor MQ3 Gas Sensor  5.02?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Condenser Heat Exchanger fall?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Heat_Exchanger rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Min Hot Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Condenser Water Valve.\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Occupied Cooling Supply Air Flow Setpoint?\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the reason for deprecating Hot Water Discharge Temperature Sensor?\nentitybrick:Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?message WHERE { brick:Hot_Water_Discharge_Temperature_Sensor brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Output Voltage Sensor.\nentitybrick:Output_Voltage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Output_Voltage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for  Air Quality Level from 5.02?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the associated tags for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the run request status in the Workshop.\nentitybldg:Workshop \n brick:Run_Request_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Run_Request_Status ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label and definition of Demand Setpoint?\nentitybrick:Demand_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Demand_Setpoint rdfs:label ?label; skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the seeAlso link for Setpoint.\nentitybrick:Setpoint",
    "target_text": "SELECT ?seeAlso WHERE { brick:Setpoint rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.04 based on its Sound Noise loudness Sensor  data logs?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Entering Water Temperature Integral Time Parameter labeled in the ontology?\nentitybrick:Entering_Water_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Liquid means.\nentitybrick:Liquid",
    "target_text": "SELECT ?definition WHERE { brick:Liquid skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Mixed Air Humidity Sensor.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Mixed_Air_Humidity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Hot Water Differential Pressure Sensor?\nentitybrick:Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Hot_Water_Differential_Pressure_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Embedded Surface System Panel.\nentitybrick:Embedded_Surface_System_Panel",
    "target_text": "SELECT ?tag WHERE { brick:Embedded_Surface_System_Panel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is  Air temperature Sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Heating Ventilation Air Conditioning System includes the tag 'Ventilation'.\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "ASK WHERE { brick:Heating_Ventilation_Air_Conditioning_System brick:hasAssociatedTag tag:Ventilation . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Failure Alarm.\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Failure_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is   TVOC  Sensor 5.03?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Disable Command?\nentitybrick:Disable_Command",
    "target_text": "SELECT ?label WHERE { brick:Disable_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Min Hot Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Cooling Command?\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.52?\nentitybldg:mqthree5.52",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.52 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Video Intercom?\nentitybrick:Video_Intercom",
    "target_text": "SELECT ?parent WHERE { brick:Video_Intercom rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rule set for the Return Air Plenum.\nentitybrick:Return_Air_Plenum",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Plenum sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Outside Damper.\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?rule WHERE { brick:Outside_Damper sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . brick:Acceleration_Time_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in  CO2  Sensor 5.03's data over the last month?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  TVOC  sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Radon Concentration Sensor?\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Radon_Concentration_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which parameter is monitored by the Air Grains Sensor?\nentitybrick:Air_Grains_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Air_Grains_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the  Air Quality sensor stats from Sensor 5.04 and tell me if it's on point with our green goals.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which TVOC  sensor is deployed in room 5.02 and what is its kind?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a definition for Vertical Space?\nentitybrick:Vertical_Space",
    "target_text": "ASK { brick:Vertical_Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Low Outside Air Lockout Temperature Differential Parameter categorized using tags?\nentitybrick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if isSubMeterOf is an asymmetric property.\nentitybrick:isSubMeterOf",
    "target_text": "ASK WHERE { brick:isSubMeterOf a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Outside Air Lockout Temperature Setpoint?\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Energy Usage Sensor?\nentitybrick:Energy_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Energy_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Load' a tag associated with Load Shed Status?\nentitybrick:Load_Shed_Status",
    "target_text": "ASK WHERE { brick:Load_Shed_Status brick:hasAssociatedTag tag:Load . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average discharge air flow sensor in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Average_Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Discharge_Air_Flow_Sensor ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Outside?\nentitybrick:Outside",
    "target_text": "SELECT ?tag WHERE { brick:Outside brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone supply air temperature for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent  Air Quality Level data available from Sensor 5.01?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Max Occupied Heating Supply Air Flow Setpoint Limit a type of Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What parameter does a water temperature sensor track?\nentitybrick:Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Overload Alarm refer to?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Overload_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label, definition, and units of CurrentAngle?\nentitybrick:Current_Angle",
    "target_text": "SELECT ?label ?definition ?unit WHERE { brick:Current_Angle rdfs:label ?label . brick:Current_Angle skos:definition ?definition . brick:Current_Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is a Ceiling Fan, and what tags are linked to it?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Ceiling_Fan rdfs:subClassOf ?superclass . brick:Ceiling_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many supply air temperature readings were recorded in AHU 02 today?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the TVOC  sensor 5.01 for yesterday?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Service Room?\nentitybrick:Service_Room",
    "target_text": "SELECT ?tag WHERE { brick:Service_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an air flow demand setpoint?\nentitybrick:Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Demand_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Differential Pressure Integral Time Parameter?\nentitybrick:Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Differential_Pressure_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Chilled Water Differential Pressure Integral Time Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which dimension vector is defined for FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?dimVector WHERE { brick:Formaldehyde_Concentration qudt:hasDimensionVector ?dimVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Thermostat?\nentitybrick:Thermostat",
    "target_text": "SELECT ?parent WHERE { brick:Thermostat rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Hot Water System Enable Command define in BrickSchema?\nentitybrick:Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Hot_Water_System_Enable_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.54 located?\nentitybldg:cotwo5.54",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.54 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02 located in?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples associated with the Discharge Air Temperature Alarm.\nentitybrick:Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Acceleration_Time_Setpoint rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Failure Alarm?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Failure_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current sensor reading for the zone air control temperature setpoint in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Supply Air Temperature Alarm means.\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of Formaldehyde Level sensor readings from Sensor 5.01 for sustainability reporting.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Condensing Natural Gas Boiler?\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?tag WHERE { brick:Condensing_Natural_Gas_Boiler brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the LPG Natural Gas Town MQ5 Gas Sensor  readings from Sensor 5.05 have triggered any automated health alerts recently.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Photovoltaic Current Output Sensor include the tag 'PV'?\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "ASK WHERE { brick:Photovoltaic_Current_Output_Sensor brick:hasAssociatedTag tag:PV . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air damper command measurement for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Entering Water Flow Sensor include Water Flow Sensor?\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Entering_Water_Flow_Sensor rdfs:subClassOf brick:Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is  Alcohol Vapor MQ3 Gas Sensor  5.03?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Transformer Room.\nentitybrick:Transformer_Room",
    "target_text": "SELECT ?label ?definition WHERE { brick:Transformer_Room rdfs:label ?label . brick:Transformer_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is the Humidifier?\nentitybrick:Humidifier",
    "target_text": "SELECT ?parent WHERE { brick:Humidifier rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which Alcohol Vapor MQ3 Gas Sensor  is in room 5.04 and what sensor class it belongs to?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Stage Enable Command.\nentitybrick:Stage_Enable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Stage_Enable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Velocity Pressure Sensor include Discharge Air Velocity Pressure Sensor?\nentitybrick:Supply_Air_Velocity_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Velocity_Pressure_Sensor owl:equivalentClass brick:Discharge_Air_Velocity_Pressure_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the source that defines Precipitation.\nentitybrick:Precipitation",
    "target_text": "SELECT ?resource WHERE { brick:Precipitation rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what a Fresh Air Fan is?\nentitybrick:Fresh_Air_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Fresh_Air_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Broadcast Room?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?tag WHERE { brick:Broadcast_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Overridden_On_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Service Room call itself?\nentitybrick:Service_Room",
    "target_text": "SELECT ?label WHERE { brick:Service_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air humidity sensor in the Cafeteria.\nentitybldg:Cafeteria \n brick:Return_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Humidity_Sensor ; brick:hasLocation bldg:Cafeteria ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.01 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a CO Differential Sensor.\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:CO_Differential_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader category does PM2.5Concentration belong to?\nentitybrick:PM2",
    "target_text": "SELECT ?broader WHERE { brick:PM2.5_Concentration skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Air Humidity Sensor 5.02 positioned?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to damperVAVRM103.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:damperVAVRM103 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Max Supply Air Temperature Setpoint Limit?\nentitybrick:Max_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Supply_Air_Temperature_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Electric Energy Sensor have?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Energy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?definition WHERE { brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an AHU?\nentitybrick:AHU",
    "target_text": "SELECT ?definition WHERE { brick:AHU skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which subclasses does Max Speed Setpoint Limit have?\nentitybrick:Max_Speed_Setpoint_Limit",
    "target_text": "SELECT ?subclass WHERE { brick:Max_Speed_Setpoint_Limit rdfs:subClassOf ?subclass. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.03 for the past week and show me a summary.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.02's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurements over the last quarter.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Supply Fan have?\nentitybrick:Supply_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is CO  Sensor 5.02 positioned?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Chilled Water Differential Pressure Sensor?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Bus Riser enhance electrical distribution?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?superclass WHERE { brick:Bus_Riser rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  CO2  Sensor 5.02 and its impact on indoor sustainability.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for  Air Quality Level 5.02 over the last six months?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Booster Fan?\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Booster_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the Sound Noise loudness Sensor  data from Sensor 5.04 for the past year.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqnine5.26?\nentitybldg:mqnine5.26",
    "target_text": "SELECT ?room WHERE { bldg:mqnine5.26 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the current control value for the zone reheat valve in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if Leaving Water has Leaving Chilled Water as a subcategory.\nentitybrick:Leaving_Water",
    "target_text": "ASK { brick:Leaving_Water skos:narrower brick:Leaving_Chilled_Water . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What class does Run Time Sensor refer to as an alias?\nentitybrick:Run_Time_Sensor",
    "target_text": "SELECT ?alias WHERE { brick:Run_Time_Sensor brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.24?\nentitybldg:airq5.24",
    "target_text": "SELECT ?room WHERE { bldg:airq5.24 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Location?\nentitybrick:Location",
    "target_text": "SELECT ?tag WHERE { brick:Location brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Outside Air Lockout Temperature Differential Parameter call itself?\nentitybrick:Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Lockout_Temperature_Differential_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Operational Stage Count categorized?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?category WHERE { brick:operationalStageCount rdf:type ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency for our sensors in the smart home related to humity in 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Transformer?\nentitybrick:Transformer",
    "target_text": "SELECT ?label ?definition WHERE { brick:Transformer rdfs:label ?label . brick:Transformer skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Ethyl Alcohol /C2H5CH data by Sensor 5.05?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if the tag 'Integral' is associated with Supply Air Integral Gain Parameter?\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Integral_Gain_Parameter brick:hasAssociatedTag tag:Integral . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature low reset setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.05's humidity readings align with our smart building's sustainability KPIs?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current operational heating command for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Wing explained?\nentitybrick:Wing",
    "target_text": "SELECT ?definition WHERE { brick:Wing skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average discharge air flow sensor in the south side.\nentitybldg:south-side \n brick:Average_Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Discharge_Air_Flow_Sensor ; brick:hasLocation bldg:south-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM10 particulate matter Level Sensor is deployed in room 5.04 and what is its kind?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many outside air temperature measurements were recorded for AHU 01 during the evening period today?\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04 set up at?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Discharge Air Temperature High Reset Setpoint?\nentitybrick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_High_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units associated with NO2 Concentration.\nentitybrick:NO2_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:NO2_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  temperature Sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.04 measuring Oxygen,O2 at the moment?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Limit do?\nentitybrick:Limit",
    "target_text": "SELECT ?definition WHERE { brick:Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What medium does the Entering Condenser Water Temperature Setpoint regulate?\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is CO  Sensor 5.04 located in?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which measurement units for Pressure contain 'BAR' in their name?\nentitybrick:Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Pressure qudt:applicableUnit ?unit . FILTER(regex(str(?unit), \"BAR\", \"i\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Energy?\nentitybrick:Energy",
    "target_text": "SELECT ?label WHERE { brick:Energy rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Underfloor Air Plenum Static Pressure Setpoint.\nentitybrick:Underfloor_Air_Plenum_Static_Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Setpoint' a tag for Water Flow Sensor?\nentitybrick:Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Water_Flow_Sensor brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the power sensor in the Zone B.\nentitybldg:Zone B \n brick:Power_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Power_Sensor ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.05's Sound Noise loudness Sensor  analytics in relation to system sustainability?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling supply air flow setpoint in the Reading Room.\nentitybldg:Reading_Room \n brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Reading_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Zone Air Temperature Setpoint.\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Outside Air Enthalpy Sensor?\nentitybrick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Enthalpy_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Thermostat Status?\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Thermostat_Status rdfs:label ?label . brick:Thermostat_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Relay Command refer to?\nentitybrick:Relay_Command",
    "target_text": "SELECT ?definition WHERE { brick:Relay_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Min Heating Supply Air Flow Setpoint Limit related to Min Air Flow Setpoint Limit?\nentitybrick:Min_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Ice Tank Leaving Water Temperature Sensor?\nentitybrick:Ice_Tank_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ice_Tank_Leaving_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What material is monitored by an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the NO2 measurements from sensor5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the declared label for Electric Power?\nentitybrick:Electric_Power",
    "target_text": "SELECT ?label WHERE { brick:Electric_Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Tint Command.\nentitybrick:Tint_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Tint_Command rdfs:label ?label . brick:Tint_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of   CO  Sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Occupied Air Temperature Cooling Setpoint?\nentitybrick:Occupied_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Air_Temperature_Cooling_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from Illuminance Sensor 5.04 for a specific date, for example 2025-02-15.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the Formaldehyde Level sensor 5.04 along with its location in the building.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there another name used by the Elevator Space via aliasOf?\nentitybrick:Elevator_Space",
    "target_text": "SELECT ?alias WHERE { brick:Elevator_Space brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date Sound Noise loudness Sensor  level from sensor 5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has pir5.29?\nentitybldg:pir5.29",
    "target_text": "SELECT ?room WHERE { bldg:pir5.29 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units are applicable for angle measurement?\nentitybrick:Angle",
    "target_text": "SELECT ?unit WHERE { brick:Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label assigned to Motor?\nentitybrick:Motor",
    "target_text": "SELECT ?label WHERE { brick:Motor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Inside Face Surface Temperature Sensor a type of radiant panel sensor?\nentitybrick:Inside_Face_Surface_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Inside_Face_Surface_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the classes that the Unoccupied Room Air Temperature Setpoint extends.\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Room_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.03 to compute an overall LPG Natural Gas Town MQ5 Gas Sensor  index.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification includes the Hot Water Coil?\nentitybrick:Hot_Water_Coil",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Coil rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the active power sensor in the Reception.\nentitybldg:Reception \n brick:Active_Power_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Active_Power_Sensor ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the  Illuminance Sensor readings from Sensor 5.01 help in predicting potential failures or recalibration needs?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Motor Control Center.\nentitybrick:Motor_Control_Center",
    "target_text": "SELECT ?definition WHERE { brick:Motor_Control_Center skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Low Return Air Temperature Alarm indicate?\nentitybrick:Low_Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Low_Return_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Riser.\nentitybrick:Riser",
    "target_text": "SELECT ?parent WHERE { brick:Riser rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Supply' one of the tags for Supply Air Temperature Step Parameter?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current Ethyl Alcohol /C2H5CH values from Sensor 5.04 compare with historical averages?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is Air Quality sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Alcohol Vapor MQ3 Gas Sensor  5.02 over the last six months?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Steam Usage Sensor measures.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Angle Sensor.\nentitybrick:Angle_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Angle_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Cooling Demand Setpoint belong to?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Demand_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Chilled Water Pump?\nentitybrick:Chilled_Water_Pump",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Pump rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the applicable units for Ozone Concentration.\nentitybrick:Ozone_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:Ozone_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of NO2 fluctuations recorded by Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.39?\nentitybldg:oxy5.39",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.39 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Air Quality Level 5.01 chillin' in the building?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the differential pressure step parameter described in BrickSchema?\nentitybrick:Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?name WHERE { brick:Differential_Pressure_Step_Parameter rdfs:label ?name . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned name for an air wet bulb temperature sensor?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from Ethyl Alcohol /C2H5CH  Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Differential Pressure Setpoint?\nentitybrick:Differential_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Differential_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Electric Radiator.\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Supply Air Flow Setpoint.\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the outside air temperature sensor for AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Outside_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Limit' one of the tags for Min Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label forFormaldehyde Level sensor 5.03.\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air dewpoint sensor in the north side.\nentitybldg:north-side \n brick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Dewpoint_Sensor ; brick:hasLocation bldg:north-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.04 LPG Natural Gas Town MQ5 Gas Sensor  level and is it within expected ranges?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.04 and tell me its class.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to the Low Suction Pressure Alarm.\nentitybrick:Low_Suction_Pressure_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Low_Suction_Pressure_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Power Sensor.\nentitybrick:Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.02 Sound Noise loudness Sensor  level and is it within expected ranges?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is Air Quality Level 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Min Water Temperature Setpoint?\nentitybrick:Min_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Min_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Blind Group described using tags?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?tag WHERE { brick:Blind_Group brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Deionized Water Alarm?\nentitybrick:Deionized_Water_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Deionized_Water_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Refrigerant_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM1_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of the Filter Differential Pressure Sensor?\nentitybrick:Filter_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Filter_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me which quantity is measured by the Water Differential Temperature Sensor.\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Differential_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Portfolio?\nentitybrick:Portfolio",
    "target_text": "SELECT ?property ?value WHERE { brick:Portfolio ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.05's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air control temperature setpoint value for RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Pre Filter.\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?property ?value WHERE { brick:Pre_Filter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the underfloor air plenum static pressure sensor in the Atrium.\nentitybldg:Atrium \n brick:Underfloor_Air_Plenum_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Underfloor_Air_Plenum_Static_Pressure_Sensor ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does Luminous Intensity define in BrickSchema?\nentitybrick:Luminous_Intensity",
    "target_text": "SELECT ?property ?value WHERE { brick:Luminous_Intensity ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for Air Quality Level 5.05.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the substance associated with Air Differential Pressure Sensor?\nentitybrick:Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Air_Differential_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Banquet Hall.\nentitybldg:Banquet_Hall \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Banquet_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Hot Water Radiator's purpose?\nentitybrick:Hot_Water_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Entering Chilled Water Temperature Setpoint's purpose?\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Low Outside Air Temperature Enable Differential Sensor play in HVAC?\nentitybrick:Low_Outside_Air_Temperature_Enable_Differential_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Low_Outside_Air_Temperature_Enable_Differential_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Rain Duration Sensor.\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Rain_Duration_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me Sound Noise loudness Sensor  trends and their variation over the last 24 hours in room or sensor 5.02.\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurement from   Sensor 5.04.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality sensor reading is sensor 5.05 reporting right now?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Natural Gas Flow Sensor have?\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Natural_Gas_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Oxygen,O2 Sensor 5.01 installed?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out which measurement units of Enthalpy are indicated by 'W-HR'.\nentitybrick:Enthalpy",
    "target_text": "SELECT ?unit WHERE { brick:Enthalpy qudt:applicableUnit ?unit . FILTER(regex(str(?unit), \"W-HR\", \"i\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Electric Energy Sensor.\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Energy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Entering High Temperature Hot Water Temperature Sensor has in BrickSchema.\nentitybrick:Entering_High_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_High_Temperature_Hot_Water_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What setpoint is currently applied to the zone air control temperature in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Reheat Valve.\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?label WHERE { brick:Reheat_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the function of the Entrance in the building.\nentitybrick:Entrance",
    "target_text": "SELECT ?definition WHERE { brick:Entrance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details on the humidity sensor in 5.04, including its category.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me an extensive overview of all attributes of a Building Chilled Water Meter.\nentitybrick:Building_Chilled_Water_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Building_Chilled_Water_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What properties does a Differential Pressure Bypass Valve have?\nentitybrick:Differential_Pressure_Bypass_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Differential_Pressure_Bypass_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Water Flow Sensor.\nentitybrick:Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Unoccupied Heating Supply Air Flow Setpoint.\nentitybrick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Zone Air Conditioning Mode Status?\nentitybrick:Zone_Air_Conditioning_Mode_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_Air_Conditioning_Mode_Status rdfs:label ?label . brick:Zone_Air_Conditioning_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the official label for Supply Air.\nentitybrick:Supply_Air",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Min Speed Setpoint Limit?\nentitybrick:Min_Speed_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Speed_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Fault Status?\nentitybrick:Fault_Status",
    "target_text": "SELECT ?label WHERE { brick:Fault_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night  PM2.5 particulate matter Level Sensor variations as captured by Sensor 5.05?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes a Booster Fan from other HVAC fans?\nentitybrick:Booster_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Booster_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings from Sensor 5.02 help in predicting potential failures or recalibration needs?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Chilled Water Loop?\nentitybrick:Chilled_Water_Loop",
    "target_text": "SELECT ?rule WHERE { brick:Chilled_Water_Loop sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Manual Fire Alarm Activation Equipment call itself?\nentitybrick:Manual_Fire_Alarm_Activation_Equipment",
    "target_text": "SELECT ?label WHERE { brick:Manual_Fire_Alarm_Activation_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Condenser Water System?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Chilled Water Temperature Setpoint.\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative return air temperature change for AHU 02 in the past week?\nentitybldg:bldg1.AHU.AHU02.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for an Active Power Sensor?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Active_Power_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the QUDT reference for Voltage?\nentitybrick:Voltage",
    "target_text": "SELECT ?reference WHERE { brick:Voltage brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Dry Cooler do?\nentitybrick:Dry_Cooler",
    "target_text": "SELECT ?definition WHERE { brick:Dry_Cooler skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substance considered by Room Air Temperature Setpoint.\nentitybrick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Room_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Duct Pressure Status has the tag 'Pressure'?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "ASK WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag tag:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for  Air Humidity Sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Outside Air Temperature High Reset Setpoint?\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Static Pressure means.\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?definition WHERE { brick:Static_Pressure skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all data linked to the Discharge Air Temperature Deadband Setpoint in BrickSchema.\nentitybrick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone reheat valve command for RM107A over the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.05 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Overload Alarm?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Overload_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone air temperature in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak supply air temperature reading for AHU 02 on the previous day?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is measured by Supply Air Flow Sensor?\nentitybrick:Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor isCombustible Gas Smoke MQ2 Sensor 5.02?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the  Air Quality sensor data for Sensor 5.04?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Weather Station inherit?\nentitybrick:Weather_Station",
    "target_text": "SELECT ?parent WHERE { brick:Weather_Station rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What parameter does an air wet bulb temperature sensor track?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Steam Distribution inherit?\nentitybrick:Steam_Distribution",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Distribution rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name forCombustible Gas Smoke MQ2 Sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the description of Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Heating Supply Air Flow Setpoint include the tag 'Unoccupied'?\nentitybrick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Unoccupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Motor labeled?\nentitybrick:Motor",
    "target_text": "SELECT ?label WHERE { brick:Motor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading from  Air Quality Level 5.02?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label associated with the Fume Hood Air Flow Sensor?\nentitybrick:Fume_Hood_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Fume_Hood_Air_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Deadband Setpoint means.\nentitybrick:Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the  quality index for the lobby area using CO  sensor 5.02.\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Zone Air Temperature Sensor.\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded zone supply air temperature events for RM107A during the last weekend.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the zone air damper command summary for RM107A for yesterday afternoon?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average CO  level recorded by  CO  Sensor 5.02 over the past 24 hours?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Chilled Water Differential Pressure Integral Time Parameter is incorrectly configured?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated quantity for the Reactive Power Sensor?\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Reactive_Power_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Relief Damper.\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?property ?value WHERE { brick:Relief_Damper ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Natural Gas Flow Sensor?\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Natural_Gas_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Core Temperature Sensor used?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Core_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Heating Thermal Power Sensor.\nentitybrick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Thermal_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Formaldehyde Level sensor readings from Sensor 5.01?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air humidity setpoint in the Lawn.\nentitybldg:Lawn \n brick:Exhaust_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Humidity_Setpoint ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Low Air Flow Alarm define in BrickSchema?\nentitybrick:Low_Air_Flow_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Low_Air_Flow_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does VAV represent?\nentitybrick:VAV",
    "target_text": "SELECT ?definition WHERE { brick:VAV skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak zone heating mode command value for RM107B on the previous day?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the descriptive text that BrickSchema provides for the Electrical Meter.\nentitybrick:Electrical_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Electrical_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Pre Filter.\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?rule WHERE { brick:Pre_Filter sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Condenser Water System?\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does   CO2  Sensor 5.02 have?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Vent Operating Mode Status.\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?parent WHERE { brick:Vent_Operating_Mode_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality sensor is deployed in room 5.02 and what is its kind?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Temperature sensor 5.03.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the TVOC  sensor located in room 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . bldg:TVOC_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to  Air Humidity Sensor 5.05?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Conference Room fit into?\nentitybrick:Conference_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Conference_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Thermostat?\nentitybrick:Thermostat",
    "target_text": "SELECT ?label WHERE { brick:Thermostat rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Telecom Room?\nentitybrick:Telecom_Room",
    "target_text": "SELECT ?tag WHERE { brick:Telecom_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Water Meter.\nentitybrick:Water_Meter",
    "target_text": "SELECT ?label WHERE { brick:Water_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Speed Status described?\nentitybrick:Speed_Status",
    "target_text": "SELECT ?label WHERE { brick:Speed_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  PM10 particulate matter Level Sensor data from Sensor 5.03.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Mode Status include Mode Status?\nentitybrick:Unoccupied_Mode_Status",
    "target_text": "ASK WHERE { brick:Unoccupied_Mode_Status rdfs:subClassOf brick:Mode_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in Alcohol Vapor MQ3 Gas Sensor  levels from Sensor 5.04 over the last three months?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Close Limit?\nentitybrick:Close_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Close_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Combustible Gas Smoke MQ2 Sensor  data by Sensor 5.04?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest  PM10 particulate matter Level Sensor data for 5.01.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is  Air temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe a Gatehouse?\nentitybrick:Gatehouse",
    "target_text": "SELECT ?definition WHERE { brick:Gatehouse skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Relative Humidity Sensor?\nentitybrick:Relative_Humidity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Relative_Humidity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the qudt:applicableUnit values for Solar Irradiance?\nentitybrick:Solar_Irradiance",
    "target_text": "SELECT ?unit WHERE { brick:Solar_Irradiance qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Elevator Shaft inherit?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?parent WHERE { brick:Elevator_Shaft rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the full information for CurrentImbalance, DDAHU, and Dedicated Outdoor Air System Unit including their labels, definitions, units, and references.\nentitybrick:Current_Imbalance",
    "target_text": "SELECT ?point ?label ?definition WHERE { { brick:Current_Imbalance rdfs:label ?label . brick:Current_Imbalance skos:definition ?definition . BIND(\"CurrentImbalance\" AS ?point) } UNION { brick:DDAHU rdfs:label ?label . brick:DDAHU skos:definition ?definition . BIND(\"DDAHU\" AS ?point) } UNION { brick:Dedicated_Outdoor_Air_System_Unit rdfs:label ?label . brick:Dedicated_Outdoor_Air_System_Unit skos:definition ?definition . BIND(\"DedicatedOutdoorAirSystemUnit\" AS ?point) } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Chilled Water Static Pressure Setpoint used?\nentitybrick:Chilled_Water_Static_Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Static_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Hallway.\nentitybldg:Hallway \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the units associated with CurrentImbalance.\nentitybrick:Current_Imbalance",
    "target_text": "SELECT ?unit WHERE { brick:Current_Imbalance qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Reactive Energy Sensor have?\nentitybrick:Reactive_Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Reactive_Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Drench Hose function?\nentitybrick:Drench_Hose",
    "target_text": "SELECT ?definition WHERE { brick:Drench_Hose skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Enable Status.\nentitybrick:Enable_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Enable_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current reading from the zone air temperature sensor in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which text label is provided for Media Production Room?\nentitybrick:Media_Production_Room",
    "target_text": "SELECT ?label WHERE { brick:Media_Production_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you check if CO Sensor is a subclass of another class?\nentitybrick:CO_Sensor",
    "target_text": "ASK { brick:CO_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Differential Pressure Sensor.\nentitybrick:Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector for NO2 Concentration?\nentitybrick:NO2_Concentration",
    "target_text": "SELECT ?vector WHERE { brick:NO2_Concentration qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Load Setpoint?\nentitybrick:Load_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Load_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Occupied Heating Temperature Deadband Setpoint refer to?\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Inside Face Surface Temperature Setpoint fall?\nentitybrick:Inside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Inside_Face_Surface_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the higher-level concepts that relate to Enthalpy.\nentitybrick:Enthalpy",
    "target_text": "SELECT ?broader WHERE { brick:Enthalpy skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Gas Valve?\nentitybrick:Gas_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Gas_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the flow sensor in the Lobby.\nentitybldg:Lobby \n brick:Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Flow_Sensor ; brick:hasLocation bldg:Lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the High Outside Air Lockout Temperature Differential Parameter?\nentitybrick:High_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:High_Outside_Air_Lockout_Temperature_Differential_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Leaving Water Temperature Integral Time Parameter play in HVAC?\nentitybrick:Leaving_Water_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Temperature_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Has part.\nentitybrick:hasPart",
    "target_text": "SELECT ?definition WHERE { brick:hasPart skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Exhaust Air Static Pressure Proportional Band Parameter?\nentitybrick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Ethyl Alcohol /C2H5CH sensor installed in room 5.04 and what type is it?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Occupancy Count Sensor have?\nentitybrick:Occupancy_Count_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Occupancy_Count_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas is deployed in room 5.05 and what is its kind?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on Air Humidity Sensor 5.02's performance compared to industry benchmarks.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Reactive Power Sensor?\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Reactive_Power_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Differential Temperature.\nentitybrick:Differential_Temperature",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Temperature skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.16?\nentitybldg:cotwo5.16",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.16 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Differential Speed Setpoint.\nentitybrick:Differential_Speed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Differential_Speed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Supply Air Temperature Setpoint extends.\nentitybrick:Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for PM2.5 particulate matter Level Sensor 5.02.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Absolute Humidity Sensor measure and what substance does it monitor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all zone air damper command readings for RM107A this morning?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Dual Duct Air Handling Unit inherit?\nentitybrick:Dual_Duct_Air_Handling_Unit",
    "target_text": "SELECT ?parent WHERE { brick:Dual_Duct_Air_Handling_Unit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags come with Demand Setpoint?\nentitybrick:Demand_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Demand_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 readings from yesterday.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.03 of CO ?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Mixed Air Temperature Setpoint?\nentitybrick:Mixed_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What version marks the deprecation of Return Water Flow Sensor?\nentitybrick:Return_Water_Flow_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Return_Water_Flow_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.56 located?\nentitybldg:mqtwo5.56",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.56 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the System Shutdown Status means.\nentitybrick:System_Shutdown_Status",
    "target_text": "SELECT ?definition WHERE { brick:System_Shutdown_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the min air temperature setpoint in the Corridor.\nentitybldg:Corridor \n brick:Min_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Min_Air_Temperature_Setpoint ; brick:hasLocation bldg:Corridor ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass for Status.\nentitybrick:Status",
    "target_text": "SELECT ?parent WHERE { brick:Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:PM10_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Ozone_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the substance associated with Supply Air Differential Pressure Setpoint?\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Differential_Pressure_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which Alcohol Vapor MQ3 Gas Sensor  is in room 5.05 and what sensor class it belongs to?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Touchpanel.\nentitybrick:Touchpanel",
    "target_text": "SELECT ?label WHERE { brick:Touchpanel rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality Level reading is sensor 5.01 reporting right now?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Ozone_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Combustible Gas Smoke MQ2 Sensor  values from sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.01's data deviates from our smart building standards?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to   TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.01's  Air Quality sensor output compare with other sensors in the building?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Hot Water Flow Sensor?\nentitybrick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Entering Condenser Water Flow Sensor.\nentitybrick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Condenser_Water_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Emergency Generator Alarm?\nentitybrick:Emergency_Generator_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Generator_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Air?\nentitybrick:Air",
    "target_text": "SELECT ?label WHERE { brick:Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the equivalent class of the Elevator Shaft.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current status of the heating mode in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.03 in the building?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What insights can we draw from Sensor 5.04's data regarding energy consumption and HVAC efficiency?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of NO2 Sensor 5.05 compare to our baseline standards?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Return Air Enthalpy Sensor a subclass of?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_Enthalpy_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what Heating Temperature Setpoint does?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum zone air temperature setpoint readings for RM107A from this morning.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Temperature sensor is set up in room 5.02, and what category does it fall under?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Concession fall?\nentitybrick:Concession",
    "target_text": "SELECT ?superclass WHERE { brick:Concession rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Power Factor Sensor?\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Power_Factor_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for NO2 Sensor 5.02.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only  Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Imbalance Sensor means.\nentitybrick:Imbalance_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Imbalance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units does Pressure support?\nentitybrick:Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.04 measuring CO2  at the moment?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Air Quality?\nentitybrick:Air_Quality",
    "target_text": "SELECT ?label WHERE { brick:Air_Quality rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the quantity for the Occupancy Sensor.\nentitybrick:Occupancy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Occupancy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the narrower terms for Occupancy.\nentitybrick:Occupancy",
    "target_text": "SELECT ?narrower WHERE { brick:Occupancy skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Safety System a subclass of System?\nentitybrick:Safety_System",
    "target_text": "ASK WHERE { brick:Safety_System rdfs:subClassOf brick:System . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Fire Control Panel a subclass of any class?\nentitybrick:Fire_Control_Panel",
    "target_text": "SELECT ?superclass WHERE { brick:Fire_Control_Panel rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Dynamic Pressure?\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Dynamic_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum supply air temperature value detected in AHU 01 over the last 3 hours?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are relevant to an Automatic Mode Command?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?tag WHERE { brick:Automatic_Mode_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of humidity fluctuations recorded by Sensor 5.01?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest TVOC  sensor data for 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of   Ethyl Alcohol /C2H5CH Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is  Ethyl Alcohol /C2H5CH Sensor 5.01 located in?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Water Meter.\nentitybrick:Water_Meter",
    "target_text": "SELECT ?label WHERE { brick:Water_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Differential Speed Sensor fall?\nentitybrick:Differential_Speed_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Differential_Speed_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the  PM2.5 particulate matter Level Sensor data for Sensor 5.04?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for  Air Quality sensor 5.01 over the last six months?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all available information about the Return Fan.\nentitybrick:Return_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Flow Sensor.\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What heating mode is currently applied in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Heating Command has the tag 'Heat'?\nentitybrick:Heating_Command",
    "target_text": "ASK WHERE { brick:Heating_Command brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Baseboard Radiator.\nentitybrick:Baseboard_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Baseboard_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04 installed?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Emergency Wash Station?\nentitybrick:Emergency_Wash_Station",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Wash_Station skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average zone air damper command reading for RM107A over the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the High Outside Air Lockout Temperature Differential Parameter?\nentitybrick:High_Outside_Air_Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:High_Outside_Air_Lockout_Temperature_Differential_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Refrigerant_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the Formaldehyde Level sensor located in room 5.01.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone air temperature value for RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Thermostat Status represent?\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?definition WHERE { brick:Thermostat_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class for Min Unoccupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Entering Water Temperature Deadband Setpoint?\nentitybrick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which descriptive text does BrickSchema provide for the Electric Radiator?\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Electric_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Combustible Gas Smoke MQ2 Sensor  5.01 and its installation location.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the measurement units for Pressure that have a name length greater than 10.\nentitybrick:Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Pressure qudt:applicableUnit ?unit . FILTER(strlen(str(?unit)) > 10) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurements from Sensor 5.03 that might trigger a maintenance alert?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Air Flow Loss Alarm compare to other air monitoring alarms?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Air_Flow_Loss_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the broader concepts of Dynamic Pressure.\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?broader WHERE { brick:Dynamic_Pressure skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the Oxygen,O2 sensor installed in room 5.03.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.01's  Illuminance Sensor analytics in relation to system sustainability?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of hasAssociatedTag?\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?definition WHERE { brick:hasAssociatedTag skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Isolation Valve.\nentitybrick:Isolation_Valve",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Isolation_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in LPG Natural Gas Town MQ5 Gas Sensor  levels from Sensor 5.02 over the last three months?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Pressure Status.\nentitybrick:Pressure_Status",
    "target_text": "SELECT ?tag WHERE { brick:Pressure_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water flow setpoint in the Reception.\nentitybldg:Reception \n brick:Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Flow_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has co5.56?\nentitybldg:co5.56",
    "target_text": "SELECT ?room WHERE { bldg:co5.56 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the system shutdown status in the Music Room.\nentitybldg:Music_Room \n brick:System_Shutdown_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:System_Shutdown_Status ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 over the past week.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has Supply Hot Water Temperature Setpoint been marked as deprecated?\nentitybrick:Supply_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?deprecated WHERE { brick:Supply_Hot_Water_Temperature_Setpoint owl:deprecated ?deprecated . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for a Building Hot Water Meter?\nentitybrick:Building_Hot_Water_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Hot_Water_Meter rdfs:subClassOf ?superclass . brick:Building_Hot_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for Irradiance.\nentitybrick:Irradiance",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Irradiance ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the South.\nentitybldg:South \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What CO2  sensor is set up in room 5.05, and what category does it fall under?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Heating Supply Air Temperature Deadband Setpoint.\nentitybrick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Supply_Air_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Boiler Command.\nentitybrick:Boiler_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Boiler_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge water flow sensor in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Discharge_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Water_Flow_Sensor ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details (label, definition, tags, quantity, and substance) for the Cooling Supply Air Temperature Deadband Setpoint?\nentitybrick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label ?definition ?tag ?quantity ?substance WHERE { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint rdfs:label ?label . OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint skos:definition ?definition . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint brick:hasSubstance ?substance . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Power Alarm?\nentitybrick:Power_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Power_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substance property for the Entering Condenser Water Temperature Setpoint.\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading reported by the zone supply air temperature sensor in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is the High Temperature Alarm Parameter important?\nentitybrick:High_Temperature_Alarm_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:High_Temperature_Alarm_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 along with its location in the building.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Outside Air Grains Sensor.\nentitybrick:Outside_Air_Grains_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Grains_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Lighting call itself?\nentitybrick:Lighting",
    "target_text": "SELECT ?label WHERE { brick:Lighting rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Relief Fan?\nentitybrick:Relief_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Relief_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.05 due for a recalibration based on its  PM2.5 particulate matter Level Sensor output?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.02's data deviates from our smart building standards?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the  NO2 sensor 5.05 and where is it located?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . bldg:NO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.10 located?\nentitybldg:mqtwo5.10",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.10 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the TVOC  reading from sensor 5.03 right now?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with Zone Air Temperature Sensor?\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Zone_Air_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the location of RM120 Room.\nentitybrick:isPartOf",
    "target_text": "SELECT ?floor WHERE { bldg:RM120_room brick:isPartOf ?floor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Ceiling Fan?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?label WHERE { brick:Ceiling_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  Oxygen,O2 Sensor 5.04 based on its most recent data.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Janitor Room belong to a broader category of utility rooms?\nentitybrick:Janitor_Room",
    "target_text": "SELECT ?parent WHERE { brick:Janitor_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Cooling Command.\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasAssociatedTag an Asymmetric Property?\nentitybrick:hasAssociatedTag",
    "target_text": "ASK WHERE { brick:hasAssociatedTag a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for NO2 from 5.01?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Current Ratio Setpoint?\nentitybrick:Current_Ratio_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Current_Ratio_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity and substance for the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Energy Generation Sensor measure?\nentitybrick:Energy_Generation_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Energy_Generation_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all available information about the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.11 located?\nentitybldg:dust5.11",
    "target_text": "SELECT ?location WHERE { bldg:dust5.11 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?property ?value WHERE { brick:Cafeteria ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Ethyl Alcohol /C2H5CH Sensor 5.02 cover?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's Combustible Gas Smoke MQ2 Sensor  output compare with other sensors in the building?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Embedded Temperature Sensor.\nentitybrick:Embedded_Temperature_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Embedded_Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Location' one of the tags for Common Space?\nentitybrick:Common_Space",
    "target_text": "ASK WHERE { brick:Common_Space brick:hasAssociatedTag tag:Location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Vent Operating Mode Status have?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?tag WHERE { brick:Vent_Operating_Mode_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Transformer does.\nentitybrick:Transformer",
    "target_text": "SELECT ?definition WHERE { brick:Transformer skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Power Loss Alarm have?\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Power_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for System Status.\nentitybrick:System_Status",
    "target_text": "SELECT ?label WHERE { brick:System_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Chilled Water Coil important?\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  PM1 particulate matter Level Sensor 5.03 is located.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class and alias of the Discharge Air Static Pressure Setpoint?\nentitybrick:Discharge_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?eq ?alias WHERE { brick:Discharge_Air_Static_Pressure_Setpoint owl:equivalentClass ?eq . brick:Discharge_Air_Static_Pressure_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm that Differential Pressure Deadband Setpoint has a label, a definition, and a quantity.\nentitybrick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "ASK { brick:Differential_Pressure_Deadband_Setpoint rdfs:label ?label; skos:definition ?definition; brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Entering Medium Temperature Hot Water Temperature Load Shed Setpoint?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all details for the Heating Supply Air Temperature Deadband Setpoint?\nentitybrick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Heating_Supply_Air_Temperature_Deadband_Setpoint rdfs:label ?label . brick:Heating_Supply_Air_Temperature_Deadband_Setpoint skos:definition ?definition . brick:Heating_Supply_Air_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . brick:Heating_Supply_Air_Temperature_Deadband_Setpoint brick:hasSubstance ?substance . OPTIONAL { brick:Heating_Supply_Air_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Max Fresh Air Setpoint Limit used?\nentitybrick:Max_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Fresh_Air_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated name of Leaving Hot Water?\nentitybrick:Leaving_Hot_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Hot_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Peak Demand Sensor?\nentitybrick:Peak_Demand_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Peak_Demand_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Condenser Water Temperature Sensor.\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.04's TVOC  readings?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.02's Combustible Gas Smoke MQ2 Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature low reset setpoint in the Lawn.\nentitybldg:Lawn \n brick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for Ethyl Alcohol /C2H5CH Sensor 5.03?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Level' one of the tags for Water Level Sensor?\nentitybrick:Water_Level_Sensor",
    "target_text": "ASK WHERE { brick:Water_Level_Sensor brick:hasAssociatedTag tag:Level . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a list of related equipment to the Heat Wheel?\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?eq WHERE { ?eq brick:hasAssociatedTag brick:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Building Gas Meter belong to, and what tags describe it?\nentitybrick:Building_Gas_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Gas_Meter rdfs:subClassOf ?superclass . brick:Building_Gas_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Ethyl Alcohol /C2H5CH measurements from Sensor 5.03 day-to-day?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum loop chilled water supply temperature detected from the chiller over the last 3 hours?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of Rated Module Conversion Efficiency?\nentitybrick:ratedModuleConversionEfficiency",
    "target_text": "SELECT ?definition WHERE { brick:ratedModuleConversionEfficiency skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find tags for the Unoccupied Heating Temperature Setpoint that are either 'Heat' or 'Setpoint'.\nentitybrick:Unoccupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Unoccupied_Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . FILTER(?tag = tag:Heat || ?tag = tag:Setpoint) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Combustible Gas Smoke MQ2 Sensor  5.04 located in?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'HVAC' one of the tags for VAVRM103?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM103 brick:hasTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's Air Humidity Sensor 5.02 set up at?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Output Frequency Sensor have?\nentitybrick:Output_Frequency_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Output_Frequency_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current operational setting for the zone air temperature in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for NO2 Sensor 5.01.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?definition WHERE { brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Prayer Room?\nentitybrick:Prayer_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Prayer_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and tags for the Average Supply Air Flow Sensor?\nentitybrick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label ?tag WHERE { brick:Average_Supply_Air_Flow_Sensor rdfs:label ?label . brick:Average_Supply_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for  Air Humidity Sensor 5.02.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Room?\nentitybrick:Room",
    "target_text": "SELECT ?definition WHERE { brick:Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all differential pressure load shedding setpoints for medium temperature hot water.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many predicates does the Discharge Air Temperature Step Parameter have?\nentitybrick:Discharge_Air_Temperature_Step_Parameter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Step_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Air Differential Pressure Setpoint.\nentitybrick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Air_Differential_Pressure_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water discharge temperature sensor in the north side.\nentitybldg:north-side \n brick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:north-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Chilled Water Differential Pressure Proportional Band Parameter categorized using tags?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current Sound Noise loudness Sensor  values from Sensor 5.01 compare with historical averages?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Water Differential Temperature Setpoint a subclass of?\nentitybrick:Water_Differential_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Water_Differential_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What was the loop chilled water supply temperature trend for the chiller during the last shift?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Steam On Off Command inherit?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?parent WHERE { brick:Steam_On_Off_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Outside Air Flow Setpoint.\nentitybrick:Outside_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Occupied Heating Supply Air Flow Setpoint.\nentitybrick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Heating_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the zone air temperature data from RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the temperature deadband setpoint in the Board Room.\nentitybldg:Board_Room \n brick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a full list of details for Temperature Sensor.\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Temperature_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Box Mode Command?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of active energy?\nentitybrick:Active_Energy",
    "target_text": "SELECT ?category WHERE { brick:Active_Energy skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Oxygen,O2 Sensor 5.02 hanging out?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling start stop status in the Cafe.\nentitybldg:Cafe \n brick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Start_Stop_Status ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's Oxygen,O2 measurements over the last quarter.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Energy Generation System?\nentitybrick:Energy_Generation_System",
    "target_text": "SELECT ?tag WHERE { brick:Energy_Generation_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of parameter is a Chilled Water Differential Pressure Proportional Band Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air temperature setpoint for RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from PM10 particulate matter Level Sensor 5.05.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What  Air Quality Level is set up in room 5.02, and what category does it fall under?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is  Air Quality sensor 5.02 installed?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Supply Air Static Pressure Sensor?\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Voltage Sensor call itself?\nentitybrick:Voltage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for temperature from 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from PM2.5 particulate matter Level Sensor 5.01.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Outside Air Temperature High Reset Setpoint inherit?\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what HVAC Valve means.\nentitybrick:HVAC_Valve",
    "target_text": "SELECT ?definition WHERE { brick:HVAC_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the full details (label, definition, tags) of the Heating Mode Status?\nentitybrick:Heating_Mode_Status",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Heating_Mode_Status rdfs:label ?label . brick:Heating_Mode_Status skos:definition ?definition . OPTIONAL { brick:Heating_Mode_Status brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Methane Concentration measure?\nentitybrick:Methane_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:Methane_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the description of Gas.\nentitybrick:Gas",
    "target_text": "SELECT ?definition WHERE { brick:Gas skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for Temperature sensor 5.01.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Building Electrical Meter belong to, and what tags describe it?\nentitybrick:Building_Electrical_Meter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Building_Electrical_Meter rdfs:subClassOf ?superclass . brick:Building_Electrical_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_System rdfs:label ?label . brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Leaving Water Temperature Setpoint.\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What version deprecated Discharge Water Temperature Sensor?\nentitybrick:Discharge_Water_Temperature_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Water_Temperature_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Frequency Command.\nentitybrick:Frequency_Command",
    "target_text": "SELECT ?tag WHERE { brick:Frequency_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from  PM10 particulate matter Level Sensor 5.04 indicate any potential issues with air quality in the building?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.13 located?\nentitybldg:dust5.13",
    "target_text": "SELECT ?location WHERE { bldg:dust5.13 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Mode Command.\nentitybrick:Mode_Command",
    "target_text": "SELECT ?label WHERE { brick:Mode_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is  NO2 Sensor 5.03 associated with?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Emergency Phone?\nentitybrick:Emergency_Phone",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Phone rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity for the Frequency Command.\nentitybrick:Frequency_Command",
    "target_text": "SELECT ?quantity WHERE { brick:Frequency_Command brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.05 for the past week and show me a summary.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Temperature Sensor 5.04 cover?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Formaldehyde Level sensor 5.01 is placed.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can Pascals be used to measure atmospheric pressure?\nentitybrick:Atmospheric_Pressure",
    "target_text": "ASK WHERE { brick:Atmospheric_Pressure qudt:applicableUnit unit:PA . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.01's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas output contribute to the overall building air quality index?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the deionised water conductivity sensor in the Corridor.\nentitybldg:Corridor \n brick:Deionised_Water_Conductivity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Deionised_Water_Conductivity_Sensor ; brick:hasLocation bldg:Corridor ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Exhaust Air Flow Integral Time Parameter?\nentitybrick:Exhaust_Air_Flow_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Flow_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Tint Command.\nentitybrick:Tint_Command",
    "target_text": "SELECT ?parent WHERE { brick:Tint_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Occupied Cooling Temperature Deadband Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the differential pressure load shed status in the Auditorium.\nentitybldg:Auditorium \n brick:Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the standby glycool unit on off status in the Storage Room.\nentitybldg:Storage_Room \n brick:Standby_Glycool_Unit_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Standby_Glycool_Unit_On_Off_Status ; brick:hasLocation bldg:Storage_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water differential pressure sensor in the Cinema.\nentitybldg:Cinema \n brick:Medium_Temperature_Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define a Dedicated Outdoor Air System?\nentitybrick:DOAS",
    "target_text": "SELECT ?definition WHERE { brick:DOAS skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in humidity sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent NO2 measurement from sensor5.05, please.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Displacement Flow Air Diffuser'.\nentitybrick:Displacement_Flow_Air_Diffuser",
    "target_text": "SELECT ?definition WHERE { brick:Displacement_Flow_Air_Diffuser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Centrifugal Chiller do in an HVAC system?\nentitybrick:Centrifugal_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Centrifugal_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the warmest zone air temperature sensor in the Rest Area.\nentitybldg:Rest_Area \n brick:Warmest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Warmest_Zone_Air_Temperature_Sensor ; brick:hasLocation bldg:Rest_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Imbalance Sensor.\nentitybrick:Imbalance_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Imbalance_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for   TVOC  Sensor 5.02.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air co sensor in the South.\nentitybldg:South \n brick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_CO_Sensor ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substance linked to Outside Air Temperature Setpoint.\nentitybrick:Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest measurement from LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.04.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.01 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature reset differential setpoint in the west side.\nentitybldg:west-side \n brick:Supply_Air_Temperature_Reset_Differential_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Reset_Differential_Setpoint ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average chilled water supply temperature reading for the building chiller in the past 10 minutes?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does the High Humidity Alarm fall?\nentitybrick:High_Humidity_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:High_Humidity_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Cooling Start Stop Status.\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Start_Stop_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Air Handling Unit.\nentitybrick:Air_Handling_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Air_Handling_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum NO2 recorded by Sensor 5.02 last week?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date  Illuminance Sensor level from sensor 5.01?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags are used for RM107B?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM107B brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using  Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Condenser Heat Exchanger have?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Heat_Exchanger brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Dual Duct Air Handling Unit.\nentitybrick:Dual_Duct_Air_Handling_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Dual_Duct_Air_Handling_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Oxygen,O2 level from sensor 5.02?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many logical properties exist for a deprecation shape?\nentitybrick:DeprecationShape",
    "target_text": "SELECT (COUNT(?property) AS ?propcount) WHERE { brick:DeprecationShape sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Hot Water Coil?\nentitybrick:Hot_Water_Coil",
    "target_text": "SELECT ?coil WHERE { ?coil a brick:Hot_Water_Coil . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  CO2  sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:CO2_Level_Sensor_5.01 rdfs:label ?label . bldg:CO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entity feeds VAVRM115?\nentitybrick:isFedBy",
    "target_text": "SELECT ?feeder WHERE { bldg:VAVRM115 brick:isFedBy ?feeder . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label describes Hazardous Materials Storage?\nentitybrick:Hazardous_Materials_Storage",
    "target_text": "SELECT ?label WHERE { brick:Hazardous_Materials_Storage rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone air temperature sensor indicate in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM10 particulate matter Level Sensor 5.03 and where is it set up?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.02 show any unusual Sound Noise loudness Sensor  spikes today?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the VFD Enable Command.\nentitybrick:VFD_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:VFD_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader classification and relevant tags apply to Audio Visual Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . brick:Audio_Visual_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Chilled Water Valve?\nentitybrick:Chilled_Water_Valve",
    "target_text": "SELECT ?rule WHERE { brick:Chilled_Water_Valve sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Liquid is a brick:Substance.\nentitybrick:Liquid",
    "target_text": "ASK WHERE { brick:Liquid a brick:Substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount  TVOC  Sensor 5.02?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what a Boiler Command does?\nentitybrick:Boiler_Command",
    "target_text": "SELECT ?definition WHERE { brick:Boiler_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Battery?\nentitybrick:Battery",
    "target_text": "SELECT ?superclass WHERE { brick:Battery rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Box Mode Command a type of Mode Command?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show every property-value pair describing the Heating Discharge Air Temperature Proportional Band Parameter.\nentitybrick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Return Air CO2 Sensor.\nentitybrick:Return_Air_CO2_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_CO2_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of supply air pressure occurrences for AHU 01 for today?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for isLocationOf.\nentitybrick:isLocationOf",
    "target_text": "SELECT ?label WHERE { brick:isLocationOf rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Unoccupied Room Air Temperature Setpoint?\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Room_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses of Min Unoccupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is PM1 particulate matter Level Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is CO2  Sensor 5.02 positioned?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest reading from  Ethyl Alcohol /C2H5CH sensor5.04.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Occupied Heating Supply Air Flow Setpoint?\nentitybrick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Occupied_Heating_Supply_Air_Flow_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Supply Room.\nentitybldg:Supply_Room \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Pre Filter?\nentitybrick:Pre_Filter",
    "target_text": "SELECT ?label WHERE { brick:Pre_Filter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all information about Gas including its name, meaning, and detailed subcategories.\nentitybrick:Gas",
    "target_text": "SELECT ?label ?definition ?broader (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowers)\nWHERE {  brick:Gas rdfs:label ?label .  brick:Gas skos:definition ?definition .  brick:Gas skos:broader ?broader .  brick:Gas skos:narrower ?narrower .}\nGROUP BY ?label ?definition ?broader"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.04's NO2 analytics in relation to system sustainability?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Study Room.\nentitybldg:Study_Room \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Max Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas variations as captured by Sensor 5.03?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.01's  Illuminance Sensor measurements over the last quarter.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the applicable units for Electric Current?\nentitybrick:Electric_Current",
    "target_text": "SELECT ?unit WHERE { brick:Electric_Current qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Entering Medium Temperature Hot Water Temperature Low Reset Setpoint?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Location' one of the tags for Site?\nentitybrick:Site",
    "target_text": "ASK WHERE { brick:Site brick:hasAssociatedTag tag:Location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What reading does the sensor give for zone air temperature in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the equivalent class of the Elevator Shaft.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the significance of an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Absolute_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.04 is keeping it real with our smart building  quality standards?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Reactive Power measure?\nentitybrick:Reactive_Power",
    "target_text": "SELECT ?definition WHERE { brick:Reactive_Power skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for an Auditorium?\nentitybrick:Auditorium",
    "target_text": "SELECT ?tag WHERE { brick:Auditorium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for Gasoline?\nentitybrick:Gasoline",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Gasoline ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me which quantity is measured by the Water Differential Temperature Sensor.\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Differential_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature deadband setpoint in the Lawn.\nentitybldg:Lawn \n brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Voltage Sensor control?\nentitybrick:Voltage_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Voltage_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has dust5.59?\nentitybldg:dust5.59",
    "target_text": "SELECT ?room WHERE { bldg:dust5.59 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Water Alarm means.\nentitybrick:Water_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Water_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone air temperature setpoint currently read in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class for the Heating Supply Air Temperature Proportional Band Parameter.\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?eq WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Temperature Low Reset Setpoint include the tag 'Low'?\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag tag:Low . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam Usage Sensor a subclass of?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Outside Air Temperature Low Reset Setpoint?\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Relief Damper.\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?label WHERE { brick:Relief_Damper rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current control value for the zone air control temperature setpoint in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the air humidity sensor 5.04 and its location.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Heating Temperature Setpoint mean?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is PM2.5 particulate matter Level Sensor 5.01 a member of?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Telecom Room?\nentitybrick:Telecom_Room",
    "target_text": "SELECT ?label WHERE { brick:Telecom_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Sound Noise loudness Sensor  5.04 at, like, in the building?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Exhaust Air Static Pressure Proportional Band Parameter in the ontology?\nentitybrick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the property associated with Photovoltaic Array?\nentitybrick:Photovoltaic_Array",
    "target_text": "SELECT ?property WHERE { brick:Photovoltaic_Array sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Combustible Gas Smoke MQ2 Sensor  data from sensor 5.04.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, break down the Oxygen,O2 stats from Sensor 5.03 and tell me if it's on point with our green goals.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Computer Room Air Conditioning have?\nentitybrick:Computer_Room_Air_Conditioning",
    "target_text": "SELECT ?tag WHERE { brick:Computer_Room_Air_Conditioning brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for  Air Quality Level at 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for   TVOC  Sensor 5.02.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Vent Operating Mode Status?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?tag WHERE { brick:Vent_Operating_Mode_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present heating mode setting for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the gas sensor in the Hallway.\nentitybldg:Hallway \n brick:Gas_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Gas_Sensor ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick Sound Noise loudness Sensor  5.01 in the building?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does a discharge air differential pressure setpoint have another common term?\nentitybrick:Discharge_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Differential_Pressure_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Mixed Air Filter a subclass of?\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Mixed_Air_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Temperature Deadband Setpoint means.\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Solar Azimuth Angle Sensor.\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Solar_Azimuth_Angle_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone supply air flow in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air temperature setpoint in the South.\nentitybldg:South \n brick:Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Temperature_Setpoint ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.04's CO2  readings align with our smart building's sustainability KPIs?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Condenser Water Flow Sensor call itself?\nentitybrick:Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Voltage Ratio Setpoint.\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Ratio_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Ticketing Booth?\nentitybrick:Ticketing_Booth",
    "target_text": "SELECT ?label WHERE { brick:Ticketing_Booth rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum CO2  in sensor 5.05 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Radiant Panel?\nentitybrick:Radiant_Panel",
    "target_text": "SELECT ?tag WHERE { brick:Radiant_Panel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of  Alcohol Vapor MQ3 Gas Sensor  5.05?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Outside Air Temperature Sensor call itself?\nentitybrick:Outside_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much  PM10 particulate matter Level Sensor is recorded by sensor 5.01 right now?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Dewpoint_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display a comprehensive description of Position with all its properties.\nentitybrick:Position",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?unit; separator=\", \") AS ?units) ?vector (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) WHERE { brick:Position rdfs:label ?label . brick:Position skos:definition ?definition . brick:Position qudt:applicableUnit ?unit . brick:Position qudt:hasDimensionVector ?vector . brick:Position skos:broader ?broader . } GROUP BY ?label ?definition ?vector"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Oxygen,O2 Sensor 5.03 over the last six months?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Temperature Alarm has the tag 'Alarm'?\nentitybrick:Temperature_Alarm",
    "target_text": "ASK WHERE { brick:Temperature_Alarm brick:hasAssociatedTag tag:Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for Ethyl Alcohol /C2H5CH at 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a damper classified under multiple categories?\nentitybrick:Damper",
    "target_text": "ASK WHERE { brick:Damper brick:hasAssociatedTag ?tag1 . FILTER(EXISTS { brick:Damper brick:hasAssociatedTag ?tag2 . FILTER(?tag1 != ?tag2) }) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the inverse property of hasAssociatedTag.\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?inverse WHERE { brick:hasAssociatedTag owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Electric Baseboard Radiator?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Baseboard_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level classification of an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which markers describe Fire Safety Equipment?\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Fire_Safety_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Rated Maximum Current Output described?\nentitybrick:ratedMaximumCurrentOutput",
    "target_text": "SELECT ?label WHERE { brick:ratedMaximumCurrentOutput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for CO  sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Thermal Power Meter?\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?label ?definition WHERE { brick:Thermal_Power_Meter rdfs:label ?label . brick:Thermal_Power_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if PM2.5 particulate matter Level Sensor 5.03 shows abnormal readings today.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the Alcohol Vapor MQ3 Gas Sensor  data from Sensor 5.04 for the past year.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does Heat Detector belong to?\nentitybrick:Heat_Detector",
    "target_text": "SELECT ?superclass WHERE { brick:Heat_Detector rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are attached to an Air Loop?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?tag WHERE { brick:Air_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Temporary Occupancy Status?\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Temporary_Occupancy_Status rdfs:label ?label . brick:Temporary_Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Battery Room?\nentitybrick:Battery_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Battery_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label for the First Aid Room?\nentitybrick:First_Aid_Room",
    "target_text": "SELECT ?label WHERE { brick:First_Aid_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an air system control?\nentitybrick:Air_System",
    "target_text": "SELECT ?definition WHERE { brick:Air_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  Alcohol Vapor MQ3 Gas Sensor  5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of an Automatic Mode Command?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Automatic_Mode_Command rdfs:subClassOf ?superclass . brick:Automatic_Mode_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water supply temperature sensor in the Training Room.\nentitybldg:Training_Room \n brick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Supply_Temperature_Sensor ; brick:hasLocation bldg:Training_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the PIR Sensor.\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PIR_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Sound Noise loudness Sensor  5.03 at?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Leaving Chilled Water Temperature Sensor?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Underfloor Air Plenum.\nentitybrick:Underfloor_Air_Plenum",
    "target_text": "SELECT ?label ?definition WHERE { brick:Underfloor_Air_Plenum rdfs:label ?label . brick:Underfloor_Air_Plenum skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the collection basin water temperature sensor in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Collection_Basin_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Collection_Basin_Water_Temperature_Sensor ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Exhaust Air Temperature Sensor.\nentitybrick:Exhaust_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the ozone level sensor in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Ozone_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Ozone_Level_Sensor ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current zone air damper command setting for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Office.\nentitybrick:Office",
    "target_text": "SELECT ?label WHERE { brick:Office rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the air humidity sensor 5.05 along with its location in the building.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for Gasoline?\nentitybrick:Gasoline",
    "target_text": "SELECT ?label WHERE { brick:Gasoline rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Standby Unit On Off Status indicate?\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Standby_Unit_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Sound Noise loudness Sensor  5.05 and its location.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  NO2 sensor 5.02 along with its location in the building.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.02 rdfs:label ?label . bldg:NO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Outside Air Dewpoint Sensor.\nentitybrick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Building Air Humidity Setpoint.\nentitybrick:Building_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Building_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with the Heating Discharge Air Temperature Integral Time Parameter.\nentitybrick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does Temperature Step Parameter belong to?\nentitybrick:Temperature_Step_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Temperature_Step_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone air control temperature setpoint in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Alcohol Vapor MQ3 Gas Sensor  5.03 cover?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does CurrentImbalance indicate?\nentitybrick:Current_Imbalance",
    "target_text": "SELECT ?definition WHERE { brick:Current_Imbalance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Load Shed Setpoint work?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define an Average Exhaust Air Static Pressure Sensor?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Position Sensor?\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date TVOC  level from sensor 5.01?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Oxygen,O2 readings from Sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the other designations for the Discharge Air Flow Setpoint?\nentitybrick:Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum NO2 in sensor 5.04 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air temperature setpoint for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Unoccupied Cooling Discharge Air Flow Setpoint?\nentitybrick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Illuminance Sensor 5.03?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Illuminance_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air temperature deadband setpoint in the Reception.\nentitybldg:Reception \n brick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Occupied Cooling Temperature Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Occupied_Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Combustible Gas Smoke MQ2 Sensor  levels over the past quarter?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Leaving Hot Water Temperature Sensor means.\nentitybrick:Leaving_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Hot_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a High Temperature Alarm?\nentitybrick:High_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:High_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.11 located?\nentitybldg:oxy5.11",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.11 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the PlugStrip.\nentitybrick:PlugStrip",
    "target_text": "SELECT ?tag WHERE { brick:PlugStrip brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current TVOC  value from sensor 5.03?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for Air Humidity Sensor 5.05?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Water Distribution?\nentitybrick:Water_Distribution",
    "target_text": "SELECT ?label WHERE { brick:Water_Distribution rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the PV Generation System a subclass of?\nentitybrick:PV_Generation_System",
    "target_text": "SELECT ?parent WHERE { brick:PV_Generation_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Entering Water Flow Setpoint does.\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Power Loss Alarm.\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Power_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical quantity is associated with Temperature Sensor?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Differential Pressure Sensor.\nentitybrick:Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the mixed air flow sensor in the Library.\nentitybldg:Library \n brick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Mixed_Air_Flow_Sensor ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if HVAC Zone has the tag 'HVAC'?\nentitybrick:HVAC_Zone",
    "target_text": "ASK WHERE { brick:HVAC_Zone brick:hasAssociatedTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there another name for the Discharge Air Flow Setpoint?\nentitybrick:Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.03 for a specific date, for example 2025-02-15.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone air control temperature setpoint configured in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for NO2 Sensor 5.03.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time cooling command value for AHU 02 right now?\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Temperature High Reset Setpoint?\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the feeder of VAVRM112?\nentitybrick:isFedBy",
    "target_text": "SELECT ?feeder WHERE { bldg:VAVRM112 brick:isFedBy ?feeder . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What heating mode is currently applied in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is Air Temperature Sensor 5.05 associated with?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.03's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply condenser water flow sensor in the Equipment Room.\nentitybldg:Equipment_Room \n brick:Supply_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Condenser_Water_Flow_Sensor ; brick:hasLocation bldg:Equipment_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Return Air Humidity Setpoint have?\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Electric Baseboard Radiator fall?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?superclass WHERE { brick:Electric_Baseboard_Radiator rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the  Air Quality sensor data from Sensor 5.04.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM1_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Max Air Temperature Setpoints?\nentitybrick:Max_Air_Temperature_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Max_Air_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.71 located?\nentitybldg:mqfive5.71",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.71 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Mode Status.\nentitybrick:Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the PIR Sensor inherit?\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PIR_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Office Kitchen.\nentitybrick:Office_Kitchen",
    "target_text": "SELECT ?tag WHERE { brick:Office_Kitchen brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does Entering Water Temperature Setpoint control?\nentitybrick:Entering_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Damper?\nentitybrick:Return_Damper",
    "target_text": "SELECT ?label WHERE { brick:Return_Damper rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which applicable units or QUDT references are defined for Luminous Intensity?\nentitybrick:Luminous_Intensity",
    "target_text": "SELECT ?unit ?reference WHERE { brick:Luminous_Intensity qudt:applicableUnit ?unit . OPTIONAL { brick:Luminous_Intensity brick:hasQUDTReference ?reference . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone reheat valve command in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Wind Direction Sensor?\nentitybrick:Wind_Direction_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Wind_Direction_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the System Shutdown Status.\nentitybrick:System_Shutdown_Status",
    "target_text": "SELECT ?tag WHERE { brick:System_Shutdown_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.22 located?\nentitybldg:mqfive5.22",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.22 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does ratedVoltageInput call itself?\nentitybrick:ratedVoltageInput",
    "target_text": "SELECT ?label WHERE { brick:ratedVoltageInput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all differential pressure load shedding setpoints for medium temperature hot water.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Condenser Water.\nentitybrick:Condenser_Water",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02 located?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Leaving Condenser Water.\nentitybrick:Leaving_Condenser_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Condenser_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Air Plenum?\nentitybrick:Return_Air_Plenum",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Plenum rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Generation Sensor identified in the ontology?\nentitybrick:Generation_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Generation_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Mixed Air Humidity Setpoint.\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.02 is keeping it real with our smart building  quality standards?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating mode status in the east side.\nentitybldg:east-side \n brick:Unoccupied_Heating_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Mode_Status ; brick:hasLocation bldg:east-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.01's Combustible Gas Smoke MQ2 Sensor  readings?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which higher-level classes does Occupied Load Shed Command belong to?\nentitybrick:Occupied_Load_Shed_Command",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Load_Shed_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving water temperature deadband setpoint in the Boutique.\nentitybldg:Boutique \n brick:Leaving_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Water_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Boutique ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Leaving Water Flow Setpoint set?\nentitybrick:Leaving_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Water_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all details of Water such as its name, description, broader group, and subcategories.\nentitybrick:Water",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowers) WHERE { brick:Water rdfs:label ?label . brick:Water skos:definition ?definition . brick:Water skos:broader ?broader . brick:Water skos:narrower ?narrower . } GROUP BY ?label ?definition"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for a Change Filter Alarm?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . brick:Change_Filter_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the equivalent class of the Constant Air Volume Box.\nentitybrick:Constant_Air_Volume_Box",
    "target_text": "SELECT ?eq WHERE { brick:Constant_Air_Volume_Box owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Differential Speed Setpoint?\nentitybrick:Differential_Speed_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Differential_Speed_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Reactive Power Sensor have?\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Reactive_Power_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Differential Pressure Proportional Band a type of Proportional Band Parameter?\nentitybrick:Differential_Pressure_Proportional_Band",
    "target_text": "ASK WHERE { brick:Differential_Pressure_Proportional_Band rdfs:subClassOf brick:Proportional_Band_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the full details (label, definition, seeAlso, tags, equivalent class) of the Embedded Surface System Panel?\nentitybrick:Embedded_Surface_System_Panel",
    "target_text": "SELECT ?label ?definition ?seeAlso (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) ?eq WHERE { brick:Embedded_Surface_System_Panel rdfs:label ?label . OPTIONAL { brick:Embedded_Surface_System_Panel skos:definition ?definition . } OPTIONAL { brick:Embedded_Surface_System_Panel rdfs:seeAlso ?seeAlso . } OPTIONAL { brick:Embedded_Surface_System_Panel brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Embedded_Surface_System_Panel owl:equivalentClass ?eq . } } GROUP BY ?label ?definition ?seeAlso ?eq"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Electric Current call itself?\nentitybrick:Electric_Current",
    "target_text": "SELECT ?label WHERE { brick:Electric_Current rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the dimension vector of CurrentAngle?\nentitybrick:Current_Angle",
    "target_text": "SELECT ?dimVector WHERE { brick:Current_Angle qudt:hasDimensionVector ?dimVector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to NO2 Sensor 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What properties does a Domestic Hot Water System Enable Command have?\nentitybrick:Domestic_Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Domestic_Hot_Water_System_Enable_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of CurrentAngle.\nentitybrick:Current_Angle",
    "target_text": "SELECT ?label WHERE { brick:Current_Angle rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does  PM10 particulate matter Level Sensor 5.04 require recalibration according to the data?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for   Ethyl Alcohol /C2H5CH Sensor 5.04.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which explanation is used to define HX in BrickSchema?\nentitybrick:HX",
    "target_text": "SELECT ?definition WHERE { brick:HX skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements from PM2.5 particulate matter Level Sensor 5.03 over the past 24 hours.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me Alcohol Vapor MQ3 Gas Sensor  trends and their variation over the last 24 hours in room or sensor 5.01.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Static Pressure Setpoint Limit includes the tag 'Pressure'.\nentitybrick:Static_Pressure_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Static_Pressure_Setpoint_Limit brick:hasAssociatedTag tag:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water supply flow setpoint in the Reception.\nentitybldg:Reception \n brick:Chilled_Water_Supply_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Supply_Flow_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is  Illuminance Sensor 5.03 showing any signs of potential failure based on recent data?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cooling Valve classified in the ontology?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has c2h5ch5.22?\nentitybldg:c2h5ch5.22",
    "target_text": "SELECT ?room WHERE { bldg:c2h5ch5.22 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:PM1_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Outside Air Temperature High Reset Setpoint?\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me if outside air is a subset of air.\nentitybrick:Outside_Air",
    "target_text": "ASK WHERE { brick:Outside_Air skos:broader brick:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for NO2 Sensor 5.01 in our smart building?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current sensor output for the zone supply air flow in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Entering Water Flow Sensor.\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Entering_Water_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much  PM2.5 particulate matter Level Sensor is recorded by sensor 5.03 right now?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the parent property of Rated Maximum Current Input.\nentitybrick:ratedMaximumCurrentInput",
    "target_text": "SELECT ?parent WHERE { brick:ratedMaximumCurrentInput rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Return Heating Valve?\nentitybrick:Return_Heating_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Heating_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Water Heater.\nentitybrick:Water_Heater",
    "target_text": "SELECT ?tag WHERE { brick:Water_Heater brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for  PM1 particulate matter Level Sensor 5.05?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the LPG Natural Gas Town MQ5 Gas Sensor  levels recorded by Sensor 5.05?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current setpoint for the zone air temperature in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Air Humidity Sensor 5.02's readings over the past 48 hours.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of   CO  Sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Particulate Matter Sensor.\nentitybrick:Particulate_Matter_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Particulate_Matter_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the rdfs:label for an air wet bulb temperature sensor?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Temperature Alarm.\nentitybrick:Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Even Month Status?\nentitybrick:Even_Month_Status",
    "target_text": "SELECT ?definition WHERE { brick:Even_Month_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the parallel class for the Low Discharge Air Temperature Alarm.\nentitybrick:Low_Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?equiv WHERE { brick:Low_Discharge_Air_Temperature_Alarm owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does  Alcohol Vapor MQ3 Gas Sensor  5.02 belong to?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.56 located?\nentitybldg:mqnine5.56",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.56 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is light5.67 located?\nentitybldg:light5.67",
    "target_text": "SELECT ?location WHERE { bldg:light5.67 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a CO2 Differential Sensor belong to, and what tags describe it?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:CO2_Differential_Sensor rdfs:subClassOf ?superclass . brick:CO2_Differential_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether PhasorAngle is defined as a Quantity.\nentitybrick:Phasor_Angle",
    "target_text": "ASK WHERE { brick:Phasor_Angle a brick:Quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating zone air temperature setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum zone air damper command readings for RM107A from this morning.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Air Temperature Integral Time Parameter classified under Temperature Parameter?\nentitybrick:Air_Temperature_Integral_Time_Parameter",
    "target_text": "ASK { brick:Air_Temperature_Integral_Time_Parameter rdfs:subClassOf brick:Temperature_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the owl:equivalentClass for HX?\nentitybrick:HX",
    "target_text": "SELECT ?equiv WHERE { brick:HX owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Reactive Power Sensor.\nentitybrick:Reactive_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Reactive_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest status of the zone air damper command in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the TVOC  readings from Sensor 5.01?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water temperature deadband setpoint in the Reception.\nentitybldg:Reception \n brick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.02 Combustible Gas Smoke MQ2 Sensor  level and is it within expected ranges?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor 5.01 show any unusual CO2  spikes today?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for  Air Humidity Sensor 5.05.\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Exhaust Air Humidity Setpoint?\nentitybrick:Exhaust_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest reading of the zone air damper command for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average CO  measured by Sensor 5.05 during peak occupancy hours?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the remotely on off status in the east side.\nentitybldg:east-side \n brick:Remotely_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Remotely_On_Off_Status ; brick:hasLocation bldg:east-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in  PM1 particulate matter Level Sensor from Sensor 5.05 could be used to forecast future maintenance needs?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Surveillance Camera.\nentitybrick:Surveillance_Camera",
    "target_text": "SELECT ?label WHERE { brick:Surveillance_Camera rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensors or points are connected to the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the status in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Status ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Office Kitchen extends.\nentitybrick:Office_Kitchen",
    "target_text": "SELECT ?parent WHERE { brick:Office_Kitchen rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Differential Temperature a delta quantity?\nentitybrick:Differential_Temperature",
    "target_text": "ASK WHERE { brick:Differential_Temperature qudt:isDeltaQuantity true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to the Return Fan?\nentitybrick:Return_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Return_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current NO2 reading from NO2 Sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in  Air Quality sensor levels from Sensor 5.01 over the last three months?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the humidity measurements from sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Change Filter Alarm.\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Change_Filter_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substances are associated with Supply Air Flow Setpoint?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Overload_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Manual Fire Alarm Activation Equipment a subclass of Fire Safety Equipment?\nentitybrick:Manual_Fire_Alarm_Activation_Equipment",
    "target_text": "ASK WHERE { brick:Manual_Fire_Alarm_Activation_Equipment rdfs:subClassOf brick:Fire_Safety_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Hot Water System.\nentitybrick:Hot_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Hot_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you count the number of constraints applied to current output sensors?\nentitybrick:Current_Output_Sensor",
    "target_text": "SELECT (COUNT(?rule) AS ?rule_count) WHERE { brick:Current_Output_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find  PM1 particulate matter Level Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the zone air humidity sensor in the Classroom.\nentitybldg:Classroom \n brick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Zone_Air_Humidity_Sensor ; brick:hasLocation bldg:Classroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Average Exhaust Air Static Pressure Sensor important?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the Alcohol Vapor MQ3 Gas Sensor  data for Sensor 5.04?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What term is used for Heat Detector?\nentitybrick:Heat_Detector",
    "target_text": "SELECT ?label WHERE { brick:Heat_Detector rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to PM10 particulate matter Level Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.04 to compute an overall LPG Natural Gas Town MQ5 Gas Sensor  index.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has temp5.70?\nentitybldg:temp5.70",
    "target_text": "SELECT ?room WHERE { bldg:temp5.70 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Parking Space?\nentitybrick:Parking_Space",
    "target_text": "SELECT ?parent WHERE { brick:Parking_Space rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label assigned to Override Command?\nentitybrick:Override_Command",
    "target_text": "SELECT ?label WHERE { brick:Override_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which NO2 sensor is deployed in room 5.04 and what is its kind?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.04 rdfs:label ?label . bldg:NO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Pre Filter Status.\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Pre_Filter_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Condenser Water Temperature Sensor?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Formaldehyde Level sensor 5.04 indicate any potential issues with air quality in the building?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Outside Air CO2 Sensor.\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_CO2_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to Dry_Bulb_Temperature?\nentitybrick:Dry_Bulb_Temperature",
    "target_text": "SELECT ?label WHERE { brick:Dry_Bulb_Temperature rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Max Unoccupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Power Loss Alarm a subclass of?\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Power_Loss_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of the zone air damper command for RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Electric Boiler?\nentitybrick:Electric_Boiler",
    "target_text": "SELECT ?tag WHERE { brick:Electric_Boiler brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Discharge' associated with Max Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does an Automatic Tint Window Array consist of?\nentitybrick:Automatic_Tint_Window_Array",
    "target_text": "SELECT ?definition WHERE { brick:Automatic_Tint_Window_Array skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.39 located?\nentitybldg:dust5.39",
    "target_text": "SELECT ?location WHERE { bldg:dust5.39 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Outside Air Voltage Sensor.\nentitybrick:Output_Voltage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Output_Voltage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Air Flow Loss Alarm?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of PM1 particulate matter Level Sensor 5.03?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Leaving Water Temperature Setpoint?\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the badge or label for Zone.\nentitybrick:Zone",
    "target_text": "SELECT ?label WHERE { brick:Zone rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Voltage Ratio Setpoint?\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Voltage_Ratio_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class for Supply Air Temperature Cooling Setpoint.\nentitybrick:Supply_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Temperature_Cooling_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the NO2 readings from Sensor 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Natural Gas Flow Sensor have?\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Natural_Gas_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Effective Air Temperature Setpoint.\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of  Illuminance Sensor 5.04.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Alcohol Vapor MQ3 Gas Sensor  5.02 at?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.05.\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name referencing the Max Static Pressure Setpoint Limit in BrickSchema.\nentitybrick:Max_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Static_Pressure_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve a full RDF overview of Terminal Unit.\nentitybrick:Terminal_Unit",
    "target_text": "DESCRIBE brick:Terminal_Unit\nWHERE { brick:Terminal_Unit ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class for the Discharge Air Flow High Reset Setpoint?\nentitybrick:Discharge_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Flow_High_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?label WHERE { brick:Wind_Direction rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Alcohol Vapor MQ3 Gas Sensor  level from sensor 5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for VAVRM115.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:VAVRM115 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to a Building Air Static Pressure Setpoint.\nentitybrick:Building_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Building_Air_Static_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone air control temperature setpoint read in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative CO  change reported by  CO  Sensor 5.03 over the past week?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.03 located?\nentitybldg:mqnine5.03",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average supply air temperature reading for AHU 01 in the past 10 minutes?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.01 and tell me its class.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Valve Position Command?\nentitybrick:Valve_Position_Command",
    "target_text": "SELECT ?label WHERE { brick:Valve_Position_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that HVAC Zone extends.\nentitybrick:HVAC_Zone",
    "target_text": "SELECT ?parent WHERE { brick:HVAC_Zone rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate if the Temperature readings from Sensor 5.03 have triggered any automated health alerts recently.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the High Return Air Temperature Alarm contribute to system safety?\nentitybrick:High_Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:High_Return_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Return Air Plenum?\nentitybrick:Return_Air_Plenum",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Plenum rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Condenser Heat Exchanger play in an HVAC system?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Heat_Exchanger skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is notwo5.10 located?\nentitybldg:notwo5.10",
    "target_text": "SELECT ?location WHERE { bldg:notwo5.10 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Filter Reset Command?\nentitybrick:Filter_Reset_Command",
    "target_text": "SELECT ?tag WHERE { brick:Filter_Reset_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?definition WHERE { brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label forFormaldehyde Level sensor 5.05.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity and substance for the Entering Water Flow Setpoint?\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Entering_Water_Flow_Setpoint brick:hasQuantity ?quantity . brick:Entering_Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.51 located?\nentitybldg:sound5.51",
    "target_text": "SELECT ?location WHERE { bldg:sound5.51 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Temporary Occupancy Status.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?label WHERE { brick:Temporary_Occupancy_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is Formaldehyde Level sensor 5.01 placed?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Occupied Return Air Temperature Setpoint.\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which parent class does the Energy Zone fall?\nentitybrick:Energy_Zone",
    "target_text": "SELECT ?superclass WHERE { brick:Energy_Zone rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes Availability Status?\nentitybrick:Availability_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Availability_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me an extensive overview of all attributes of a Basement.\nentitybrick:Basement",
    "target_text": "SELECT ?property ?value WHERE { brick:Basement ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Max Occupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which parent class is the Medium Temperature Hot Water Differential Pressure Load Shed Status derived from?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the current heating mode directive for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of Min Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam System a subclass of?\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Thermostat Status.\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?tag WHERE { brick:Thermostat_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Zone Air Humidity Setpoint?\nentitybrick:Zone_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the full metadata set for a Chilled Water Differential Pressure Load Shed Setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Reception?\nentitybrick:Reception",
    "target_text": "SELECT ?label WHERE { brick:Reception rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Solar Radiance Sensor.\nentitybrick:Solar_Radiance_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Solar_Radiance_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent NO2 data available from NO2 Sensor 5.02?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for Pressure Sensor.\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Pressure_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.14 located?\nentitybldg:dust5.14",
    "target_text": "SELECT ?location WHERE { bldg:dust5.14 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Air Flow Setpoint.\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Makeup Water Valves?\nentitybrick:Makeup_Water_Valve",
    "target_text": "SELECT ?valve WHERE { ?valve a brick:Makeup_Water_Valve . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does On Off Command have?\nentitybrick:On_Off_Command",
    "target_text": "SELECT ?tag WHERE { brick:On_Off_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is functionally identical to the Max Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Min Hot Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak zone percent air flow reading for RM107B on the previous day?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current control value for the zone air temperature setpoint in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does the Hot Box belong to?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Box rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is being issued to the zone reheat valve in RM107B right now?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Heating Discharge Air Temperature Integral Time Parameter.\nentitybrick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and definition for the Switchgear.\nentitybrick:Switchgear",
    "target_text": "SELECT ?label ?definition WHERE { brick:Switchgear rdfs:label ?label . brick:Switchgear skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which narrower categories are defined for Humidity?\nentitybrick:Humidity",
    "target_text": "SELECT ?narrower WHERE { brick:Humidity skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current sensor reading for zone supply air flow in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Supply Air Humidity Sensor?\nentitybrick:Supply_Air_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substances for Supply Air Static Pressure Setpoint.\nentitybrick:Supply_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Static_Pressure_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label of   CO  Sensor 5.02?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Max Cooling Supply Air Flow Setpoint Limit represent?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Drench Hose?\nentitybrick:Drench_Hose",
    "target_text": "SELECT ?tag WHERE { brick:Drench_Hose brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the full details (label, broader) of Dynamic Pressure?\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?label (GROUP_CONCAT(?broader; separator=\", \") AS ?broaderList) WHERE { brick:Dynamic_Pressure rdfs:label ?label . OPTIONAL { brick:Dynamic_Pressure skos:broader ?broader . } } GROUP BY ?label"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Humidity_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to  Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me what the Chilled Water Flow Sensor detects in the system.\nentitybrick:Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air differential pressure sensor in the central lobby.\nentitybldg:central-lobby \n brick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Differential_Pressure_Sensor ; brick:hasLocation bldg:central-lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a full description of Gas?\nentitybrick:Gas",
    "target_text": "DESCRIBE brick:Gas\nWHERE { brick:Gas ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from  Ethyl Alcohol /C2H5CH Sensor 5.02 for a specific date, for example 2025-02-15.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the No Water Alarm?\nentitybrick:No_Water_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:No_Water_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for  Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of Outside?\nentitybrick:Outside",
    "target_text": "SELECT ?type WHERE { brick:Outside a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating zone air temperature setpoint in the Supply Room.\nentitybldg:Supply_Room \n brick:Occupied_Heating_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all attributes associated with Gasoline.\nentitybrick:Gasoline",
    "target_text": "SELECT ?property ?value WHERE { brick:Gasoline ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Max Temperature Setpoint Limit.\nentitybrick:Max_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Temperature_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Hot Water Radiator?\nentitybrick:Hot_Water_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the classification and metadata tags for Availability Status.\nentitybrick:Availability_Status",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Availability_Status rdfs:subClassOf ?superclass . brick:Availability_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to the Smoke Detection Alarm?\nentitybrick:Smoke_Detection_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Smoke_Detection_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor5.05's Ethyl Alcohol /C2H5CH  readings?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification ofCombustible Gas Smoke MQ2 Sensor 5.01.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of  Air Quality Level 5.01.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Bypass Command?\nentitybrick:Bypass_Command",
    "target_text": "SELECT ?tag WHERE { brick:Bypass_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Dewpoint Sensor includes the tag 'Air'?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is currently applied to the zone air damper in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the TVOC  reading from sensor 5.01 right now?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints must a Ceiling Fan follow?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?rule WHERE { brick:Ceiling_Fan sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Low Temperature Alarm?\nentitybrick:Low_Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Low_Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the synonym for AHU in the Brick schema?\nentitybrick:AHU",
    "target_text": "SELECT ?equiv WHERE { brick:AHU owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air differential pressure setpoint in the Classroom.\nentitybldg:Classroom \n brick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Classroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum  Air Quality sensor in sensor 5.04 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical zone air temperature data for RM107A for the previous month.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM2.5 particulate matter Level Sensor is set up in 5.03 and what kind is it?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of Unoccupied Heating Supply Air Flow Setpoint?\nentitybrick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?tag WHERE { brick:Steam_On_Off_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Condenser Water Valve?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest sensor output for the zone air temperature in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the steam usage sensor in the Gym.\nentitybldg:Gym \n brick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Steam_Usage_Sensor ; brick:hasLocation bldg:Gym ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I want to retrieve the label associated with Media Hot Desk.\nentitybrick:Media_Hot_Desk",
    "target_text": "SELECT ?label WHERE { brick:Media_Hot_Desk rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is unit MicroGM-PER-M3 an applicable unit for PM1Concentration?\nentitybrick:PM1_Concentration",
    "target_text": "ASK WHERE { brick:PM1_Concentration qudt:applicableUnit unit:MicroGM-PER-M3 . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Storage Room have the tag 'Room'?\nentitybrick:Storage_Room",
    "target_text": "ASK WHERE { brick:Storage_Room brick:hasAssociatedTag tag:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.04's Ethyl Alcohol /C2H5CH levels and building occupancy patterns.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone air damper command information for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Return Air?\nentitybrick:Return_Air",
    "target_text": "SELECT ?broader WHERE { brick:Return_Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Point a type of Class?\nentitybrick:Point",
    "target_text": "ASK WHERE { brick:Point rdfs:subClassOf brick:Class . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Tunnel?\nentitybrick:Tunnel",
    "target_text": "SELECT ?label ?definition WHERE { brick:Tunnel rdfs:label ?label . brick:Tunnel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which equipment includes a Heat Sink Temperature Sensor?\nentitybrick:hasPart",
    "target_text": "SELECT ?device WHERE { ?device brick:hasPart brick:Heat_Sink_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Fire Control Panel described in the ontology?\nentitybrick:Fire_Control_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Control_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the humidity sensor located in the east-zone and provide its name.\nentitybldg:east",
    "target_text": "SELECT ?sensor ?label WHERE { ?sensor a brick:Air_Humidity_Sensor ; brick:hasLocation bldg:east-Zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is an Alarm Delay Parameter a special type of Delay Parameter?\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Alarm_Delay_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'PID' one of the tags for Supply Air Proportional Gain Parameter?\nentitybrick:Supply_Air_Proportional_Gain_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Proportional_Gain_Parameter brick:hasAssociatedTag tag:PID . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Makeup Air Unit?\nentitybrick:Makeup_Air_Unit",
    "target_text": "SELECT ?label WHERE { brick:Makeup_Air_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.02's CO2  output contribute to the overall building  quality index?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about an Ammonia Sensor.\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Ammonia_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define an Atrium?\nentitybrick:Atrium",
    "target_text": "SELECT ?tag WHERE { brick:Atrium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date Combustible Gas Smoke MQ2 Sensor  level from sensor 5.04?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Coil?\nentitybrick:Coil",
    "target_text": "SELECT ?parent WHERE { brick:Coil rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the substance for the Outside Air Temperature High Reset Setpoint.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the ESS Panel have a descriptive explanation in BrickSchema?\nentitybrick:ESS_Panel",
    "target_text": "SELECT ?definition WHERE { brick:ESS_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does an Auditorium belong to, and what tags describe it?\nentitybrick:Auditorium",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Auditorium rdfs:subClassOf ?superclass . brick:Auditorium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Air CO Sensor?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_CO_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to the Speed Status?\nentitybrick:Speed_Status",
    "target_text": "SELECT ?tag WHERE { brick:Speed_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me if DOAS has another commonly used term.\nentitybrick:DOAS",
    "target_text": "SELECT ?alias WHERE { brick:DOAS brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of setpoint is a Condenser Water Flow Setpoint?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Flow_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical trend for Ethyl Alcohol /C2H5CH Sensor 5.03 from 01/01/2025 to 31/01/2025.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Natural Gas Seismic Shutoff Valve.\nentitybrick:Natural_Gas_Seismic_Shutoff_Valve",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas_Seismic_Shutoff_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Alarm?\nentitybrick:Alarm",
    "target_text": "SELECT ?label WHERE { brick:Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the  PM10 particulate matter Level Sensor readings from Sensor 5.05 help in predicting potential failures or recalibration needs?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Electrical Equipment?\nentitybrick:Electrical_Equipment",
    "target_text": "SELECT ?label WHERE { brick:Electrical_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the active heating command for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall zone heating mode command statistics for RM107A for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 located?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Entering Water Differential Pressure Integral Time Parameter?\nentitybrick:Entering_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Water_Differential_Pressure_Integral_Time_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air control temperature setpoint for RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest  PM2.5 particulate matter Level Sensor measurement from   Sensor 5.04.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule values of the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?rule WHERE { brick:Overridden_On_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the PM2.5 Level Sensor?\nentitybrick:PM2",
    "target_text": "SELECT ?label WHERE { brick:PM2.5_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Refrigerant_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Atrium?\nentitybrick:Atrium",
    "target_text": "SELECT ?definition WHERE { brick:Atrium skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Detention Room have?\nentitybrick:Detention_Room",
    "target_text": "SELECT ?tag WHERE { brick:Detention_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the Ethyl Alcohol /C2H5CH data from sensor5.05?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which concepts are closely related to Alternating Current Frequency?\nentitybrick:Alternating_Current_Frequency",
    "target_text": "SELECT ?related WHERE { brick:Alternating_Current_Frequency skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.02's data deviates from our smart building standards?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether Equipment is a subclass of brick:Entity.\nentitybrick:Equipment",
    "target_text": "ASK WHERE { brick:Equipment rdfs:subClassOf brick:Entity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the hierarchical classification of a Chilled Water Differential Pressure Integral Time Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if hasQuantity is an Asymmetric Property.\nentitybrick:hasQuantity",
    "target_text": "ASK WHERE { brick:hasQuantity a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of the Fire Alarm Control Panel?\nentitybrick:Fire_Alarm_Control_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Alarm_Control_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for  Alcohol Vapor MQ3 Gas Sensor  5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Exhaust Air Stack Flow Proportional Band Parameter categorized in the ontology?\nentitybrick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Waste Storage?\nentitybrick:Waste_Storage",
    "target_text": "SELECT ?label WHERE { brick:Waste_Storage rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest Alcohol Vapor MQ3 Gas Sensor  measurement from   Sensor 5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Occupied Air Temperature Cooling Setpoint?\nentitybrick:Occupied_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Air_Temperature_Cooling_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Radiant Ceiling Panel has the tag 'RC'.\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "ASK WHERE { brick:Radiant_Ceiling_Panel brick:hasAssociatedTag tag:RC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Entrance?\nentitybrick:Entrance",
    "target_text": "SELECT ?tag WHERE { brick:Entrance brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has temp5.54?\nentitybldg:temp5.54",
    "target_text": "SELECT ?room WHERE { bldg:temp5.54 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Heat_Exchanger rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Condenser Water Temperature Sensor have?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Heating Temperature Setpoint?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active setting of the zone air damper command in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air temperature setpoint for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air the same as Discharge Air?\nentitybrick:Supply_Air",
    "target_text": "ASK { brick:Supply_Air owl:sameAs brick:Discharge_Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the underfloor air plenum static pressure setpoint in the Workshop.\nentitybldg:Workshop \n brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Preheat Command?\nentitybrick:Preheat_Command",
    "target_text": "SELECT ?definition WHERE { brick:Preheat_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Thermostatic Mixing Valve.\nentitybrick:Thermostatic_Mixing_Valve",
    "target_text": "SELECT ?label ?definition WHERE { brick:Thermostatic_Mixing_Valve rdfs:label ?label . brick:Thermostatic_Mixing_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the key difference between a CO2 Differential Sensor and a CO2 Concentration Sensor?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO2_Differential_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Absorption Chiller considered energy-efficient?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what Terminal Unit does?\nentitybrick:Terminal_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Terminal_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Waste Storage?\nentitybrick:Waste_Storage",
    "target_text": "SELECT ?tag WHERE { brick:Waste_Storage brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the  Air Quality sensor installed in room 5.05.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.05 rdfs:label ?label . bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone air temperature data for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Solar Azimuth Angle Sensor's label and definition.\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Solar_Azimuth_Angle_Sensor rdfs:label ?label . brick:Solar_Azimuth_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of CO  readings from Sensor 5.03 for sustainability reporting.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Equipment?\nentitybrick:Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  PM1 particulate matter Level Sensor values from sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Return Air Temperature Sensor.\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Combustible Gas Smoke MQ2 Sensor  5.05 status across the smart home?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of space is an Auditorium?\nentitybrick:Auditorium",
    "target_text": "SELECT ?superclass WHERE { brick:Auditorium rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What superclass does the methane level sensor belong to?\nentitybrick:Methane_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Methane_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the  Ethyl Alcohol /C2H5CH sensor 5.02 and where it is installed.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is tag:Position associated with the Valve Position Command?\nentitybrick:Valve_Position_Command",
    "target_text": "ASK { brick:Valve_Position_Command brick:hasAssociatedTag tag:Position . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is complex power a subset of another power category?\nentitybrick:Complex_Power",
    "target_text": "SELECT ?category WHERE { brick:Complex_Power skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Transformer Room.\nentitybrick:Transformer_Room",
    "target_text": "SELECT ?tag WHERE { brick:Transformer_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Underfloor Air Plenum.\nentitybrick:Underfloor_Air_Plenum",
    "target_text": "SELECT ?label ?definition WHERE { brick:Underfloor_Air_Plenum rdfs:label ?label . brick:Underfloor_Air_Plenum skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.04 following in terms of CO2  for the past hour?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ozone_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Humidifier Fault Status?\nentitybrick:Humidifier_Fault_Status",
    "target_text": "SELECT ?tag WHERE { brick:Humidifier_Fault_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality sensor is set up in 5.04 and what kind is it?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.03's data deviates from our smart building standards?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Low Outside Air Temperature Enable Setpoint affect system operation?\nentitybrick:Low_Outside_Air_Temperature_Enable_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Low_Outside_Air_Temperature_Enable_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.03  Air Quality sensor level and is it within expected ranges?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a cooling demand sensor quantify?\nentitybrick:Cooling_Demand_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Cooling_Demand_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest humidity sensor data for 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  PM2.5 particulate matter Level Sensor measurements from Sensor 5.04 day-to-day?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Low Freeze Protect Temperature Parameter a type of temperature parameter?\nentitybrick:Low_Freeze_Protect_Temperature_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Low_Freeze_Protect_Temperature_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Max Occupied Heating Supply Air Flow Setpoint Limit related to Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much Oxygen,O2 is recorded by sensor 5.05 right now?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a complete list of attributes for Status.\nentitybrick:Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity associated with Supply Air Dewpoint Sensor.\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Oxygen,O2 sensor 5.01 and its location.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Reactive Energy Sensor?\nentitybrick:Reactive_Energy_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Reactive_Energy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current directive for the zone air control temperature setpoint in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with Availability Status.\nentitybrick:Availability_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Availability_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone supply air temperature in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Outside Air CO Sensor.\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_CO_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between  Air Quality sensor and temperature in the area monitored by Sensor 5.03?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Breakroom?\nentitybrick:Breakroom",
    "target_text": "SELECT ?label WHERE { brick:Breakroom rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has c2h5ch5.69?\nentitybldg:c2h5ch5.69",
    "target_text": "SELECT ?room WHERE { bldg:c2h5ch5.69 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which reference website is used to define Enthalpy?\nentitybrick:Enthalpy",
    "target_text": "SELECT ?source WHERE { brick:Enthalpy rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are narrower than Fluid?\nentitybrick:Fluid",
    "target_text": "SELECT ?narrower WHERE { brick:Fluid skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Overload_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Supply Air Flow Low Reset Setpoint.\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Hot Water Return Temperature Sensor a subclass of Return Water Temperature Sensor?\nentitybrick:Hot_Water_Return_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Hot_Water_Return_Temperature_Sensor rdfs:subClassOf brick:Return_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the LPG Natural Gas Town MQ5 Gas Sensor  measurements from sensor 5.01?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What environmental variable is adjusted using the Leaving Hot Water Flow Sensor?\nentitybrick:Leaving_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Hot_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide full information for the Electric Power Sensor?\nentitybrick:Electric_Power_Sensor",
    "target_text": "SELECT ?label ?definition ?parent ?quantity (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Electric_Power_Sensor rdfs:label ?label . brick:Electric_Power_Sensor skos:definition ?definition . OPTIONAL { brick:Electric_Power_Sensor rdfs:subClassOf ?parent . } OPTIONAL { brick:Electric_Power_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Electric_Power_Sensor brick:hasAssociatedTag ?tag . } } GROUP BY ?label ?definition ?parent ?quantity"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas is set up in room 5.03, and what category does it fall under?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Combustible Gas Smoke MQ2 Sensor  5.04 positioned?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded zone air damper command events for RM107B during the last weekend.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types of HVAC systems use Building Air Static Pressure Sensors?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Discharge' associated with Supply Air Temperature Low Reset Setpoint?\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Position Command measure?\nentitybrick:Position_Command",
    "target_text": "SELECT ?quantity WHERE { brick:Position_Command brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Combustible Gas Smoke MQ2 Sensor  level recorded by  Sensor 5.03 over the past 24 hours?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for  TVOC  Sensor 5.02 and its impact on indoor sustainability.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which unit is assigned to Rated Power Input?\nentitybrick:ratedPowerInput",
    "target_text": "SELECT ?unit WHERE { brick:ratedPowerInput qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Zone Air Cooling Temperature Setpoint.\nentitybrick:Zone_Air_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Zone_Air_Cooling_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current directive for the zone air control temperature in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is Max Supply Air Temperature Setpoint Limit a subclass of?\nentitybrick:Max_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Max_Supply_Air_Temperature_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Battery Room?\nentitybrick:Battery_Room",
    "target_text": "SELECT ?tag WHERE { brick:Battery_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Damper Position Status labeled in the ontology?\nentitybrick:Damper_Position_Status",
    "target_text": "SELECT ?label WHERE { brick:Damper_Position_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What node is linked to Point?\nentitybrick:Point",
    "target_text": "SELECT ?node WHERE { brick:Point sh:node ?node . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What insights can we draw from Sensor 5.03's data regarding energy consumption and HVAC efficiency?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list sample values for Temperature Coefficient?\nentitybrick:temperatureCoefficientofPmax",
    "target_text": "SELECT ?value WHERE { ?entity brick:temperatureCoefficientofPmax ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with Zone Air Temperature Setpoint?\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Zone_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What items are related to Wind Direction?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?related WHERE { brick:Wind_Direction skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.01 due for a recalibration based on its temperature output?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe chilled water differential pressure setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change in zone air control temperature setpoint for RM107B in the past week?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current Ethyl Alcohol /C2H5CH stats from sensor5.01.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for an Auditorium?\nentitybrick:Auditorium",
    "target_text": "SELECT ?rule WHERE { brick:Auditorium sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the  Illuminance Sensor levels recorded by Sensor 5.05?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Exhaust Air Flow Integral Time Parameter?\nentitybrick:Exhaust_Air_Flow_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Flow_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the supply air temperature setpoint records for AHU 01 over the past week.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor5.04 reported a significant drop or rise in Ethyl Alcohol /C2H5CH  recently?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of a Massage Room?\nentitybrick:Massage_Room",
    "target_text": "SELECT ?definition WHERE { brick:Massage_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.53 located?\nentitybldg:temp5.53",
    "target_text": "SELECT ?location WHERE { bldg:temp5.53 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does VAVRM112 include the tag 'Equipment'?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM112 brick:hasTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the PIR Sensor have?\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PIR_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the higher-level classification of a Battery Room?\nentitybrick:Battery_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Battery_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for Air Humidity Sensor 5.05 over time?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What environment does an Absolute Humidity Sensor operate in?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Ozone Level Sensor a subclass of?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Ozone_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Max Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water gauge pressure sensor in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Chilled_Water_Gauge_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Gauge_Pressure_Sensor ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Electric Energy Sensor have a quantity?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Electric_Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me both the label and the definition for the Solar Zenith Angle Sensor.\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Solar_Zenith_Angle_Sensor rdfs:label ?label . brick:Solar_Zenith_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Linear Speed?\nentitybrick:Linear_Speed",
    "target_text": "SELECT ?label WHERE { brick:Linear_Speed rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the econcycle start stop status in the Conference Room.\nentitybldg:Conference_Room \n brick:EconCycle_Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:EconCycle_Start_Stop_Status ; brick:hasLocation bldg:Conference_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current value of the zone air control temperature setpoint in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label of Air Quality Level 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for CO2  Sensor 5.01.\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Conference Room?\nentitybrick:Conference_Room",
    "target_text": "SELECT ?rule WHERE { brick:Conference_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Capacity Sensor'.\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Capacity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Humidity_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name referencing the Exhaust Air Stack Flow Setpoint.\nentitybrick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Stack_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Min Load Setpoint?\nentitybrick:Min_Load_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Min_Load_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Exhaust Air Humidity Sensor belong to?\nentitybrick:Exhaust_Air_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Speed Setpoint?\nentitybrick:Speed_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Speed_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.40?\nentitybldg:cotwo5.40",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.40 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM1 particulate matter Level Sensor 5.03 set up?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operating zone percent air flow in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Chilled Water System?\nentitybrick:Chilled_Water_System",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Auditorium.\nentitybrick:Auditorium",
    "target_text": "SELECT ?property ?value WHERE { brick:Auditorium ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Hallway represent?\nentitybrick:Hallway",
    "target_text": "SELECT ?definition WHERE { brick:Hallway skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I would like to know the sensor label for  Air temperature Sensor 5.03.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for the Hot Water Differential Pressure Proportional Band Parameter?\nentitybrick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is  Air Quality sensor 5.05 located in?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Hot Water Flow Sensor.\nentitybrick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Hot_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the  PM10 particulate matter Level Sensor 5.03 and its location.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Mode Status includes the tag 'Mode'.\nentitybrick:Mode_Status",
    "target_text": "ASK WHERE { brick:Mode_Status brick:hasAssociatedTag tag:Mode . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Load Shed Setpoint affect cooling system performance?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint ?property ?setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Equipment have brick:Entity as one of its superclasses?\nentitybrick:Equipment",
    "target_text": "ASK WHERE { brick:Equipment rdfs:subClassOf brick:Entity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Occupied Discharge Air Flow Setpoint?\nentitybrick:Occupied_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Enthalpy Setpoint?\nentitybrick:Enthalpy_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Enthalpy_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of  CO2  Sensor 5.03 based on recent readings.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the outside air temperature values for AHU 01 between 9 AM and 11 AM today?\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current directive for heating in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label for PM10 particulate matter Level Sensor 5.02?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air static pressure setpoint in the Cinema.\nentitybldg:Cinema \n brick:Exhaust_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Static_Pressure_Setpoint ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Temperature Tolerance Parameter.\nentitybrick:Temperature_Tolerance_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Tolerance_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Motor Current Sensor?\nentitybrick:Motor_Current_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Motor_Current_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor 5.05 reported a significant drop or rise in humidity recently?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Mixed Air Humidity Setpoint have?\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Leaving Domestic Hot Water Temperature Setpoint.\nentitybrick:Leaving_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Overload Alarm refer to?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Overload_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify whether Discharge Air is the same as Supply Air.\nentitybrick:Discharge_Air",
    "target_text": "ASK { brick:Discharge_Air owl:sameAs brick:Supply_Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if PM10 particulate matter Level Sensor 5.05 shows abnormal readings today.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Entering Water Temperature Proportional Band Parameter?\nentitybrick:Entering_Water_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current humidity value from sensor 5.01?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Condensate Leak Alarm a subclass of another alarm type?\nentitybrick:Condensate_Leak_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Condensate_Leak_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of Availability Status?\nentitybrick:Availability_Status",
    "target_text": "SELECT ?definition WHERE { brick:Availability_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Air.\nentitybrick:Air",
    "target_text": "SELECT ?label WHERE { brick:Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is currently applied to the zone reheat valve in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Wind Direction Sensor?\nentitybrick:Wind_Direction_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Wind_Direction_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label ofSound Noise loudness Sensor  5.04?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Exhaust Air Differential Pressure Setpoint categorized in the ontology?\nentitybrick:Exhaust_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Differential_Pressure_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label, definition, and tags for the Water Differential Temperature Setpoint.\nentitybrick:Water_Differential_Temperature_Setpoint",
    "target_text": "SELECT ?label ?definition ?tag WHERE { brick:Water_Differential_Temperature_Setpoint rdfs:label ?label . brick:Water_Differential_Temperature_Setpoint skos:definition ?definition . OPTIONAL { brick:Water_Differential_Temperature_Setpoint brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  CO2  Sensor 5.05 hanging out?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  Illuminance Sensor data from Sensor 5.05.\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Air CO2 Sensor?\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_CO2_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient Oxygen,O2 as measured by sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Max Supply Air Temperature Setpoint Limit.\nentitybrick:Max_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Supply_Air_Temperature_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all details about Leaving Water in RDF format.\nentitybrick:Leaving_Water",
    "target_text": "DESCRIBE brick:Leaving_Water\nWHERE { brick:Leaving_Water ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.03 for the past week and show me a summary.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.08 located?\nentitybldg:airq5.08",
    "target_text": "SELECT ?location WHERE { bldg:airq5.08 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.02 is keeping it real with our smart building air quality standards?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Return Air Dewpoint Sensor extends.\nentitybrick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_Dewpoint_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Hot Water Valve is a SUBCLASS OF Water Valve.\nentitybrick:Hot_Water_Valve",
    "target_text": "ASK WHERE { brick:Hot_Water_Valve rdfs:subClassOf brick:Water_Valve . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Temperature High Reset Setpoint related to Temperature High Reset Setpoint?\nentitybrick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_High_Reset_Setpoint rdfs:subClassOf brick:Temperature_High_Reset_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Water Meter.\nentitybrick:Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the Air Grains Sensor.\nentitybrick:Air_Grains_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Air_Grains_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure load shed reset status in the Attic.\nentitybldg:Attic \n brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status ; brick:hasLocation bldg:Attic ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the equivalent class for the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is pir5.52 located?\nentitybldg:pir5.52",
    "target_text": "SELECT ?location WHERE { bldg:pir5.52 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.02's data deviates from our smart building standards?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Vestibule.\nentitybldg:Vestibule \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Vestibule ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for humidity sensors 5.04 in our building?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the title of Gas?\nentitybrick:Gas",
    "target_text": "SELECT ?label WHERE { brick:Gas rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.02's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Generator Room?\nentitybrick:Generator_Room",
    "target_text": "SELECT ?definition WHERE { brick:Generator_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is   TVOC  Sensor 5.03?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is  PM2.5 particulate matter Level Sensor 5.05 located?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Outside Air Temperature High Reset Setpoint?\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?parent WHERE { brick:Steam_On_Off_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_CO2_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM2.5 particulate matter Level Sensor 5.02 at, like, in the building?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags define the High Humidity Alarm Parameter?\nentitybrick:High_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:High_Humidity_Alarm_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Outside Air Enthalpy Sensor?\nentitybrick:Outside_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Enthalpy_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Mixed Air Humidity Sensor.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Mixed_Air_Humidity_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Emergency Air Flow System do?\nentitybrick:Emergency_Air_Flow_System",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Air_Flow_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Collection Basin Water Level Alarm?\nentitybrick:Collection_Basin_Water_Level_Alarm",
    "target_text": "SELECT ?rule WHERE { brick:Collection_Basin_Water_Level_Alarm sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.02's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Retail Room.\nentitybrick:Retail_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Retail_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the  PM2.5 particulate matter Level Sensor data from sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Exhaust Air Differential Pressure Sensor measure?\nentitybrick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Radon Concentration Sensor?\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Radon_Concentration_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Condenser Water Temperature Sensor?\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling supply air flow setpoint in the Supply Room.\nentitybldg:Supply_Room \n brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Max Occupied Heating Supply Air Flow Setpoint Limit a subclass of Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  Air Humidity Sensor 5.01?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Mixed Air Temperature Sensor?\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Mixed_Air_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Gain Parameter?\nentitybrick:Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to Air Quality sensor 5.02?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Ablutions Room.\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Ablutions_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone percent air flow value from RM107B in the last 30 minutes?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name and definition for Voltage.\nentitybrick:Voltage",
    "target_text": "SELECT ?label ?definition WHERE { brick:Voltage rdfs:label ?label; skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide an explanation of the Hot Water Usage Sensor's function.\nentitybrick:Hot_Water_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Relay?\nentitybrick:Relay",
    "target_text": "SELECT ?definition WHERE { brick:Relay skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the NO2 measurements from Sensor 5.03 that might trigger a maintenance alert?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does PV Panel have?\nentitybrick:PV_Panel",
    "target_text": "SELECT ?tag WHERE { brick:PV_Panel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature setpoint in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Unoccupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Setpoint ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the torque sensor in the Board Room.\nentitybldg:Board_Room \n brick:Torque_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Torque_Sensor ; brick:hasLocation bldg:Board_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected humidity levels over the past quarter?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature heating setpoint in the Staircase.\nentitybldg:Staircase \n brick:Supply_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:Staircase ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Electric Power?\nentitybrick:Electric_Power",
    "target_text": "SELECT ?label WHERE { brick:Electric_Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the CO2  sensor 5.02 readings from yesterday.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Condenser Water Flow Sensor?\nentitybrick:Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?definition WHERE { brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Low Humidity Alarm play in building monitoring?\nentitybrick:Low_Humidity_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Low_Humidity_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Thermostatic Mixing Valve.\nentitybrick:Thermostatic_Mixing_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Thermostatic_Mixing_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Portfolio?\nentitybrick:Portfolio",
    "target_text": "SELECT ?definition WHERE { brick:Portfolio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Aggregate?\nentitybrick:aggregate",
    "target_text": "SELECT ?label WHERE { brick:aggregate rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the available measurements of Volume?\nentitybrick:volume",
    "target_text": "SELECT ?value WHERE { ?entity brick:volume ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the run request status in the Restroom.\nentitybldg:Restroom \n brick:Run_Request_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Run_Request_Status ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector for Ozone Concentration?\nentitybrick:Ozone_Concentration",
    "target_text": "SELECT ?vector WHERE { brick:Ozone_Concentration qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for Audio Visual Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Audio_Visual_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone air control temperature setpoint for room RM107A.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Differential Static Pressure support the unit MegaPA?\nentitybrick:Differential_Static_Pressure",
    "target_text": "ASK { brick:Differential_Static_Pressure qudt:applicableUnit unit:MegaPA . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality Level is deployed in room 5.01 and what is its kind?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Refrigerant Level Sensor?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Refrigerant_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Rated Maximum Current Output?\nentitybrick:ratedMaximumCurrentOutput",
    "target_text": "SELECT ?label WHERE { brick:ratedMaximumCurrentOutput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units associated with Phasor Angle.\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?unit WHERE { brick:Phasor_Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's Formaldehyde Level sensor 5.01 located?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the LPG Natural Gas Town MQ5 Gas Sensor  sensor located in room 5.05.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Effective Zone Air Temperature Setpoint labeled in the ontology?\nentitybrick:Effective_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Effective_Zone_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current configuration of the zone air damper command in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the adjust sensor in the Studio.\nentitybldg:Studio \n brick:Adjust_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Adjust_Sensor ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is PM1 particulate matter Level Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does the Heating Enable Command belong to?\nentitybrick:Heating_Enable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Enable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if VAVRM103 includes the tag 'Equipment'.\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM103 brick:hasTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone air temperature in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the superclass of Water Differential Temperature Sensor.\nentitybrick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Water_Differential_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Supply Air Flow Setpoint?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Tunnel a subclass of?\nentitybrick:Tunnel",
    "target_text": "SELECT ?parent WHERE { brick:Tunnel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Flow Sensor include the tag 'Sensor'?\nentitybrick:Flow_Sensor",
    "target_text": "ASK WHERE { brick:Flow_Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Zone Air Temperature Sensor?\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of Gas?\nentitybrick:Gas",
    "target_text": "SELECT ?label WHERE { brick:Gas rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the total number of measurement units for Thermal Energy.\nentitybrick:Thermal_Energy",
    "target_text": "SELECT (COUNT(?unit) AS ?unitCount) WHERE { brick:Thermal_Energy qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the broader categories for Occupancy_Count.\nentitybrick:Occupancy_Count",
    "target_text": "SELECT ?broader WHERE { brick:Occupancy_Count skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.05 regarding humidity?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Chilled Water Flow Sensor related to Chilled Water Flow Sensor?\nentitybrick:Leaving_Chilled_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Flow_Sensor rdfs:subClassOf brick:Chilled_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Water Temperature Setpoint?\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the hierarchical classification of a Condenser Water Bypass Valve?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Bypass_Valve rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Occupied Return Air Temperature Setpoint.\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Return_Air_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Cooling Command?\nentitybrick:Cooling_Command",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class for Unoccupied Cooling Supply Air Flow Setpoint.\nentitybrick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the humidity setpoint in the Lecture Hall.\nentitybldg:Lecture_Hall \n brick:Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Humidity_Setpoint ; brick:hasLocation bldg:Lecture_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Temperature Alarm?\nentitybrick:Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Breakroom.\nentitybrick:Breakroom",
    "target_text": "SELECT ?label WHERE { brick:Breakroom rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Motor Control Center?\nentitybrick:Motor_Control_Center",
    "target_text": "SELECT ?label WHERE { brick:Motor_Control_Center rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current reading of the zone supply air temperature sensor in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Employee Entrance Lobby?\nentitybrick:Employee_Entrance_Lobby",
    "target_text": "SELECT ?label WHERE { brick:Employee_Entrance_Lobby rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature setpoint in the Banquet Hall.\nentitybldg:Banquet_Hall \n brick:Unoccupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Setpoint ; brick:hasLocation bldg:Banquet_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which property is the inverse of Has part?\nentitybrick:hasPart",
    "target_text": "SELECT ?inverse WHERE { brick:hasPart owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the associated tags for Standby Unit On Off Status?\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?tag WHERE { brick:Standby_Unit_On_Off_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of tracking Cloudage?\nentitybrick:Cloudage",
    "target_text": "SELECT ?definition WHERE { brick:Cloudage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which categories does the Hot Water Differential Temperature Sensor fall?\nentitybrick:Hot_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Differential_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check whether Location is a subclass of brick:Entity.\nentitybrick:Location",
    "target_text": "ASK WHERE { brick:Location rdfs:subClassOf brick:Entity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the Hot Box?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Box brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the air Temperature sensor 5.04 and where it is installed.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Temperature_Sensor_5.04 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Storage Room.\nentitybrick:Storage_Room",
    "target_text": "SELECT ?label WHERE { brick:Storage_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entities carry the 'Sensor' tag in this ontology?\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?class WHERE {  ?class brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Humidity Setpoint extends.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Humidity_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.23 located?\nentitybldg:cotwo5.23",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.23 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the applicable units for PhasorAngle.\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?unit WHERE { brick:Phasor_Angle qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name/label for Static Pressure Setpoint?\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Enclosed Office include Office?\nentitybrick:Enclosed_Office",
    "target_text": "ASK WHERE { brick:Enclosed_Office rdfs:subClassOf brick:Office . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units are used for Thermal Power?\nentitybrick:Thermal_Power",
    "target_text": "SELECT ?unit WHERE { brick:Thermal_Power qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Outside Air Humidity Setpoint have?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Occupied Cooling Temperature Deadband Setpoint?\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?type WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the zone air temperature setpoint updating for RM107B during the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.13located?\nentitybldg:voc5.13",
    "target_text": "SELECT ?location WHERE { bldg:voc5.13 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name forSound Noise loudness Sensor  5.05.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving water flow setpoint in the Meeting Room.\nentitybldg:Meeting_Room \n brick:Leaving_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Water_Flow_Setpoint ; brick:hasLocation bldg:Meeting_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties for the Max Discharge Air Static Pressure Setpoint Limit.\nentitybrick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?property ?value WHERE { brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.05's LPG Natural Gas Town MQ5 Gas Sensor  output contribute to the overall building air quality index?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What insights can we draw from Sensor 5.03's data regarding energy consumption and HVAC efficiency?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Occupied Return Air Temperature Setpoint?\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What properties are linked to the Enable Differential Temperature Command?\nentitybrick:Enable_Differential_Temperature_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Enable_Differential_Temperature_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Frequency Setpoint?\nentitybrick:Frequency_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Frequency_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all the information about Gas in the form of its properties and their values?\nentitybrick:Gas",
    "target_text": "SELECT ?property ?value WHERE { brick:Gas ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.02 of CO ?\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas trends and their variation over the last 24 hours in room or sensor 5.05.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical zone air damper command data for RM107B for the previous month.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Cooling Start Stop Status indicate system operation?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Start_Stop_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Chilled Water Discharge Flow Setpoint?\nentitybrick:Chilled_Water_Discharge_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Discharge_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Radiation Hot Water System.\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Radiation_Hot_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Thermally Activated Building System Panel include Radiant Panel?\nentitybrick:Thermally_Activated_Building_System_Panel",
    "target_text": "ASK WHERE { brick:Thermally_Activated_Building_System_Panel rdfs:subClassOf brick:Radiant_Panel . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What narrower concepts include Level?\nentitybrick:Level",
    "target_text": "SELECT ?narrower WHERE { brick:Level skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for System.\nentitybrick:System",
    "target_text": "SELECT ?tag WHERE { brick:System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Exhaust Air Humidity Sensor.\nentitybrick:Exhaust_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.04?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Office.\nentitybrick:Office",
    "target_text": "SELECT ?tag WHERE { brick:Office brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Off Command?\nentitybrick:Off_Command",
    "target_text": "SELECT ?label WHERE { brick:Off_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.01's data over the last month?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the High Air Flow Alarm.\nentitybrick:High_Air_Flow_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:High_Air_Flow_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what isVirtualMeter is called.\nentitybrick:isVirtualMeter",
    "target_text": "SELECT ?label WHERE { brick:isVirtualMeter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Differential Dynamic Pressure have its delta flag set to true?\nentitybrick:Differential_Dynamic_Pressure",
    "target_text": "ASK { brick:Differential_Dynamic_Pressure qudt:isDeltaQuantity true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone supply air flow measurements were logged for RM107A during the early hours today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is Motion Sensor a subclass of?\nentitybrick:Motion_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Motion_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for PID Parameter?\nentitybrick:PID_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:PID_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Humidity Setpoint is equivalent to Discharge Air Humidity Setpoint.\nentitybrick:Supply_Air_Humidity_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Humidity_Setpoint owl:equivalentClass brick:Discharge_Air_Humidity_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.64 located?\nentitybldg:mqfive5.64",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.64 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasAssociatedTag related to Relationship?\nentitybrick:hasAssociatedTag",
    "target_text": "ASK WHERE { brick:hasAssociatedTag rdfs:subPropertyOf brick:Relationship . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pm1 sensor in the south east zone.\nentitybldg:south-east-zone \n brick:PM1_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:PM1_Sensor ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a cooling discharge air temperature deadband setpoint defined under another class?\nentitybrick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where Ethyl Alcohol /C2H5CH Sensor 5.03 is placed.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in LPG Natural Gas Town MQ5 Gas Sensor  from Sensor 5.03 could be used to forecast future maintenance needs?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of a Building Gas Meter?\nentitybrick:Building_Gas_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Building_Gas_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.68 located?\nentitybldg:c2h5ch5.68",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.68 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What class is Occupied Cooling Discharge Air Flow Setpoint referring to as an alias?\nentitybrick:Occupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter differential pressure sensor in the Art Room.\nentitybldg:Art_Room \n brick:Filter_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Differential_Pressure_Sensor ; brick:hasLocation bldg:Art_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Measured Module Conversion Efficiency?\nentitybrick:measuredModuleConversionEfficiency",
    "target_text": "SELECT ?label WHERE { brick:measuredModuleConversionEfficiency rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Pressure' one of the tags for Pressure Status?\nentitybrick:Pressure_Status",
    "target_text": "ASK WHERE { brick:Pressure_Status brick:hasAssociatedTag tag:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes are linked to the Discharge Air Temperature High Reset Setpoint.\nentitybrick:Discharge_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_High_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air co2 sensor in the south west zone.\nentitybldg:south-west-zone \n brick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_CO2_Sensor ; brick:hasLocation bldg:south-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which more specific concepts are classified under Mass?\nentitybrick:Mass",
    "target_text": "SELECT ?narrower WHERE { brick:Mass skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone reheat valve command detected for RM107A over the last 3 hours?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about the role of relative humidity in air quality.\nentitybrick:Humidity",
    "target_text": "ASK WHERE { brick:Humidity skos:narrower brick:Relative_Humidity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label and definition for the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Return_Air_Humidity_Setpoint rdfs:label ?label . brick:Return_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Dewpoint Sensor extends.\nentitybrick:Outside_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Dewpoint_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification ofFormaldehyde Level sensor 5.01?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent CO  data available from CO  Sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all stored information about the Employee Entrance Lobby.\nentitybrick:Employee_Entrance_Lobby",
    "target_text": "SELECT ?property ?value WHERE { brick:Employee_Entrance_Lobby ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the  Air Quality Level data from Sensor 5.04 for the past year.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Leaving Hot Water Temperature Load Shed Status?\nentitybrick:Leaving_Hot_Water_Temperature_Load_Shed_Status",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Leaving_Hot_Water_Temperature_Load_Shed_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Time Setpoint.\nentitybrick:Time_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Time_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Differential Pressure Sensor a subclass of Air Differential Pressure Sensor?\nentitybrick:Supply_Air_Differential_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Differential_Pressure_Sensor rdfs:subClassOf brick:Air_Differential_Pressure_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for hasPoint?\nentitybrick:hasPoint",
    "target_text": "SELECT ?label WHERE { brick:hasPoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a delay parameter control?\nentitybrick:Delay_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Delay_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for  Oxygen,O2 Sensor 5.05.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which air humidity sensor 5.02 are we talking about and where is it placed?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Max Discharge Air Static Pressure Setpoint Limit?\nentitybrick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Leaving Condenser Water Temperature Sensor.\nentitybrick:Leaving_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Condenser_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.01.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is related to Phasor Angle?\nentitybrick:Phasor_Angle",
    "target_text": "SELECT ?related WHERE { brick:Phasor_Angle skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Zone CO2 Level Sensor?\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_CO2_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the difference between an Absorption Chiller and a Vapor Compression Chiller?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water differential temperature sensor in the Utility Room.\nentitybldg:Utility_Room \n brick:Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Differential_Temperature_Sensor ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the TVOC Level Sensor.\nentitybrick:TVOC_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:TVOC_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of the Fire Alarm in the system?\nentitybrick:Fire_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the latest zone reheat valve command event recorded for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?rule WHERE { brick:Control_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is CO2  Sensor 5.01 located in?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Lobby.\nentitybrick:Lobby",
    "target_text": "SELECT ?definition WHERE { brick:Lobby skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Year Built is called.\nentitybrick:yearBuilt",
    "target_text": "SELECT ?label WHERE { brick:yearBuilt rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What BrickSchema information is defined for the Discharge Air Temperature Low Reset Setpoint?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Outside Air Humidity Sensor.\nentitybrick:Outside_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Mixed Air Humidity Sensor.\nentitybrick:Mixed_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Mixed_Air_Humidity_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Power Sensor.\nentitybrick:Power_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Power_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:isDefinedBy value for Solar Irradiance?\nentitybrick:Solar_Irradiance",
    "target_text": "SELECT ?definedBy WHERE { brick:Solar_Irradiance rdfs:isDefinedBy ?definedBy . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for  Alcohol Vapor MQ3 Gas Sensor  5.01.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name/label for VAV.\nentitybrick:VAV",
    "target_text": "SELECT ?label WHERE { brick:VAV rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Vent Operating Mode Status?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Vent_Operating_Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Supply Air Temperature Alarm.\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the mode status in the Studio.\nentitybldg:Studio \n brick:Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Mode_Status ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Radiant Panel Temperature Setpoint call itself?\nentitybrick:Radiant_Panel_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Radiant_Panel_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Heating Ventilation Air Conditioning System extends.\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Ventilation_Air_Conditioning_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM2.5 particulate matter Level Sensor 5.02 and where is it set up?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Entering Water Flow Sensor?\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Pressure Setpoint set?\nentitybrick:Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all RDF properties for a Disconnect Switch.\nentitybrick:Disconnect_Switch",
    "target_text": "SELECT ?property ?value WHERE { brick:Disconnect_Switch ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in  PM10 particulate matter Level Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasPoint a type of Asymmetric Property?\nentitybrick:hasPoint",
    "target_text": "ASK WHERE { brick:hasPoint a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night  Air Quality sensor variations as captured by Sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cooling Enable Command classified in the ontology?\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Enable_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Deadband Setpoint defined?\nentitybrick:Deadband_Setpoint",
    "target_text": "ASK { brick:Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name referencing the Entering Condenser Water Flow Sensor.\nentitybrick:Entering_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Condenser_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Entering Medium Temperature Hot Water Temperature Sensor identified in BrickSchema?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Makeup Air Unit?\nentitybrick:Makeup_Air_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Makeup_Air_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  CO2  Sensor 5.05 installed?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with Limit?\nentitybrick:Limit",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in  CO  Sensor 5.04's data over the last month?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Zone Air Humidity Sensor.\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_Air_Humidity_Sensor rdfs:label ?label . brick:Zone_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Min Supply Air Static Pressure Setpoint Limit include Min Static Pressure Setpoint Limit?\nentitybrick:Min_Supply_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Supply_Air_Static_Pressure_Setpoint_Limit rdfs:subClassOf brick:Min_Static_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for Air Quality Level 5.01.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which CO2  sensor is deployed in room 5.05 and what is its kind?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the  PM1 particulate matter Level Sensor measurements from Sensor 5.05 that might trigger a maintenance alert?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties and values for Water.\nentitybrick:Water",
    "target_text": "SELECT ?property ?value WHERE { brick:Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Roof.\nentitybldg:Roof \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Roof ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply condenser water flow sensor in the Reception.\nentitybldg:Reception \n brick:Supply_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Condenser_Water_Flow_Sensor ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Enable Fixed Temperature Command?\nentitybrick:Enable_Fixed_Temperature_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Fixed_Temperature_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to  Air temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the full information of the Cooling Supply Air Temperature Integral Time Parameter including label, associated tags, and equivalent class.\nentitybrick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?label ?tag ?eq WHERE { brick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter rdfs:label ?label . OPTIONAL { brick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?eq . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the unit type for Rated Module Conversion Efficiency.\nentitybrick:ratedModuleConversionEfficiency",
    "target_text": "SELECT ?unit WHERE { brick:ratedModuleConversionEfficiency qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Unoccupied Cooling Temperature Deadband Setpoint indicate?\nentitybrick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Direction Command?\nentitybrick:Direction_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Direction_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Supply Air Flow High Reset Setpoint?\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.15?\nentitybldg:hcho5.15",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.15 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is a Cooling Tower used?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Surveillance Camera.\nentitybrick:Surveillance_Camera",
    "target_text": "SELECT ?parent WHERE { brick:Surveillance_Camera rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the unit of measurement for Operational Stage Count?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?unit WHERE { brick:operationalStageCount qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the count of properties applicable to a deprecation shape.\nentitybrick:DeprecationShape",
    "target_text": "SELECT (COUNT(?property) AS ?propcount) WHERE { brick:DeprecationShape sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average delay in reporting Ethyl Alcohol /C2H5CH data by Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Temperature Setpoint?\nentitybrick:Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity for Supply Air Dewpoint Sensor?\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Steam Valve a subclass of?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest supply air temperature setpoint reading for AHU 01 from the last 2 hours.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.02's  Illuminance Sensor readings?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Radon Concentration Sensor.\nentitybrick:Radon_Concentration_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Radon_Concentration_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Temperature Alarm Sensitivity Parameter.\nentitybrick:Temperature_Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Alarm_Sensitivity_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is a Chilled Water Discharge Temperature Sensor?\nentitybrick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Discharge_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.05 is placed.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Absorption Chiller classified?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?superclass WHERE { brick:Absorption_Chiller rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all subcategories under Water.\nentitybrick:Water",
    "target_text": "SELECT ?narrower WHERE { brick:Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a Luminance Sensor measure?\nentitybrick:Luminance_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Luminance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class for Hallway?\nentitybrick:Hallway",
    "target_text": "SELECT ?superclass WHERE { brick:Hallway rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Min Water Level Alarm a subclass of?\nentitybrick:Min_Water_Level_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Min_Water_Level_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall  quality in our smart environment using only TVOC  sensor 5.03?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Unoccupied Heating Mode Status?\nentitybrick:Unoccupied_Heating_Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Heating_Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Air Enthalpy Sensor?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Return_Air_Enthalpy_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone supply air temperature sensor currently indicate in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category best describes a Building Chilled Water Meter?\nentitybrick:Building_Chilled_Water_Meter",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Chilled_Water_Meter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.67 located?\nentitybldg:cotwo5.67",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.67 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the tags for the Return Air Filter.\nentitybrick:Return_Air_Filter",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Filter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Demand Sensor?\nentitybrick:Demand_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Demand_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average TVOC  level from  TVOC  Sensor 5.05 for a specific date, for example 2025-02-15.\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Sash Position Sensor.\nentitybrick:Sash_Position_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Sash_Position_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'PlanckDensity' a standard unit for absolute humidity?\nentitybrick:Absolute_Humidity",
    "target_text": "ASK { brick:Absolute_Humidity qudt:applicableUnit unit:PlanckDensity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for   TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for Air Quality sensor 5.02.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone percent air flow status as detected in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqnine5.69?\nentitybldg:mqnine5.69",
    "target_text": "SELECT ?room WHERE { bldg:mqnine5.69 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Outside Air Voltage Sensor?\nentitybrick:Output_Voltage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Output_Voltage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the points that VAVRM103 has.\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:VAVRM103 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Cooling Supply Air Temperature Proportional Band Parameter inherit?\nentitybrick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Power Flow is called.\nentitybrick:powerFlow",
    "target_text": "SELECT ?label WHERE { brick:powerFlow rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the Oxygen,O2 data from Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Occupied Cooling Temperature Setpoint.\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Cooling_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in Combustible Gas Smoke MQ2 Sensor  5.02?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is CO  Sensor 5.01 showing any signs of potential failure based on recent data?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Direct Expansion Cooling Coil a subclass of another cooling component?\nentitybrick:Direct_Expansion_Cooling_Coil",
    "target_text": "SELECT ?superclass WHERE { brick:Direct_Expansion_Cooling_Coil rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Baseboard Radiator?\nentitybrick:Baseboard_Radiator",
    "target_text": "SELECT ?tag WHERE { brick:Baseboard_Radiator brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum zone air temperature detected in RM107A over the last 3 hours?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pre filter status in the Reception.\nentitybldg:Reception \n brick:Pre_Filter_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pre_Filter_Status ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the Hot Water Differential Temperature Sensor?\nentitybrick:Hot_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all mixed air temperature readings for AHU 02 this morning?\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Cubicle?\nentitybrick:Cubicle",
    "target_text": "SELECT ?label WHERE { brick:Cubicle rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Visitor Lobby refer to?\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?definition WHERE { brick:Visitor_Lobby skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Building Air Static Pressure Sensor belong to?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Min Outside Air Flow Setpoint Limit extends.\nentitybrick:Min_Outside_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?parent WHERE { brick:Min_Outside_Air_Flow_Setpoint_Limit rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply water flow sensor in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Supply_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Water_Flow_Sensor ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest LPG Natural Gas Town MQ5 Gas Sensor  measurement from   Sensor 5.03.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient  Air Quality sensor as measured by sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which QUDT reference is linked to Dewpoint?\nentitybrick:Dewpoint",
    "target_text": "SELECT ?reference WHERE { brick:Dewpoint brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.05 a member of?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone heating mode command state for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Entity have the type owl:Class?\nentitybrick:Entity",
    "target_text": "ASK WHERE { brick:Entity a owl:Class . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of PM2.5 particulate matter Level Sensor 5.02, please.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Majlis?\nentitybrick:Majlis",
    "target_text": "SELECT ?tag WHERE { brick:Majlis brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classification tags are linked to access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Access_Control_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the external reference and timeseries ID for bldg1.AHU.AHU02.CCV for readings within the last hour.\nentitybrick:SensorReading",
    "target_text": "SELECT ?extRef ?tsId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?reference . ?reference ref:hasTimeseriesId ?tsId . ?reading a brick:SensorReading ; brick:isPointOf bldg:bldg1.AHU.AHU02.CCV ; ref:timestamp ?time . FILTER(?time >= NOW() - \"PT1H\"^^xsd:duration) BIND(?reference AS ?extRef) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties of Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Air_Quality_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  Ethyl Alcohol /C2H5CH level recorded by Sensor 5.04 over the past 24 hours?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Zone Unoccupied Load Shed Command?\nentitybrick:Zone_Unoccupied_Load_Shed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Unoccupied_Load_Shed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the NO2 data from sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Isolation Valve reference any external sources?\nentitybrick:Isolation_Valve",
    "target_text": "SELECT ?seeAlso WHERE { brick:Isolation_Valve rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the PM10 Level Sensor?\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PM10_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available from PM10 particulate matter Level Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the total number of alternative names for AHU?\nentitybrick:AHU",
    "target_text": "SELECT (COUNT(?equiv) AS ?equiv_count) WHERE { brick:AHU owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Duct Pressure Status include the tag 'Air'?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "ASK WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Entering Water Temperature Integral Time Parameter?\nentitybrick:Entering_Water_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Temperature_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Return Air CO2 Setpoint?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_CO2_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Zone Air Temperature Sensor.\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Entering Condenser Water Temperature Setpoint.\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Combustible Gas Smoke MQ2 Sensor  5.02.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Leaving Water Flow Setpoint.\nentitybrick:Leaving_Water_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Water_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Bench Space important in sports facilities?\nentitybrick:Bench_Space",
    "target_text": "SELECT ?definition WHERE { brick:Bench_Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label along with the definition for the Unoccupied Heating Temperature Setpoint?\nentitybrick:Unoccupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Unoccupied_Heating_Temperature_Setpoint rdfs:label ?label . brick:Unoccupied_Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types of media facilities use Broadcast Rooms?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Broadcast_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Portfolio inherit?\nentitybrick:Portfolio",
    "target_text": "SELECT ?parent WHERE { brick:Portfolio rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there a functionally identical class for the Discharge Air Temperature Setpoint Limit?\nentitybrick:Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current operational command of the zone reheat valve in RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Air Humidity Sensor 5.05 chillin' in the building?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the skos:broader values for Radiant Temperature?\nentitybrick:Radiant_Temperature",
    "target_text": "SELECT ?broader WHERE { brick:Radiant_Temperature skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can apparent power be derived from apparent energy?\nentitybrick:Apparent_Energy",
    "target_text": "ASK WHERE { brick:Apparent_Energy skos:broader brick:Electric_Energy . brick:Apparent_Power skos:broader brick:Electric_Power . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Deionized Water Alarm have?\nentitybrick:Deionized_Water_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Deionized_Water_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Valve Status?\nentitybrick:Valve_Status",
    "target_text": "SELECT ?parent WHERE { brick:Valve_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Exhaust Damper?\nentitybrick:Exhaust_Damper",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Damper rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Leaving Water Differential Pressure Deadband Setpoint a type of differential pressure setpoint?\nentitybrick:Leaving_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Remotely On Off Status inherit?\nentitybrick:Remotely_On_Off_Status",
    "target_text": "SELECT ?parent WHERE { brick:Remotely_On_Off_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Condensate Leak Alarm.\nentitybrick:Condensate_Leak_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Condensate_Leak_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Common Space.\nentitybrick:Common_Space",
    "target_text": "SELECT ?definition WHERE { brick:Common_Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Emergency Power Off System Activated By Leak Detection System Status?\nentitybrick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define an Auditorium?\nentitybrick:Auditorium",
    "target_text": "SELECT ?tag WHERE { brick:Auditorium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is  Oxygen,O2 Sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is NO2 Sensor 5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone percent air flow status as detected in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Proportional Gain Parameter described?\nentitybrick:Proportional_Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Proportional_Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?label WHERE { brick:Formaldehyde_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is measured by Return Air Temperature Setpoint?\nentitybrick:Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current temperature stats from sensor 5.03.\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the source that defines PM10Concentration.\nentitybrick:PM10_Concentration",
    "target_text": "SELECT ?resource WHERE { brick:PM10_Concentration rdfs:isDefinedBy ?resource . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.05 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensors and controls are present in AHU01?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU01 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Load Shed Setpoint.\nentitybrick:Load_Shed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Load_Shed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Discharge Air Temperature Low Reset Setpoint declare an owl:equivalentClass?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Temperature Alarm?\nentitybrick:Temperature_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Preheat Demand Setpoint?\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Preheat_Demand_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all rooms on Floor 1?\nentitybrick:isPartOf",
    "target_text": "SELECT ?room WHERE { ?room brick:isPartOf bldg:floor1 . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What categories apply to RM120?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM120 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum Combustible Gas Smoke MQ2 Sensor  recorded by Sensor 5.05 last week?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what a Breaker Panel does?\nentitybrick:Breaker_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Breaker_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label ofCombustible Gas Smoke MQ2 Sensor 5.03?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to a Battery Energy Storage System.\nentitybrick:Battery_Energy_Storage_System",
    "target_text": "SELECT ?tag WHERE { brick:Battery_Energy_Storage_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is NO2 Sensor 5.04 at, like, in the building?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.52 located?\nentitybldg:c2h5ch5.52",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.52 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Generation Sensor?\nentitybrick:Generation_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Generation_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for Illuminance?\nentitybrick:Illuminance",
    "target_text": "SELECT ?label WHERE { brick:Illuminance rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for NO2 Sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class does Hazardous Materials Storage belong to?\nentitybrick:Hazardous_Materials_Storage",
    "target_text": "SELECT ?superclass WHERE { brick:Hazardous_Materials_Storage rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for the zone air temperature in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Water Temperature Setpoint represent?\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does the Outside Air Humidity Sensor have?\nentitybrick:Outside_Air_Humidity_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Refrigerant_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Formaldehyde Level sensor 5.03 positioned?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active zone air damper command in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Temperature Sensor 5.04 set up?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.14 located?\nentitybldg:hcho5.14",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.14 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Max Unoccupied Heating Supply Air Flow Setpoint Limit indicate?\nentitybrick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of a Jet Nozzle Air Diffuser in air distribution?\nentitybrick:Jet_Nozzle_Air_Diffuser",
    "target_text": "SELECT ?definition WHERE { brick:Jet_Nozzle_Air_Diffuser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the humidity values from sensor 5.04?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  Illuminance Sensor measured by Sensor 5.05 during peak occupancy hours?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Hot Water Temperature Setpoint?\nentitybrick:Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the  PM10 particulate matter Level Sensor installed in room 5.05.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.02 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Occupancy Command refer to?\nentitybrick:Occupancy_Command",
    "target_text": "SELECT ?definition WHERE { brick:Occupancy_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is CO2  Sensor 5.01 located?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for Sound Noise loudness Sensor  from sensor 5.01.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the inverse property of is associated with?\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?inverse WHERE { brick:isAssociatedWith owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from  Air Quality sensor 5.03 indicate any potential issues with air quality in the building?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name forFormaldehyde Level sensor 5.03.\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Formaldehyde_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the domestic hot water differential pressure sensor in the Workshop.\nentitybldg:Workshop \n brick:Domestic_Hot_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Domestic_Hot_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current value indicated by the zone percent air flow sensor in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between  PM1 particulate matter Level Sensor and temperature in the area monitored by Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure load shed setpoint in the Elevator.\nentitybldg:Elevator \n brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date  Air Quality Level level from sensor 5.05?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Cooling Start Stop Status?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Start_Stop_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_On_Off_Command rdfs:label ?label . brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the chilled water supply temperature recorded in the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.01 LPG Natural Gas Town MQ5 Gas Sensor  level and is it within expected ranges?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for  Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Service Room?\nentitybrick:Service_Room",
    "target_text": "SELECT ?definition WHERE { brick:Service_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Supply Air Differential Pressure Setpoint.\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Differential_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Sound Noise loudness Sensor  5.04 is in use and what is its installation spot?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Switch Room a subclass of?\nentitybrick:Switch_Room",
    "target_text": "SELECT ?parent WHERE { brick:Switch_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Hot Water System.\nentitybrick:Hot_Water_System",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the measured quantity for the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Humidity_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by PM2.5 particulate matter Level Sensor 5.05's readings over the past 48 hours.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed inCombustible Gas Smoke MQ2 Sensor 5.01's data over the last month?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which NO2 sensor is in room 5.03 and what sensor class it belongs to?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . bldg:NO2_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Energy System?\nentitybrick:Energy_System",
    "target_text": "SELECT ?tag WHERE { brick:Energy_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Entering Hot Water Flow Sensor measure?\nentitybrick:Entering_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Hot_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Radiation Hot Water System.\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Radiation_Hot_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Mixed Air Flow Sensor refer to?\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all information associated with a Disable Status.\nentitybrick:Disable_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Disable_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name/label of Mode Status?\nentitybrick:Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the rdfs:subClassOf relationships for the Frequency Sensor.\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Frequency_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is Illuminance Sensor 5.01 a member of?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all zone air control temperature setpoint readings for RM107A this morning?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags are linked to the Low Return Air Temperature Alarm?\nentitybrick:Low_Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Low_Return_Air_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone supply air flow currently measured in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of Illuminance Sensor 5.02.\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification and associated tags are assigned to Audio Visual Equipment?\nentitybrick:Audio_Visual_Equipment",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Audio_Visual_Equipment rdfs:subClassOf ?superclass . brick:Audio_Visual_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Studio.\nentitybrick:Studio",
    "target_text": "SELECT ?label ?definition WHERE { brick:Studio rdfs:label ?label . brick:Studio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current sensor value for zone percent air flow in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current Sound Noise loudness Sensor  reading from Sensor 5.05?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category of Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between LPG Natural Gas Town MQ5 Gas Sensor  and temperature in the area monitored by Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average return air temperature reading from AHU 01 for the last 24 hours.\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all classification tags for the Adjust Sensor.\nentitybrick:Adjust_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Adjust_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is TVOC  Sensor 5.04 found?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Constant Air Volume Box does.\nentitybrick:Constant_Air_Volume_Box",
    "target_text": "SELECT ?definition WHERE { brick:Constant_Air_Volume_Box skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air temperature records for RM107A over the past week.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Torque Sensor?\nentitybrick:Torque_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Torque_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.03 for yesterday?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving chilled water flow sensor in the Terrace.\nentitybldg:Terrace \n brick:Leaving_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Chilled_Water_Flow_Sensor ; brick:hasLocation bldg:Terrace ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm whether a damper has more than one associated tag?\nentitybrick:Damper",
    "target_text": "ASK WHERE { brick:Damper brick:hasAssociatedTag ?tag1 . FILTER(EXISTS { brick:Damper brick:hasAssociatedTag ?tag2 . FILTER(?tag1 != ?tag2) }) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air flow setpoint in the Office.\nentitybldg:Office \n brick:Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Office ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Tint Command?\nentitybrick:Tint_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Tint_Command rdfs:label ?label . brick:Tint_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05 and where is it set up?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for  Air temperature Sensor 5.04.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has dust5.56?\nentitybldg:dust5.56",
    "target_text": "SELECT ?room WHERE { bldg:dust5.56 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is  Air Humidity Sensor 5.03?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Power Loss Alarm.\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Power_Loss_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the sensor indicate for the zone percent air flow in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pm1 level sensor in the Training Room.\nentitybldg:Training_Room \n brick:PM1_Level_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:PM1_Level_Sensor ; brick:hasLocation bldg:Training_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the superclass of Radiant Ceiling Panel.\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "SELECT ?parent WHERE { brick:Radiant_Ceiling_Panel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the inverse property of has sub-meter?\nentitybrick:hasSubMeter",
    "target_text": "SELECT ?inverse WHERE { brick:hasSubMeter owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the area information for bldg1.\nentitybrick:area",
    "target_text": "SELECT ?value ?unit WHERE { bldg:bldg1 brick:area ?area . ?area brick:value ?value . ?area brick:hasUnits ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the complete metadata set for a Building Hot Water Meter?\nentitybrick:Building_Hot_Water_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Building_Hot_Water_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the badge or label for Valve?\nentitybrick:Valve",
    "target_text": "SELECT ?label WHERE { brick:Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Max Occupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Rooftop?\nentitybrick:Rooftop",
    "target_text": "SELECT ?label WHERE { brick:Rooftop rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the disable hot water system outside air temperature setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Smoke Detection Alarm?\nentitybrick:Smoke_Detection_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Smoke_Detection_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Server Room?\nentitybrick:Server_Room",
    "target_text": "SELECT ?parent WHERE { brick:Server_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Heating Supply Air Temperature Proportional Band Parameter.\nentitybrick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for Ethyl Alcohol /C2H5CH from 5.05?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Visitor Lobby inherit?\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?parent WHERE { brick:Visitor_Lobby rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of   TVOC  Sensor 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the valve status in the Jacuzzi.\nentitybldg:Jacuzzi \n brick:Valve_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Valve_Status ; brick:hasLocation bldg:Jacuzzi ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to see the rdfs:label of brick:Max_Water_Temperature_Setpoint.\nentitybrick:Max_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Max_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure load shed status in the Cafe.\nentitybldg:Cafe \n brick:Chilled_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Oxygen,O2 level from sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the designated name for Air Quality Level 5.01.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside face surface temperature setpoint in the south east zone.\nentitybldg:south-east-zone \n brick:Outside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Face_Surface_Temperature_Setpoint ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average mixed air temperature reading for AHU 01 in the past 10 minutes?\nentitybldg:bldg1.AHU.AHU01.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which QUDT quantity does complex power relate to?\nentitybrick:Complex_Power",
    "target_text": "SELECT ?reference WHERE { brick:Complex_Power brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Wardrobe is used for.\nentitybrick:Wardrobe",
    "target_text": "SELECT ?definition WHERE { brick:Wardrobe skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of  PM10 particulate matter Level Sensor 5.02 over the last month?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Flow Sensor measure?\nentitybrick:Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the CO2  sensor data for Sensor 5.02?\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the  PM2.5 particulate matter Level Sensor readings from Sensor 5.04?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest reading from  Ethyl Alcohol /C2H5CH sensor5.01.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating discharge air flow setpoint in the Cafe.\nentitybldg:Cafe \n brick:Occupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What associated tags does the Enable Differential Temperature Command have?\nentitybrick:Enable_Differential_Temperature_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Differential_Temperature_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything stored about a Chilled Water Differential Pressure Step Parameter.\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current CO2  values from Sensor 5.04 compare with historical averages?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Warm Cool Adjust Sensor?\nentitybrick:Warm_Cool_Adjust_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Warm_Cool_Adjust_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags assigned to Start Stop Command?\nentitybrick:Start_Stop_Command",
    "target_text": "SELECT ?tag WHERE { brick:Start_Stop_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air humidity sensor 5.03 and its installation location.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Heating Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Heat Exchanger labeled in the ontology?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Heat_Exchanger rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the CO sensor installed in 5.05 and what is its classification?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . bldg:CO_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Cooling Demand Setpoint fall?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Demand_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the aliasOf reference for the Medical Room class, if any.\nentitybrick:Medical_Room",
    "target_text": "SELECT ?alias WHERE { brick:Medical_Room brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.09located?\nentitybldg:voc5.09",
    "target_text": "SELECT ?location WHERE { bldg:voc5.09 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Plumbing Room?\nentitybrick:Plumbing_Room",
    "target_text": "SELECT ?definition WHERE { brick:Plumbing_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you check if Differential Pressure Deadband Setpoint is labeled?\nentitybrick:Differential_Pressure_Deadband_Setpoint",
    "target_text": "ASK { brick:Differential_Pressure_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the  Air Quality sensor levels recorded by Sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest zone reheat valve command for RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of has sub-meter?\nentitybrick:hasSubMeter",
    "target_text": "SELECT ?label WHERE { brick:hasSubMeter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Chilled Water Differential Pressure Deadband Setpoint represented in the ontology?\nentitybrick:Chilled_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Entering Water Temperature Deadband Setpoint?\nentitybrick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Low Discharge Air Flow Alarm has in BrickSchema.\nentitybrick:Low_Discharge_Air_Flow_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Low_Discharge_Air_Flow_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of the Meter.\nentitybrick:Meter",
    "target_text": "SELECT ?label WHERE { brick:Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Media Production Room?\nentitybrick:Media_Production_Room",
    "target_text": "SELECT ?tag WHERE { brick:Media_Production_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is an Access Reader represented in the ontology?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?property ?value WHERE { brick:Access_Reader ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does an Absorption Chiller play in cooling systems?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air temperature sensor in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Temperature_Sensor ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date temperature level from sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Outside Air Lockout Temperature Setpoint?\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.61?\nentitybldg:mqtwo5.61",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.61 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to Air Quality sensor 5.01?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Flow have any applicable units?\nentitybrick:Flow",
    "target_text": "ASK WHERE { brick:Flow qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the rdf:type of the Outside Air CO Sensor.\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?type WHERE { brick:Outside_Air_CO_Sensor a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.70?\nentitybldg:hcho5.70",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.70 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Relative Humidity.\nentitybrick:Relative_Humidity",
    "target_text": "SELECT ?definition WHERE { brick:Relative_Humidity skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest chilled water supply temperature value for the building chilled water system.\nentitybldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Radiant Panel Temperature Setpoint a type of Temperature Setpoint?\nentitybrick:Radiant_Panel_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Radiant_Panel_Temperature_Setpoint rdfs:subClassOf brick:Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Studio.\nentitybrick:Studio",
    "target_text": "SELECT ?label WHERE { brick:Studio rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Cooling Valve?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for  Air Quality sensor 5.01 over time?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Waste Storage.\nentitybrick:Waste_Storage",
    "target_text": "SELECT ?label WHERE { brick:Waste_Storage rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Max Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm if Chilled Water Temperature Sensor has the tag 'Water'.\nentitybrick:Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Water . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum supply air temperature readings for AHU 02 from this morning.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Cooling Temperature Setpoint is a subclass of Temperature Setpoint.\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Cooling_Temperature_Setpoint rdfs:subClassOf brick:Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.49?\nentitybldg:airq5.49",
    "target_text": "SELECT ?room WHERE { bldg:airq5.49 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:PM10_Level_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone air temperature setpoint currently set in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags that are associated with an air temperature step parameter.\nentitybrick:Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Air_Temperature_Step_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Low Discharge Air Flow Alarm have an owl:equivalentClass in BrickSchema?\nentitybrick:Low_Discharge_Air_Flow_Alarm",
    "target_text": "SELECT ?equiv WHERE { brick:Low_Discharge_Air_Flow_Alarm owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for Position Sensor.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied supply air temperature setpoint in the Conference Room.\nentitybldg:Conference_Room \n brick:Unoccupied_Supply_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Supply_Air_Temperature_Setpoint ; brick:hasLocation bldg:Conference_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Occupancy_Count defined as a narrower concept of Occupancy?\nentitybrick:Occupancy",
    "target_text": "ASK WHERE { brick:Occupancy skos:narrower brick:Occupancy_Count . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM10_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current measurement of the zone supply air temperature in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Differential Temperature a part of?\nentitybrick:Differential_Temperature",
    "target_text": "SELECT ?broader WHERE { brick:Differential_Temperature skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  Illuminance Sensor data from Sensor 5.03.\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Max Occupied Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Outside Air CO Sensor.\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_CO_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  Air Quality sensor measurements from Sensor 5.05 day-to-day?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Flow' is a tag for Min Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the Pressure units that include 'PA'.\nentitybrick:Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Pressure qudt:applicableUnit ?unit . FILTER(regex(str(?unit), \"PA\", \"i\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the  Air Quality sensor 5.01 and where it is installed.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the humidity measurements from  Air Humidity Sensor 5.02 over the past 24 hours.\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.02's humidity readings?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Thermostat Status.\nentitybrick:Thermostat_Status",
    "target_text": "SELECT ?definition WHERE { brick:Thermostat_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Electric Radiator inherit from?\nentitybrick:Electric_Radiator",
    "target_text": "SELECT ?superclass WHERE { brick:Electric_Radiator rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the rain duration sensor in the Terrace.\nentitybldg:Terrace \n brick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Rain_Duration_Sensor ; brick:hasLocation bldg:Terrace ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does NO2 Sensor 5.01 represent?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone air control temperature setpoint currently read in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Cooling Start Stop Status?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Start_Stop_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags that are associated with a chilled water meter.\nentitybrick:Chilled_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest configuration of the zone air damper command in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Natural Gas Temperature Sensor.\nentitybrick:Natural_Gas_Temperature_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Natural_Gas_Temperature_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of PM1Concentration.\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?label WHERE { brick:PM1_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM10 particulate matter Level Sensor 5.01 installed and what is it called?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Thermal Power Meter.\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Thermal_Power_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is   TVOC  Sensor 5.05?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list sample values for Rated Maximum Voltage Output?\nentitybrick:ratedMaximumVoltageOutput",
    "target_text": "SELECT ?value WHERE { ?entity brick:ratedMaximumVoltageOutput ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Collection Basin Water Level Alarm.\nentitybrick:Collection_Basin_Water_Level_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Collection_Basin_Water_Level_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurement from sensor 5.01, please.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Control Room a subclass of another type of room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Control_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the  quality index for the lobby area using CO  sensor 5.01.\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient CO  as measured by sensor 5.01?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Relay.\nentitybrick:Relay",
    "target_text": "SELECT ?rule WHERE { brick:Relay sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using  PM10 particulate matter Level Sensor 5.01.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Derivative Gain Parameter labeled in the ontology?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Derivative_Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Building Meter extends.\nentitybrick:Building_Meter",
    "target_text": "SELECT ?parent WHERE { brick:Building_Meter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.03 installed?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Bypass Water Flow Setpoint.\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Bypass_Water_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of  Air Humidity Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Fire Zone a subclass of?\nentitybrick:Fire_Zone",
    "target_text": "SELECT ?superclass WHERE { brick:Fire_Zone rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Sound Noise loudness Sensor  5.03 readings from yesterday.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  PM10 particulate matter Level Sensor 5.01 set up at?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  Air Quality Level 5.03 at?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Motor Direction Status belong to?\nentitybrick:Motor_Direction_Status",
    "target_text": "SELECT ?type WHERE { brick:Motor_Direction_Status a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is associated with the Return Air Temperature High Reset Setpoint?\nentitybrick:Return_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_Temperature_High_Reset_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air static pressure deadband setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags used for Hail Sensor?\nentitybrick:Hail_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Hail_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Zone Air Temperature Setpoint set?\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Zone_Air_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does the Hot Water Meter have?\nentitybrick:Hot_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the seeAlso reference for thermal transmittance.\nentitybrick:thermalTransmittance",
    "target_text": "SELECT ?seeAlso WHERE { brick:thermalTransmittance rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the PV Generation System?\nentitybrick:PV_Generation_System",
    "target_text": "SELECT ?property ?value WHERE { brick:PV_Generation_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC components use a Leaving Water Differential Pressure Deadband Setpoint?\nentitybrick:Leaving_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_On_Off_Command rdfs:label ?label . brick:Steam_On_Off_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.49 located?\nentitybldg:dust5.49",
    "target_text": "SELECT ?location WHERE { bldg:dust5.49 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.02 based on its TVOC  data logs?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Hot Water Differential Pressure Setpoint.\nentitybrick:Hot_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Supply Air Flow Demand Setpoint?\nentitybrick:Supply_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Demand_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is timestamp an owl:DatatypeProperty?\nentitybrick:timestamp",
    "target_text": "ASK WHERE { brick:timestamp a owl:DatatypeProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Voltage Ratio Setpoint.\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Voltage_Ratio_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.68located?\nentitybldg:voc5.68",
    "target_text": "SELECT ?location WHERE { bldg:voc5.68 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Box Mode Command fall?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Cooling Temperature Setpoint.\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone reheat valve command log for RM107A for the last 15 minutes.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the underfloor air plenum static pressure setpoint in the South.\nentitybldg:South \n brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Chilled Water Flow Setpoint is a subclass of Water Flow Setpoint.\nentitybrick:Chilled_Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Chilled_Water_Flow_Setpoint rdfs:subClassOf brick:Water_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Hot Water Return Temperature Sensor is a subclass of Return Water Temperature Sensor.\nentitybrick:Hot_Water_Return_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Hot_Water_Return_Temperature_Sensor rdfs:subClassOf brick:Return_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader categories does Dynamic Pressure belong to?\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?broader WHERE { brick:Dynamic_Pressure skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Supply Air Duct Pressure Status include the tag 'Point'?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "ASK WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is monitoring a Chilled Water Differential Pressure Load Shed Setpoint important?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint ?property ?setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of a Current Ratio Setpoint.\nentitybrick:Current_Ratio_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Current_Ratio_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Emergency Air Flow System Status belong to?\nentitybrick:Emergency_Air_Flow_System_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Air_Flow_System_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the name of the Chilled Beam.\nentitybrick:Chilled_Beam",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Beam rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Heating Command?\nentitybrick:Heating_Command",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of Min Discharge Air Static Pressure Setpoint Limit?\nentitybrick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Flow Low Reset Setpoint has the tag 'Setpoint'?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Occupied Mode Status?\nentitybrick:Occupied_Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Return Air Temperature Alarm indicate?\nentitybrick:Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Fault Status.\nentitybrick:Fault_Status",
    "target_text": "SELECT ?tag WHERE { brick:Fault_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Office Kitchen?\nentitybrick:Office_Kitchen",
    "target_text": "SELECT ?definition WHERE { brick:Office_Kitchen skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Limit' one of the tags for Max Air Flow Setpoint Limit?\nentitybrick:Max_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02 found?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone percent air flow readings were taken for RM107B during the evening period today?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the current heating mode configuration for RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantity associated with Supply Air Differential Pressure Setpoint?\nentitybrick:Supply_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Differential_Pressure_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for Combustible Gas Smoke MQ2 Sensor  from sensor 5.03.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the on off status in the north west zone.\nentitybldg:north-west-zone \n brick:On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:On_Off_Status ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air quality sensor in the Quiet Room.\nentitybldg:Quiet_Room \n brick:Air_Quality_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Quality_Sensor ; brick:hasLocation bldg:Quiet_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define carbon dioxide?\nentitybrick:CO2",
    "target_text": "SELECT ?definition WHERE { brick:CO2 skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in PM2.5 particulate matter Level Sensor 5.04's data over the last month?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Outside Face Surface Temperature Setpoint.\nentitybrick:Outside_Face_Surface_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Face_Surface_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the parent property of Has QUDT Reference.\nentitybrick:hasQUDTReference",
    "target_text": "SELECT ?parent WHERE { brick:hasQUDTReference rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if has sub-meter is an irreflexive property.\nentitybrick:hasSubMeter",
    "target_text": "ASK WHERE { brick:hasSubMeter a owl:IrreflexiveProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for Temperature Sensor?\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Liquid.\nentitybrick:Liquid",
    "target_text": "SELECT ?definition WHERE { brick:Liquid skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Condenser Water Pump a subclass of another type of pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Pump rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are broader than Reactive Power?\nentitybrick:Reactive_Power",
    "target_text": "SELECT ?broader WHERE { brick:Reactive_Power skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's  PM10 particulate matter Level Sensor measurements over the last quarter.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can static pressure be expressed in Pascals?\nentitybrick:Static_Pressure",
    "target_text": "ASK WHERE { brick:Static_Pressure qudt:applicableUnit unit:PA . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has pir5.23?\nentitybldg:pir5.23",
    "target_text": "SELECT ?room WHERE { bldg:pir5.23 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Outdoor Area.\nentitybrick:Outdoor_Area",
    "target_text": "SELECT ?tag WHERE { brick:Outdoor_Area brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if the tag 'Supply' is associated with Supply Air Smoke Detection Alarm?\nentitybrick:Supply_Air_Smoke_Detection_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Smoke_Detection_Alarm brick:hasAssociatedTag tag:Supply . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Alcohol Vapor MQ3 Gas Sensor  5.05 and its location.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone air control temperature setpoint for RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Ozone_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Oxygen,O2 Sensor 5.05's readings over the past 48 hours.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  NO2 sensor5.05 and where is it located?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:NO2_Level_Sensor_5.05 rdfs:label ?label . bldg:NO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the QUDT reference for Differential Static Pressure.\nentitybrick:Differential_Static_Pressure",
    "target_text": "SELECT ?qref WHERE { brick:Differential_Static_Pressure brick:hasQUDTReference ?qref . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about an Active Power Sensor.\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Active_Power_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  PM2.5 particulate matter Level Sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the cooling valve output values for AHU 02 yesterday?\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes a CO Level Sensor unique?\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:CO_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for  Alcohol Vapor MQ3 Gas Sensor  5.02.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the applicable units for Velocity Pressure.\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Velocity_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are broader than Real Power?\nentitybrick:Real_Power",
    "target_text": "SELECT ?broader WHERE { brick:Real_Power skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling supply air temperature deadband setpoint in the Workshop.\nentitybldg:Workshop \n brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What version deprecated Discharge Water Flow Sensor?\nentitybrick:Discharge_Waterflow_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Waterflow_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Remotely On Off Status.\nentitybrick:Remotely_On_Off_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Remotely_On_Off_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the classification of Operational Stage Count.\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?category WHERE { brick:operationalStageCount rdf:type ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Water Flow Setpoint.\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Room Air Temperature Setpoint.\nentitybrick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Room_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.05 to forecast potential maintenance needs due to CO  deviations.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality sensor is deployed in room 5.01 and what is its kind?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Cooling Valve play in an HVAC system?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is assigned to the Angle Sensor?\nentitybrick:Angle_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Angle_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Light Command a type of control command?\nentitybrick:Light_Command",
    "target_text": "SELECT ?parent WHERE { brick:Light_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Active Power Sensor.\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Active_Power_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?label WHERE { brick:Elevator_Shaft rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Steam Valve?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?label WHERE { brick:Steam_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Load Shed Reset Status contribute to energy efficiency?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?status WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status ?property ?status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Voltage Alarm is called.\nentitybrick:Voltage_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Embedded Surface System Panel.\nentitybrick:Embedded_Surface_System_Panel",
    "target_text": "SELECT ?label WHERE { brick:Embedded_Surface_System_Panel rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas stats from sensor 5.04.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.53 located?\nentitybldg:oxy5.53",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.53 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Oxygen,O2 level recorded by  Oxygen,O2 Sensor 5.02 over the past 24 hours?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in TVOC  sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What textual label describes a CO Differential Sensor?\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?label WHERE { brick:CO_Differential_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does a cold deck do?\nentitybrick:Cold_Deck",
    "target_text": "SELECT ?definition WHERE { brick:Cold_Deck skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Heat' one of the tags for Max Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.05 is keeping it real with our smart building air quality standards?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the constraints specified for a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?rule WHERE { brick:Cafeteria sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the  PM1 particulate matter Level Sensor 5.04 along with its location in the building.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Discharge Air Differential Pressure Sensor measure?\nentitybrick:Discharge_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated byFormaldehyde Level sensor 5.01's readings over the past 48 hours.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measured by Sensor 5.05 during peak occupancy hours?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently does CO  Sensor 5.05 require recalibration according to the data?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Fan On Off Status in the ontology?\nentitybrick:Fan_On_Off_Status",
    "target_text": "SELECT ?tag WHERE { brick:Fan_On_Off_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.05 meet our smartness standards?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.03's Alcohol Vapor MQ3 Gas Sensor  readings and overall building air quality index?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Rain Duration Sensor.\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Duration_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Intake Air Filter improve air quality?\nentitybrick:Intake_Air_Filter",
    "target_text": "SELECT ?definition WHERE { brick:Intake_Air_Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Load Shed Command?\nentitybrick:Load_Shed_Command",
    "target_text": "SELECT ?tag WHERE { brick:Load_Shed_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: In what situations is an Average Heating Demand Sensor used instead of other heating measurement sensors?\nentitybrick:Average_Heating_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Heating_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  Air Quality Level 5.01 installed and what is it called?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  Air temperature Sensor 5.03?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Velocity Pressure Setpoint.\nentitybrick:Velocity_Pressure_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Velocity_Pressure_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to an Average Cooling Demand Sensor?\nentitybrick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Average_Cooling_Demand_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the air humidity sensor 5.05 installed and what is it called?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Ethyl Alcohol /C2H5CH  sensors 5.05 in our building?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity for Condenser Water Temperature Sensor.\nentitybrick:Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Condenser_Water_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Rain Duration Sensor?\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Rain_Duration_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which classes does the Occupied Cooling Temperature Deadband Setpoint inherit?\nentitybrick:Occupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Cooling_Temperature_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  Illuminance Sensor 5.02?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the unit type for Rated Minimum Current Input.\nentitybrick:ratedMinimumCurrentInput",
    "target_text": "SELECT ?unit WHERE { brick:ratedMinimumCurrentInput qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest  measurement from Ethyl Alcohol /C2H5CH  Sensor 5.05.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.44 located?\nentitybldg:hcho5.44",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.44 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure setpoint in the Restroom.\nentitybldg:Restroom \n brick:Chilled_Water_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Restroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Exhaust Air Flow Sensor a subclass of any BrickSchema classes?\nentitybrick:Exhaust_Air_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time zone air control temperature setpoint for RM107A right now?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the defining characteristics of an Acceleration Time Setpoint?\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Heating Valve call itself?\nentitybrick:Heating_Valve",
    "target_text": "SELECT ?label WHERE { brick:Heating_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all attributes and values defined for the Discharge Air Humidity Sensor.\nentitybrick:Discharge_Air_Humidity_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Humidity_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What class does Rest Room refer to as an alias?\nentitybrick:Rest_Room",
    "target_text": "SELECT ?alias WHERE { brick:Rest_Room brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is PM1 Sensor a subclass of?\nentitybrick:PM1_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:PM1_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical CO2  trend for CO2  Sensor 5.04 from 01/01/2025 to 31/01/2025.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the concept related to CurrentAngle.\nentitybrick:Current_Angle",
    "target_text": "SELECT ?related WHERE { brick:Current_Angle skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does PM1 particulate matter Level Sensor 5.02 have?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Relative Humidity?\nentitybrick:Relative_Humidity",
    "target_text": "SELECT ?definition WHERE { brick:Relative_Humidity skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a Direct Expansion Heating Coil?\nentitybrick:Direct_Expansion_Heating_Coil",
    "target_text": "SELECT ?label WHERE { brick:Direct_Expansion_Heating_Coil rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to Fire Safety Equipment.\nentitybrick:Fire_Safety_Equipment",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Fire_Safety_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Overload Alarm?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Overload_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Leaving Chilled Water Temperature Sensor includes the tag 'Temperature'.\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Temperature . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which  Air Quality sensor is in room 5.02 and what sensor class it belongs to?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a time series analysis for the Ethyl Alcohol /C2H5CH readings from Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Duration Sensor?\nentitybrick:Duration_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Duration_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which applicable units or QUDT references are defined for Mass?\nentitybrick:Mass",
    "target_text": "SELECT ?unit ?reference WHERE { brick:Mass qudt:applicableUnit ?unit . OPTIONAL { brick:Mass brick:hasQUDTReference ?reference . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Voltage Ratio Setpoint.\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Voltage_Ratio_Setpoint rdfs:label ?label . brick:Voltage_Ratio_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Hot_Water_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.02's Formaldehyde Level sensor readings and overall building air quality index?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Refrigerant_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Air Differential Pressure Setpoint.\nentitybrick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Air_Differential_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current heating mode as reported in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Supply Air Duct Pressure Status?\nentitybrick:Supply_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Duct_Pressure_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Exhaust Air Humidity Sensor?\nentitybrick:Exhaust_Air_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Exhaust_Air_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of Air Quality Level 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Chilled Water Differential Pressure Load Shed Setpoint affect load management?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time chilled water return temperature value for the building chiller right now?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which classes does the Overridden On Status inherit?\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?parent WHERE { brick:Overridden_On_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does PSI belong to the applicable units for static pressure?\nentitybrick:Static_Pressure",
    "target_text": "ASK WHERE { brick:Static_Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Occupied Air Temperature Setpoint?\nentitybrick:Occupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Alcohol Vapor MQ3 Gas Sensor  measurement from sensor 5.04, please.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqnine5.66 located?\nentitybldg:mqnine5.66",
    "target_text": "SELECT ?location WHERE { bldg:mqnine5.66 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with the Power Factor Sensor?\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Power_Factor_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Pressure Sensor.\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which property is is associated with a sub-property of?\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?parent WHERE { brick:isAssociatedWith rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is PM10 particulate matter Level Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature deadband setpoint in the Workshop.\nentitybldg:Workshop \n brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which humidity sensor is in room 5.05 and what sensor class it belongs to?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum humidity in sensor 5.01 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the preheat supply air temperature sensor in the Lawn.\nentitybldg:Lawn \n brick:Preheat_Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Preheat_Supply_Air_Temperature_Sensor ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the definition for CO Sensor.\nentitybrick:CO_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:CO_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air flow sensor in the Conference Room.\nentitybldg:Conference_Room \n brick:Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Flow_Sensor ; brick:hasLocation bldg:Conference_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature low reset setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.01 of Temperature?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the equivalent class of the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air flow low reset setpoint in the Cafeteria.\nentitybldg:Cafeteria \n brick:Discharge_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Flow_Low_Reset_Setpoint ; brick:hasLocation bldg:Cafeteria ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is  CO  Sensor 5.05 placed?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  CO2  Sensor 5.05 based on its most recent data.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of data does Operational Stage Count store?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?datatype WHERE { brick:operationalStageCount rdfs:range ?datatype . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Basement belong to?\nentitybrick:Basement",
    "target_text": "SELECT ?superclass WHERE { brick:Basement rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the category and all associated tags for an Acceleration Time Setpoint.\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Acceleration_Time_Setpoint rdfs:subClassOf ?superclass . brick:Acceleration_Time_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Outside_Air_Humidity_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for  Air Temperature Sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Chilled Water Coil'.\nentitybrick:Chilled_Water_Coil",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what RTU is called.\nentitybrick:RTU",
    "target_text": "SELECT ?label WHERE { brick:RTU rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for  Air Humidity Sensor 5.01.\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the tags for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to  Oxygen,O2 Sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for Sound Noise loudness Sensor  5.03.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the aliasOf reference, if any, for the High Discharge Air Temperature Alarm class.\nentitybrick:High_Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?alias WHERE { brick:High_Discharge_Air_Temperature_Alarm brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air control temperature setpoint as indicated by the sensor in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags connected to Outside Fan.\nentitybrick:Outside_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the integral time adjustment affect pressure regulation in a Chilled Water Differential Pressure Integral Time Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does a Makeup Water Valve belong to?\nentitybrick:Makeup_Water_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Makeup_Water_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the full details (label, definition, tags, quantity, substance) of the Entering Water Flow Setpoint?\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Entering_Water_Flow_Setpoint rdfs:label ?label . brick:Entering_Water_Flow_Setpoint skos:definition ?definition . OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasQuantity ?quantity . } OPTIONAL { brick:Entering_Water_Flow_Setpoint brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the sensor classification of  Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the term 'Average Zone Air Temperature Sensor'.\nentitybrick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Zone_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Formaldehyde Level sensor data from sensor 5.04.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using data from  Ethyl Alcohol /C2H5CH Sensor 5.03.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone percent air flow data from RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification and associated tags are assigned to a CO2 Alarm Sensitivity Parameter?\nentitybrick:CO2_Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:CO2_Alarm_Sensitivity_Parameter rdfs:subClassOf ?superclass . brick:CO2_Alarm_Sensitivity_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.22 located?\nentitybldg:airq5.22",
    "target_text": "SELECT ?location WHERE { bldg:airq5.22 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest supply air pressure value for AHU 01.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Switchgear represent?\nentitybrick:Switchgear",
    "target_text": "SELECT ?definition WHERE { brick:Switchgear skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Condensate Leak Alarm?\nentitybrick:Condensate_Leak_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Condensate_Leak_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the quantitative attribute of Heating Temperature Setpoint?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Heating_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Cooling Start Stop Status fit into?\nentitybrick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Start_Stop_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details forFormaldehyde Level sensor 5.02.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 indicate any potential issues with air quality in the building?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Portfolio.\nentitybrick:Portfolio",
    "target_text": "SELECT ?rule WHERE { brick:Portfolio sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02, please.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Chilled Water Differential Pressure Proportional Band Parameter fit into?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Leaving Water Flow Sensor.\nentitybrick:Leaving_Water_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sustainability performance based on the LPG Natural Gas Town MQ5 Gas Sensor  data from Sensor 5.03.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Studio?\nentitybrick:Studio",
    "target_text": "SELECT ?label ?definition WHERE { brick:Studio rdfs:label ?label . brick:Studio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me some recorded values of Tilt.\nentitybrick:tilt",
    "target_text": "SELECT ?value WHERE { ?entity brick:tilt ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.03's LPG Natural Gas Town MQ5 Gas Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Formaldehyde Level sensor is set up in 5.01 and what kind is it?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.01 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What complete information is stored for the Lockout Temperature Differential Parameter in BrickSchema?\nentitybrick:Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Lockout_Temperature_Differential_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor5.01 say about the current Ethyl Alcohol /C2H5CH?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from Illuminance Sensor 5.04.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there associated tags for CO2 Sensor?\nentitybrick:CO2_Sensor",
    "target_text": "ASK { brick:CO2_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of a CO Level Sensor.\nentitybrick:CO_Level_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:CO_Level_Sensor rdfs:subClassOf ?superclass . brick:CO_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does static pressure belong to the general pressure category?\nentitybrick:Static_Pressure",
    "target_text": "ASK WHERE { brick:Static_Pressure skos:broader brick:Pressure . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for   CO  Sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only  PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for PM10 particulate matter Level Sensor 5.01.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Electrical System has in BrickSchema.\nentitybrick:Electrical_System",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Electrical_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Outside Air Temperature Low Reset Setpoint have?\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone reheat valve command state for RM107A?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which other class is the same as Rest Room?\nentitybrick:Rest_Room",
    "target_text": "SELECT ?equiv WHERE { brick:Rest_Room owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the Combustible Gas Smoke MQ2 Sensor  readings from Sensor 5.02 help in predicting potential failures or recalibration needs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to the Intake Air Filter.\nentitybrick:Intake_Air_Filter",
    "target_text": "SELECT ?tag WHERE { brick:Intake_Air_Filter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of Air Quality sensor 5.04.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Return Air Grains Sensor.\nentitybrick:Return_Air_Grains_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Grains_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Luminous Flux quantity?\nentitybrick:Luminous_Flux",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Luminous_Flux ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the south west zone.\nentitybldg:south-west-zone \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:south-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_System rdfs:label ?label . brick:Steam_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of isLocationOf?\nentitybrick:isLocationOf",
    "target_text": "SELECT ?label WHERE { brick:isLocationOf rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all the tags linked to a CO2 Differential Sensor.\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:CO2_Differential_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is dust5.69 located?\nentitybldg:dust5.69",
    "target_text": "SELECT ?location WHERE { bldg:dust5.69 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Hot Water Temperature Setpoint.\nentitybrick:Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a meter support sub-metering?\nentitybrick:Meter",
    "target_text": "SELECT ?subMeter WHERE { brick:Meter sh:property bsh:isSubMeterOfShape . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label assigned to Occupied Heating Discharge Air Flow Setpoint?\nentitybrick:Occupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Heating_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are linked to Reset Setpoint?\nentitybrick:Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water temperature setpoint in the Elevator.\nentitybldg:Elevator \n brick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Temperature_Setpoint ; brick:hasLocation bldg:Elevator ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Position Command related to Command?\nentitybrick:Position_Command",
    "target_text": "ASK WHERE { brick:Position_Command rdfs:subClassOf brick:Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Cool' is a tag for Unoccupied Cooling Supply Air Flow Setpoint?\nentitybrick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Cool . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the replacement for Supply Water Temperature Sensor.\nentitybrick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Supply_Water_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Refrigerant Level Sensor?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Refrigerant_Level_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the tags for the Return Heating Valve.\nentitybrick:Return_Heating_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Return_Heating_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Broadcast Room belong to, and what tags describe it?\nentitybrick:Broadcast_Room",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Broadcast_Room rdfs:subClassOf ?superclass . brick:Broadcast_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader categories does the Entering Hot Water Temperature Low Reset Setpoint fall under?\nentitybrick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using Alcohol Vapor MQ3 Gas Sensor  data from Sensor 5.05.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What systems in the building rely on a Luminance Command?\nentitybrick:Luminance_Command",
    "target_text": "SELECT ?command WHERE { ?command a brick:Luminance_Command . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading reported by the zone air temperature sensor in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Equipment.\nentitybrick:Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the PM2.5 Level Sensor a subclass of?\nentitybrick:PM2",
    "target_text": "SELECT ?parent WHERE { brick:PM2.5_Level_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of PM1 particulate matter Level Sensor 5.01?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to a Max Chilled Water Differential Pressure Setpoint Limit.\nentitybrick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which  Illuminance Sensor is in room 5.02 and what sensor class it belongs to?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Illuminance_Sensor_5.02 rdfs:label ?label . bldg:Illuminance_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Fan Coil Unit.\nentitybrick:Fan_Coil_Unit",
    "target_text": "SELECT ?definition WHERE { brick:Fan_Coil_Unit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Condenser Water Bypass Valve control water flow?\nentitybrick:Condenser_Water_Bypass_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Bypass_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Ozone Level Sensor refer to?\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ozone_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many return air temperature readings were logged on AHU 01 during the early hours today?\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are attached to an Active Power Sensor?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Active_Power_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from PM1 particulate matter Level Sensor 5.03 over the past week.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone heating mode command log for RM107A for the last 15 minutes.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the registered label ofCombustible Gas Smoke MQ2 Sensor 5.05?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the coldest zone air temperature sensor in the Studio.\nentitybldg:Studio \n brick:Coldest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Coldest_Zone_Air_Temperature_Sensor ; brick:hasLocation bldg:Studio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Studio is used for.\nentitybrick:Studio",
    "target_text": "SELECT ?definition WHERE { brick:Studio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Deceleration Time Setpoint.\nentitybrick:Deceleration_Time_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Deceleration_Time_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for Liquid CO2?\nentitybrick:Liquid_CO2",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Liquid_CO2 ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe an Average Exhaust Air Static Pressure Sensor?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Solar Zenith Angle Sensor?\nentitybrick:Solar_Zenith_Angle_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Solar_Zenith_Angle_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Heating Ventilation Air Conditioning System?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "SELECT ?label WHERE { brick:Heating_Ventilation_Air_Conditioning_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category of  Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air temperature data from RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air wet bulb temperature sensor in the Lounge.\nentitybldg:Lounge \n brick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Wet_Bulb_Temperature_Sensor ; brick:hasLocation bldg:Lounge ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Methane Concentration.\nentitybrick:Methane_Concentration",
    "target_text": "SELECT ?label WHERE { brick:Methane_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the assigned label forCombustible Gas Smoke MQ2 Sensor 5.04?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.01 and tell me its class.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Exhaust Air Differential Pressure Sensor?\nentitybrick:Exhaust_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Differential_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Discharge Air Static Pressure Setpoint?\nentitybrick:Discharge_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label ?definition ?eq ?alias WHERE { brick:Discharge_Air_Static_Pressure_Setpoint rdfs:label ?label . brick:Discharge_Air_Static_Pressure_Setpoint skos:definition ?definition . OPTIONAL { brick:Discharge_Air_Static_Pressure_Setpoint owl:equivalentClass ?eq . } OPTIONAL { brick:Discharge_Air_Static_Pressure_Setpoint brick:aliasOf ?alias . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from Air Quality Level 5.02.\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Discharge' one of the tags for Supply Air Temperature Step Parameter?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many chilled water return temperature readings were recorded for the building chiller today?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating supply air flow setpoint in the Library.\nentitybldg:Library \n brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone air temperature setpoint for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current value indicated by the zone supply air flow sensor in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone percent air flow measurements were logged for RM107B during the early hours today?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the QUDT reference associated with the power concept.\nentitybrick:Power",
    "target_text": "SELECT ?qref WHERE { brick:Power brick:hasQUDTReference ?qref . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick Oxygen,O2 Sensor 5.04 in the building?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the property shapes for Location.\nentitybrick:Location",
    "target_text": "SELECT ?property WHERE { brick:Location sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied target zone air temperature setpoint in the Shower Room.\nentitybldg:Shower_Room \n brick:Unoccupied_Target_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Target_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Shower_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which Combustible Gas Smoke MQ2 Sensor  is in room 5.04 and what sensor class it belongs to?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the description of Command.\nentitybrick:Command",
    "target_text": "SELECT ?definition WHERE { brick:Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the average supply air flow sensor in the Zone C.\nentitybldg:Zone_C \n brick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Average_Supply_Air_Flow_Sensor ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for PM1 particulate matter Level Sensor 5.03.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Heating Supply Air Temperature Deadband Setpoint does.\nentitybrick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Supply_Air_Temperature_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does  Alcohol Vapor MQ3 Gas Sensor  5.02 represent?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does an AHU play in airflow?\nentitybrick:AHU",
    "target_text": "ASK WHERE { brick:AHU skos:definition ?def . FILTER(CONTAINS(LCASE(STR(?def)), \"circulating\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the measurement scales for Speed?\nentitybrick:Speed",
    "target_text": "SELECT ?unit WHERE { brick:Speed qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM10 particulate matter Level Sensor 5.04 and where is it located?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Entering Medium Temperature Hot Water Temperature Sensor's purpose?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical quantity is measured by the Electric Energy Sensor?\nentitybrick:Electric_Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Electric_Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the Ethyl Alcohol /C2H5CH measurements from sensor5.03?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Food Service Room?\nentitybrick:Food_Service_Room",
    "target_text": "SELECT ?label WHERE { brick:Food_Service_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What types is the Mixed Air Filter?\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?type WHERE { brick:Mixed_Air_Filter a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate sensor 5.02's temperature reading with external weather data?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the associated tags of the Run Request Status.\nentitybrick:Run_Request_Status",
    "target_text": "SELECT ?tag WHERE { brick:Run_Request_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all cooling valve output readings for AHU 01 this morning?\nentitybldg:bldg1.AHU.AHU01.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the maximum supply air pressure reading for AHU 02 over the past hour.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Condenser Water Pump necessary in cooling systems?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current output from the zone supply air flow sensor in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature setpoint in the Workshop.\nentitybldg:Workshop \n brick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags that include 'Flow' for Max Unoccupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . FILTER(CONTAINS(STR(?tag), \"Flow\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air humidity sensor in the Theater.\nentitybldg:Theater \n brick:Discharge_Air_Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Humidity_Sensor ; brick:hasLocation bldg:Theater ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What function does an Emergency Phone serve?\nentitybrick:Emergency_Phone",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Phone skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Zone Air Conditioning Mode Status.\nentitybrick:Zone_Air_Conditioning_Mode_Status",
    "target_text": "SELECT ?label WHERE { brick:Zone_Air_Conditioning_Mode_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Position Command.\nentitybrick:Position_Command",
    "target_text": "SELECT ?tag WHERE { brick:Position_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the most recent zone supply air flow measurement for RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Min Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Cooling Tower belong to?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Tower rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Mixed Air Filter?\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the rdfs:isDefinedBy reference for Solar Irradiance?\nentitybrick:Solar_Irradiance",
    "target_text": "SELECT ?definedBy WHERE { brick:Solar_Irradiance rdfs:isDefinedBy ?definedBy . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find more information about the Dewpoint Sensor?\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?seeAlso WHERE { brick:Dewpoint_Sensor rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Reheat Hot Water System.\nentitybrick:Reheat_Hot_Water_System",
    "target_text": "SELECT ?parent WHERE { brick:Reheat_Hot_Water_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.02 is keeping it real with our smart building air quality standards?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Alcohol Vapor MQ3 Gas Sensor  measurement from sensor 5.01, please.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone supply air temperature for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent LPG Natural Gas Town MQ5 Gas Sensor  measurement from sensor 5.04, please.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Water Flow Setpoint?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the Alcohol Vapor MQ3 Gas Sensor  reading from sensor 5.02 right now?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air refer to?\nentitybrick:Supply_Air",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for  Air Humidity Sensor 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is assigned to the Fire Alarm?\nentitybrick:Fire_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Fire_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What function does the Exhaust Fan serve in the building?\nentitybrick:Exhaust_Fan",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Fan skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Ethyl Alcohol /C2H5CH Sensor 5.03 installed?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of NO2 Sensor 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.05 over the past week?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the sensor currently indicate for zone percent air flow in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas levels recorded by Sensor 5.03?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the statistical trends in NO2 levels from Sensor 5.05 over the last three months?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Return Air CO Sensor?\nentitybrick:Return_Air_CO_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_CO_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.04 following in terms of NO2 for the past hour?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are stored for the Discharge Air Temperature Low Reset Setpoint?\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the acceleration time setpoint in the Electrical Room.\nentitybldg:Electrical_Room \n brick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Acceleration_Time_Setpoint ; brick:hasLocation bldg:Electrical_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for Differential Temperature.\nentitybrick:Differential_Temperature",
    "target_text": "SELECT ?unit WHERE { brick:Differential_Temperature qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Outside Air Lockout Temperature Setpoint.\nentitybrick:Outside_Air_Lockout_Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Lockout_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Describe the function of Max Water Level Alarm.\nentitybrick:Max_Water_Level_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Max_Water_Level_Alarm skos:definition ?definition. }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for  Oxygen,O2 Sensor 5.01.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does the Intake Air Temperature Sensor belong to?\nentitybrick:Intake_Air_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Intake_Air_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air CO2 Sensor extends.\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_CO2_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader categories does the Medical Room fall under?\nentitybrick:Medical_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Medical_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.01 hanging out?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.04 align with smart building sustainability standards?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is NO2 Sensor 5.02 at, like, in the building?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much humidity is recorded by sensor 5.02 right now?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Sound Noise loudness Sensor  5.05 installed?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Centrifugal Chiller operate?\nentitybrick:Centrifugal_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Centrifugal_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Water Differential Temperature Setpoint.\nentitybrick:Water_Differential_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Water_Differential_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which equipment is controlled by the max hot water differential pressure setpoint limit?\nentitybrick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?limit WHERE { ?limit a brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the label for the Mixed Air Humidity Setpoint.\nentitybrick:Mixed_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Mixed_Air_Humidity_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend forCombustible Gas Smoke MQ2 Sensor 5.01 and its impact on indoor sustainability.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of   Ethyl Alcohol /C2H5CH Sensor 5.02.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the aliasOf reference for the Max Discharge Air Temperature Setpoint Limit class, if any.\nentitybrick:Max_Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Max_Discharge_Air_Temperature_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air static pressure deadband setpoint in the West.\nentitybldg:West \n brick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:West ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?tag WHERE { brick:Condenser_Water_Pump brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?label WHERE { brick:Enable_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many narrower substances are associated with Gas?\nentitybrick:Gas",
    "target_text": "SELECT (COUNT(?narrower) AS ?narrowerCount) WHERE { brick:Gas skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Humidity Deadband Setpoint?\nentitybrick:Humidity_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Humidity_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Heating Demand Sensor has in BrickSchema.\nentitybrick:Heating_Demand_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Heating_Demand_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which alternative class is referenced by the Discharge Air Temperature Proportional Band Parameter?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me everything that is stored about an Acceleration Time Setpoint.\nentitybrick:Acceleration_Time_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Acceleration_Time_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum supply air pressure value from AHU 01 in the last 30 minutes?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pump status in the Gallery.\nentitybldg:Gallery \n brick:Pump_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pump_Status ; brick:hasLocation bldg:Gallery ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much LPG Natural Gas Town MQ5 Gas Sensor  is recorded by sensor 5.03 right now?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Relief Damper?\nentitybrick:Relief_Damper",
    "target_text": "SELECT ?property ?value WHERE { brick:Relief_Damper ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM10 particulate matter Level Sensor 5.04 are we talking about and where is it placed?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active command state for the zone reheat valve in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.02 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Point' a tag for Alarm?\nentitybrick:Alarm",
    "target_text": "ASK WHERE { brick:Alarm brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by Room Air Temperature Setpoint?\nentitybrick:Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Room_Air_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  PM2.5 particulate matter Level Sensor level recorded by  Sensor 5.02 over the past 24 hours?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum humidity in sensor 5.02 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Valve Status?\nentitybrick:Valve_Status",
    "target_text": "SELECT ?label ?definition WHERE { brick:Valve_Status rdfs:label ?label . brick:Valve_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints must a Centrifugal Chiller follow?\nentitybrick:Centrifugal_Chiller",
    "target_text": "SELECT ?rule WHERE { brick:Centrifugal_Chiller sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor5.02 say about the current Ethyl Alcohol /C2H5CH?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Basement important in a building?\nentitybrick:Basement",
    "target_text": "SELECT ?definition WHERE { brick:Basement skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.01 to forecast potential maintenance needs due to Ethyl Alcohol /C2H5CH deviations.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of Air Quality sensor 5.05 based on recent readings.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about the Reception.\nentitybrick:Reception",
    "target_text": "SELECT ?property ?value WHERE { brick:Reception ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for isPointOf?\nentitybrick:isPointOf",
    "target_text": "SELECT ?label WHERE { brick:isPointOf rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which lighting components use a Luminaire Driver?\nentitybrick:Luminaire_Driver",
    "target_text": "SELECT ?driver WHERE { ?driver a brick:Luminaire_Driver . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Coil does.\nentitybrick:Coil",
    "target_text": "SELECT ?definition WHERE { brick:Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Hot Water Differential Temperature Sensor typically applied?\nentitybrick:Hot_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Mixed Air Filter have?\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Filter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Humidity Setpoint?\nentitybrick:Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which applicable units or QUDT references are defined for Luminous Flux?\nentitybrick:Luminous_Flux",
    "target_text": "SELECT ?unit ?reference WHERE { brick:Luminous_Flux qudt:applicableUnit ?unit . OPTIONAL { brick:Luminous_Flux brick:hasQUDTReference ?reference . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the  PM2.5 particulate matter Level Sensor readings from Sensor 5.03 help in predicting potential failures or recalibration needs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Temperature High Reset Setpoint.\nentitybrick:Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Bypass Command?\nentitybrick:Bypass_Command",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Variable Frequency Drive.\nentitybrick:Variable_Frequency_Drive",
    "target_text": "SELECT ?tag WHERE { brick:Variable_Frequency_Drive brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Location?\nentitybrick:Location",
    "target_text": "SELECT ?parent WHERE { brick:Location rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the return air temperature sensor in AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Return_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for Sound Noise loudness Sensor  5.01?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the quantity and substance detected by an Absolute Humidity Sensor?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Absolute_Humidity_Sensor brick:hasQuantity ?quantity . brick:Absolute_Humidity_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Hot Box a subclass of another laboratory type?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Box rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Close Limit?\nentitybrick:Close_Limit",
    "target_text": "SELECT ?label WHERE { brick:Close_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is CO2  Sensor 5.05 at, like, in the building?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of PM1 particulate matter Level Sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Maintenance Required Alarm?\nentitybrick:Maintenance_Required_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:Maintenance_Required_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with On Off Command.\nentitybrick:On_Off_Command",
    "target_text": "SELECT ?tag WHERE { brick:On_Off_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Derivative Gain Parameter.\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Derivative_Gain_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Overridden Status include Status?\nentitybrick:Overridden_Status",
    "target_text": "ASK WHERE { brick:Overridden_Status rdfs:subClassOf brick:Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.03's CO  measurements over the last quarter.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the PM1 Level Sensor?\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:PM1_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which definition explains the Medical Room's purpose?\nentitybrick:Medical_Room",
    "target_text": "SELECT ?definition WHERE { brick:Medical_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine if Ethyl Alcohol /C2H5CH Sensor 5.01 meets the energy efficiency and sustainability criteria set by our smart building guidelines.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Differential Dynamic Pressure marked as a delta quantity?\nentitybrick:Differential_Dynamic_Pressure",
    "target_text": "ASK { brick:Differential_Dynamic_Pressure qudt:isDeltaQuantity true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the live measurement of the zone air temperature in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Leaving Chilled Water Temperature Sensor measures.\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Air Temperature Sensor.\nentitybrick:Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the  Air Quality sensor located in room 5.03.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.03 rdfs:label ?label . bldg:Air_Quality_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Radiation Hot Water System?\nentitybrick:Radiation_Hot_Water_System",
    "target_text": "SELECT ?label WHERE { brick:Radiation_Hot_Water_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type forFormaldehyde Level sensor 5.03.\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance linked to the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Humidity_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Velocity Pressure Sensor?\nentitybrick:Velocity_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Velocity_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Setpoint' one of the tags for Water Flow Sensor?\nentitybrick:Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Water_Flow_Sensor brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What   Ethyl Alcohol /C2H5CH sensor 5.01 is in use and what is its installation spot?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current configuration of the zone air temperature setpoint in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the  PM2.5 particulate matter Level Sensor data for Sensor 5.05?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What HVAC system includes damperVAVRM115?\nentitybrick:isPartOf",
    "target_text": "SELECT ?system WHERE { bldg:damperVAVRM115 brick:isPartOf ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.04 to compute an overall  PM1 particulate matter Level Sensor index.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Wind Direction Sensor measures.\nentitybrick:Wind_Direction_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Wind_Direction_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What parameter does the Heat Sink Temperature Sensor record?\nentitybrick:Heat_Sink_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Heat_Sink_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the electric energy sensor in the Break Room.\nentitybldg:Break_Room \n brick:Electric_Energy_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Electric_Energy_Sensor ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Bypass Air Flow Sensor.\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Bypass_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.48?\nentitybldg:airq5.48",
    "target_text": "SELECT ?room WHERE { bldg:airq5.48 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is Sound Noise loudness Sensor  5.05 placed?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the category and tags for an Air Flow Loss Alarm?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Air_Flow_Loss_Alarm rdfs:subClassOf ?superclass . brick:Air_Flow_Loss_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air temperature sensor in the Control Room.\nentitybldg:Control_Room \n brick:Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Temperature_Sensor ; brick:hasLocation bldg:Control_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Power Sensor.\nentitybrick:Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does  Air Temperature Sensor 5.05 represent?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which components in the HVAC system include an Ice Tank Leaving Water Temperature Sensor?\nentitybrick:Ice_Tank_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?sensor WHERE { ?sensor a brick:Ice_Tank_Leaving_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all predicates and objects for the Discharge Air Proportional Gain Parameter.\nentitybrick:Discharge_Air_Proportional_Gain_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Proportional_Gain_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.04 based on its most recent data.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone air temperature setpoint for RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Automated External Defibrillator extends.\nentitybrick:Automated_External_Defibrillator",
    "target_text": "SELECT ?parent WHERE { brick:Automated_External_Defibrillator rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Studio refer to?\nentitybrick:Studio",
    "target_text": "SELECT ?definition WHERE { brick:Studio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the classes that Air Differential Pressure Setpoint extends.\nentitybrick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Air_Differential_Pressure_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Supply Air Dewpoint Sensor.\nentitybrick:Supply_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Dewpoint_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor data for zone percent air flow in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Formaldehyde Level sensor 5.02 chillin' in the building?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Heat_Exchanger rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend from PM2.5 particulate matter Level Sensor 5.05 over the past week.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Temperature sensors 5.04 in our building?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.04 over the last six months?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for   Ethyl Alcohol /C2H5CH Sensor 5.03?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current sensor value for zone air temperature in RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Cafeteria?\nentitybrick:Cafeteria",
    "target_text": "SELECT ?superclass WHERE { brick:Cafeteria rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is Air Quality sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the complete details for the Return Heating Valve?\nentitybrick:Return_Heating_Valve",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Heating_Valve ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for Sound Noise loudness Sensor  at 5.04?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you give me an overview of Sensor 5.04's Oxygen,O2 analytics in relation to system sustainability?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the NO2 sensor 5.01 readings from yesterday.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me Oxygen,O2 trends and their variation over the last 24 hours in room or sensor 5.05.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Condensing Natural Gas Boiler?\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?definition WHERE { brick:Condensing_Natural_Gas_Boiler skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Humidify Command?\nentitybrick:Humidify_Command",
    "target_text": "SELECT ?tag WHERE { brick:Humidify_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which spaces are inside RM112?\nentitybrick:hasPart",
    "target_text": "SELECT ?room WHERE { bldg:RM112 brick:hasPart ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does PM1Concentration support unit MicroGM-PER-M3?\nentitybrick:PM1_Concentration",
    "target_text": "ASK WHERE { brick:PM1_Concentration qudt:applicableUnit unit:MicroGM-PER-M3 . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Exhaust Air Humidity Setpoint set?\nentitybrick:Exhaust_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does an Access Reader play in access control?\nentitybrick:Access_Reader",
    "target_text": "SELECT ?definition WHERE { brick:Access_Reader rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Occupied Heating Temperature Setpoint.\nentitybrick:Occupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the speed mode status in the north side.\nentitybldg:north-side \n brick:Speed_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Speed_Mode_Status ; brick:hasLocation bldg:north-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the synonym for a cooling discharge air temperature integral time parameter in the Brick ontology?\nentitybrick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are linked to the Air Temperature Integral Time Parameter?\nentitybrick:Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Air_Temperature_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Low Humidity Alarm Parameter a type of HVAC parameter?\nentitybrick:Low_Humidity_Alarm_Parameter",
    "target_text": "SELECT ?parent WHERE { brick:Low_Humidity_Alarm_Parameter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what an Automatic Mode Command does?\nentitybrick:Automatic_Mode_Command",
    "target_text": "SELECT ?definition WHERE { brick:Automatic_Mode_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in  PM1 particulate matter Level Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rule set for the Run Request Status.\nentitybrick:Run_Request_Status",
    "target_text": "SELECT ?rule WHERE { brick:Run_Request_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling start stop status in the south east zone.\nentitybldg:south-east-zone \n brick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Start_Stop_Status ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the PIR Sensor have?\nentitybrick:PIR_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PIR_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Leaving Water Temperature Alarm?\nentitybrick:Leaving_Water_Temperature_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:Leaving_Water_Temperature_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical trend for  Air Quality sensor 5.03 from 01/01/2025 to 31/01/2025.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity for Supply Air Temperature Low Reset Setpoint?\nentitybrick:Supply_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Temperature_Low_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you show me the alternative name used by the Max Unoccupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?alias WHERE { brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve full details of the Dynamic Pressure quantity.\nentitybrick:Dynamic_Pressure",
    "target_text": "SELECT ?label (GROUP_CONCAT(?broader; separator=\", \") AS ?broaderList) WHERE { brick:Dynamic_Pressure rdfs:label ?label . OPTIONAL { brick:Dynamic_Pressure skos:broader ?broader . } } GROUP BY ?label"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me TVOC  trends and their variation over the last 24 hours in room or sensor 5.02.\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Change Filter Alarm different from other alarms?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the lighting correlated color temperature sensor in the Gym.\nentitybldg:Gym \n brick:Lighting_Correlated_Color_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Lighting_Correlated_Color_Temperature_Sensor ; brick:hasLocation bldg:Gym ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Locally On Off Status indicate?\nentitybrick:Locally_On_Off_Status",
    "target_text": "SELECT ?definition WHERE { brick:Locally_On_Off_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of   Ethyl Alcohol /C2H5CH Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Condenser Water Flow Setpoint belong to?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Flow_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.01 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Phasor?\nentitybrick:Phasor",
    "target_text": "SELECT ?label WHERE { brick:Phasor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Lighting means.\nentitybrick:Lighting",
    "target_text": "SELECT ?definition WHERE { brick:Lighting skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current  PM2.5 particulate matter Level Sensor value from sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is Alcohol Vapor MQ3 Gas Sensor  5.05 installed?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return hot water temperature setpoint in the floor1.\nentitybldg:floor1 \n brick:Return_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:floor1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the PV Generation System.\nentitybrick:PV_Generation_System",
    "target_text": "SELECT ?definition WHERE { brick:PV_Generation_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for PM1 particulate matter Level Sensor 5.04.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Combustible Gas Smoke MQ2 Sensor  5.05 installed?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading of the zone reheat valve command in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Embedded Temperature Setpoint inherit from?\nentitybrick:Embedded_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Embedded_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.02 based on its most recent data.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Alcohol Vapor MQ3 Gas Sensor  5.02 hanging out?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Direct Expansion Cooling Coil fall?\nentitybrick:Direct_Expansion_Cooling_Coil",
    "target_text": "SELECT ?superclass WHERE { brick:Direct_Expansion_Cooling_Coil rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you detect any anomalies in the  PM10 particulate matter Level Sensor measurements from Sensor 5.01 that might trigger a maintenance alert?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does absolute humidity use 'PlanckDensity' as a unit?\nentitybrick:Absolute_Humidity",
    "target_text": "ASK { brick:Absolute_Humidity qudt:applicableUnit unit:PlanckDensity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which air handling units are fed by the chiller?\nentitybrick:feeds",
    "target_text": "SELECT ?ahu WHERE { bldg:chiller brick:feeds ?ahu . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe a CO2 setpoint?\nentitybrick:CO2_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:CO2_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the  Air Quality sensor 5.03 for yesterday?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if  temperature Sensor 5.04 shows abnormal readings today.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Differential Pressure Sensor.\nentitybrick:Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the version in which Discharge Water Temperature Sensor was deprecated.\nentitybrick:Discharge_Water_Temperature_Sensor",
    "target_text": "SELECT ?version WHERE { brick:Discharge_Water_Temperature_Sensor brick:deprecatedInVersion ?version . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling discharge air flow setpoint in the Floor4.\nentitybldg:Floor4 \n brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Floor4 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the QUDT reference associated with atmospheric pressure?\nentitybrick:Atmospheric_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Atmospheric_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to retrieve the textual definition for the FCU class.\nentitybrick:FCU",
    "target_text": "SELECT ?definition WHERE { brick:FCU skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Last Fault Code Status used in a smart building?\nentitybrick:Last_Fault_Code_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Last_Fault_Code_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported by  Alcohol Vapor MQ3 Gas Sensor  5.02 over the past week?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Outside Air CO2 Sensor?\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_CO2_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for the zone air temperature in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status ofCombustible Gas Smoke MQ2 Sensor 5.04 based on its most recent data.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance does Chilled Water Temperature Setpoint relate to?\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Chilled_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does the Hot Water Baseboard Radiator fall?\nentitybrick:Hot_Water_Baseboard_Radiator",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Baseboard_Radiator rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM2.5 particulate matter Level Sensor 5.01 chillin' in the building?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Return Air Temperature Setpoint represent?\nentitybrick:Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.01's Alcohol Vapor MQ3 Gas Sensor  levels and building occupancy patterns.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current directive for the zone air control temperature setpoint in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Cooling Valve control air temperature?\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Temperature Adjust Sensor inherit?\nentitybrick:Temperature_Adjust_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Temperature_Adjust_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of  Air Quality Level 5.03 over the last month?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  PM2.5 particulate matter Level Sensor is deployed in room 5.04 and what is its kind?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Entering Hot Water Temperature Low Reset Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you report the zone percent air flow for RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Room' a tag for Office?\nentitybrick:Office",
    "target_text": "ASK WHERE { brick:Office brick:hasAssociatedTag tag:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the set of tags for Status.\nentitybrick:Status",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Load' one of the tags for Load Shed Status?\nentitybrick:Load_Shed_Status",
    "target_text": "ASK WHERE { brick:Load_Shed_Status brick:hasAssociatedTag tag:Load . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone supply air flow currently measured in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Chilled Water Temperature Setpoint.\nentitybrick:Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?rule WHERE { brick:Overridden_On_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the operational zone air damper command in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving domestic hot water temperature sensor in the Atrium.\nentitybldg:Atrium \n brick:Leaving_Domestic_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Domestic_Hot_Water_Temperature_Sensor ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all brick:hasAssociatedTag values for Medium Temperature Hot Water Differential Pressure Load Shed Reset Status.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?tag WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Oxygen,O2 sensor 5.05 and where is it located?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to Air Quality sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone percent air flow in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official label for a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Capacity_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many logical constraints exist for direction status?\nentitybrick:Direction_Status",
    "target_text": "SELECT (COUNT(?rule) AS ?rule_count) WHERE { brick:Direction_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for Air Temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone supply air temperature records for RM107A over the past week.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the narrower terms associated with Humidity?\nentitybrick:Humidity",
    "target_text": "SELECT ?narrower WHERE { brick:Humidity skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Energy Storage System a subclass of any BrickSchema classes?\nentitybrick:Energy_Storage_System",
    "target_text": "SELECT ?superclass WHERE { brick:Energy_Storage_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent humidity measurement from sensor 5.03, please.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.03 of Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Ethyl Alcohol /C2H5CH level from sensor5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Motor Speed Sensor.\nentitybrick:Motor_Speed_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Motor_Speed_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating zone air temperature setpoint in the Floor2.\nentitybldg:Floor2 \n brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Max Unoccupied Cooling Supply Air Flow Setpoint Limit have the tag 'Unoccupied'?\nentitybrick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Unoccupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show every triple associated with Temperature Setpoint.\nentitybrick:Temperature_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Heating Thermal Power Sensor?\nentitybrick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Thermal_Power_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.58?\nentitybldg:hcho5.58",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.58 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class thatFormaldehyde Level sensor 5.02 falls under.\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the applicable units for Electric Current.\nentitybrick:Electric_Current",
    "target_text": "SELECT ?unit WHERE { brick:Electric_Current qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the applicable units for CO2 Concentration?\nentitybrick:CO2_Concentration",
    "target_text": "SELECT ?unit WHERE { brick:CO2_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Hot Water Differential Pressure Deadband Setpoint?\nentitybrick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Differential_Pressure_Deadband_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the sh:rule properties for the Return Air Enthalpy Sensor.\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Enthalpy_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the narrower concepts for Chilled Water.\nentitybrick:Chilled_Water",
    "target_text": "SELECT ?narrower WHERE { brick:Chilled_Water skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Natural Gas.\nentitybrick:Natural_Gas",
    "target_text": "SELECT ?label WHERE { brick:Natural_Gas rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Outside Air Wet Bulb Temperature Sensor extends.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Retail Room?\nentitybrick:Retail_Room",
    "target_text": "SELECT ?tag WHERE { brick:Retail_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is the integral time parameter important for chilled water systems?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent classes of the Entering Chilled Water Temperature Setpoint.\nentitybrick:Entering_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Chilled_Water_Temperature_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Cooling Tower.\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Tower ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does a Chilled Water Static Pressure Setpoint specifically regulate chilled water?\nentitybrick:Chilled_Water_Static_Pressure_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Chilled_Water_Static_Pressure_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is the Unoccupied Zone Air Temperature Setpoint a subclass of?\nentitybrick:Unoccupied_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Zone_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Low Outside Air Temperature Enable Setpoint?\nentitybrick:Low_Outside_Air_Temperature_Enable_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Low_Outside_Air_Temperature_Enable_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label assigned to a Chilled Water Differential Pressure Sensor?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.38 located?\nentitybldg:cotwo5.38",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.38 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick Air Humidity Sensor 5.04 in the building?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  Ethyl Alcohol /C2H5CH Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Displacement Flow Air Diffuser have?\nentitybrick:Displacement_Flow_Air_Diffuser",
    "target_text": "SELECT ?tag WHERE { brick:Displacement_Flow_Air_Diffuser brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the zone supply air temperature values for RM107A between 9 AM and 11 AM today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the rdfs:subClassOf relationship for the Electrical Meter.\nentitybrick:Electrical_Meter",
    "target_text": "SELECT ?superclass WHERE { brick:Electrical_Meter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Bypass Command.\nentitybrick:Bypass_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Bypass_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of a Ceiling Fan?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Ceiling_Fan rdfs:subClassOf ?superclass . brick:Ceiling_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the gauge pressure sensor in the Banquet Hall.\nentitybldg:Banquet_Hall \n brick:Gauge_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Gauge_Pressure_Sensor ; brick:hasLocation bldg:Banquet_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Security Equipment?\nentitybrick:Security_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Security_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature deadband setpoint in the Ballroom.\nentitybldg:Ballroom \n brick:Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Ballroom ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Return Air Flow Sensor.\nentitybrick:Return_Air_Flow_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_Flow_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for Air Quality Level 5.02.\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert ifSound Noise loudness Sensor  5.01 shows abnormal readings today.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Manual Fire Alarm Activation Equipment?\nentitybrick:Manual_Fire_Alarm_Activation_Equipment",
    "target_text": "SELECT ?label WHERE { brick:Manual_Fire_Alarm_Activation_Equipment rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the title of Leaving Water?\nentitybrick:Leaving_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Steam On Off Command.\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label WHERE { brick:Steam_On_Off_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class for the Elevator Shaft.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Solar Radiance measure?\nentitybrick:Solar_Radiance",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Radiance skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me which Oxygen,O2 sensor is in room 5.04 and what sensor class it belongs to?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the High Head Pressure Alarm indicate?\nentitybrick:High_Head_Pressure_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:High_Head_Pressure_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Supply Air Temperature Sensor?\nentitybrick:Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Supply_Air_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Vent Operating Mode Status represent?\nentitybrick:Vent_Operating_Mode_Status",
    "target_text": "SELECT ?definition WHERE { brick:Vent_Operating_Mode_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Chilled Water Differential Pressure Proportional Band Parameter play in HVAC systems?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.02's Combustible Gas Smoke MQ2 Sensor  readings and overall building air quality index?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the complete metadata set for a Building Electrical Meter?\nentitybrick:Building_Electrical_Meter",
    "target_text": "SELECT ?property ?value WHERE { brick:Building_Electrical_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using data from  Ethyl Alcohol /C2H5CH Sensor 5.04.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent NO2 data available from  NO2 Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Energy Storage named in the ontology?\nentitybrick:Energy_Storage",
    "target_text": "SELECT ?label WHERE { brick:Energy_Storage rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.59 located?\nentitybldg:cotwo5.59",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.59 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using Alcohol Vapor MQ3 Gas Sensor  data from Sensor 5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Gas Meter?\nentitybrick:Gas_Meter",
    "target_text": "SELECT ?label WHERE { brick:Gas_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the alias of a discharge air flow high reset setpoint?\nentitybrick:Discharge_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Flow_High_Reset_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering hot water temperature setpoint in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Bench Space have?\nentitybrick:Bench_Space",
    "target_text": "SELECT ?tag WHERE { brick:Bench_Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a complete RDF description of Temperature?\nentitybrick:Temperature",
    "target_text": "DESCRIBE brick:Temperature\nWHERE { brick:Temperature ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Temperature Sensor 5.03 cover?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Temperature_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification ofCombustible Gas Smoke MQ2 Sensor 5.02.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class of sensor is Illuminance Sensor 5.04?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.04 due for a recalibration based on its  Illuminance Sensor output?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all loop chilled water supply temperature readings for the chiller recorded today.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Supply_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Cubicle classified in the ontology?\nentitybrick:Cubicle",
    "target_text": "SELECT ?superclass WHERE { brick:Cubicle rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Formaldehyde Level sensor is deployed in room 5.02 and what is its kind?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Formaldehyde_Level_Sensor_5.02 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time NO2 data from sensor 5.04.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label forSound Noise loudness Sensor  5.05.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule references for Temperature Step Parameter?\nentitybrick:Temperature_Step_Parameter",
    "target_text": "SELECT ?rule WHERE { brick:Temperature_Step_Parameter sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of PM1 particulate matter Level Sensor 5.01 based on its most recent data.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Operational Stage Count described?\nentitybrick:operationalStageCount",
    "target_text": "SELECT ?label WHERE { brick:operationalStageCount rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Mode Command.\nentitybrick:Mode_Command",
    "target_text": "SELECT ?tag WHERE { brick:Mode_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Oxygen,O2 measurements from  Oxygen,O2 Sensor 5.03 over the past 24 hours.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What setting is active on the zone air damper in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.04 of Temperature?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which entity has replaced Return Water Temperature Setpoint?\nentitybrick:Return_Water_Temperature_Setpoint",
    "target_text": "SELECT ?replacement WHERE { brick:Return_Water_Temperature_Setpoint brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone percent air flow log for RM107A for the last 15 minutes.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What concepts are narrower than Level?\nentitybrick:Level",
    "target_text": "SELECT ?narrower WHERE { brick:Level skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an HVAC Valve?\nentitybrick:HVAC_Valve",
    "target_text": "SELECT ?definition WHERE { brick:HVAC_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Sensor?\nentitybrick:Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Core Temperature Sensor have?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Core_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What happens if a Cooling Enable Command is not issued?\nentitybrick:Cooling_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me any skos:definition text for the Discharge Air Temperature Alarm.\nentitybrick:Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label ofCombustible Gas Smoke MQ2 Sensor 5.03?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Temperature Alarm related to Air Temperature Alarm?\nentitybrick:Supply_Air_Temperature_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Alarm rdfs:subClassOf brick:Air_Temperature_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Water Distribution.\nentitybrick:Water_Distribution",
    "target_text": "SELECT ?label WHERE { brick:Water_Distribution rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water flow sensor in the Floor2.\nentitybldg:Floor2 \n brick:Leaving_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Flow_Sensor ; brick:hasLocation bldg:Floor2 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Steam Usage Sensor measures.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pv current output sensor in the Sauna.\nentitybldg:Sauna \n brick:PV_Current_Output_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:PV_Current_Output_Sensor ; brick:hasLocation bldg:Sauna ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone air temperature data for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Standby CRAC.\nentitybrick:Standby_CRAC",
    "target_text": "SELECT ?definition WHERE { brick:Standby_CRAC skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the NO2 data from sensor5.05?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling supply air flow setpoint in the Staircase.\nentitybldg:Staircase \n brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Staircase ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.13?\nentitybldg:cotwo5.13",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.13 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.25?\nentitybldg:mqfive5.25",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.25 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the Alcohol Vapor MQ3 Gas Sensor  levels recorded by Sensor 5.02?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Overridden Status call itself?\nentitybrick:Overridden_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Position Sensor.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Stages Status.\nentitybrick:Stages_Status",
    "target_text": "SELECT ?parent WHERE { brick:Stages_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Temperature readings from Sensor 5.01?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Hot Water Discharge Temperature Sensor is a subclass of Discharge Water Temperature Sensor.\nentitybrick:Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Hot_Water_Discharge_Temperature_Sensor rdfs:subClassOf brick:Discharge_Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Zone CO2 Level Sensor.\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Zone_CO2_Level_Sensor rdfs:label ?label . brick:Zone_CO2_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What term is used to represent power in this energy system?\nentitybrick:Power",
    "target_text": "SELECT ?label WHERE { brick:Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for   CO  Sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for Differential Static Pressure?\nentitybrick:Differential_Static_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Differential_Static_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Box Mode Command compare to an Automatic Mode Command?\nentitybrick:Box_Mode_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Box_Mode_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Atrium important in buildings?\nentitybrick:Atrium",
    "target_text": "SELECT ?definition WHERE { brick:Atrium skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Oxygen,O2 sensors 5.01 in our building?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Capacity Sensor?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Capacity_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied air temperature cooling setpoint in the Kitchen.\nentitybldg:Kitchen \n brick:Occupied_Air_Temperature_Cooling_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Air_Temperature_Cooling_Setpoint ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of isPointOf?\nentitybrick:isPointOf",
    "target_text": "SELECT ?label WHERE { brick:isPointOf rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the Sound Noise loudness Sensor  reading from sensor 5.01 right now?\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that NO2 Sensor 5.01 falls under.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:NO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.04's Oxygen,O2 measurements over the last quarter.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.56 located?\nentitybldg:airq5.56",
    "target_text": "SELECT ?location WHERE { bldg:airq5.56 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for PM2.5 particulate matter Level Sensor 5.01.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating supply air temperature deadband setpoint in the Basement.\nentitybldg:Basement \n brick:Heating_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Supply_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Basement ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  PM2.5 particulate matter Level Sensor 5.03.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details related to a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Heat_Exchanger ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has cotwo5.01?\nentitybldg:cotwo5.01",
    "target_text": "SELECT ?room WHERE { bldg:cotwo5.01 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Combustible Gas Smoke MQ2 Sensor  5.04 set up?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the differential pressure load shed status in the North.\nentitybldg:North \n brick:Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:North ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all data stored about the Discharge Air Velocity Pressure Sensor.\nentitybrick:Discharge_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Velocity_Pressure_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the aliases for an average discharge air flow sensor?\nentitybrick:Average_Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?alias WHERE { brick:Average_Discharge_Air_Flow_Sensor brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Condenser Water System.\nentitybrick:Condenser_Water_System",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Water_System ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the temperature high reset setpoint in the Pool.\nentitybldg:Pool \n brick:Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Pool ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does hasQuantity call itself?\nentitybrick:hasQuantity",
    "target_text": "SELECT ?label WHERE { brick:hasQuantity rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Photovoltaic Array has the tag 'PV'.\nentitybrick:Photovoltaic_Array",
    "target_text": "ASK WHERE { brick:Photovoltaic_Array brick:hasAssociatedTag tag:PV . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of  Oxygen,O2 Sensor 5.02?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Reception?\nentitybrick:Reception",
    "target_text": "SELECT ?label WHERE { brick:Reception rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for Alcohol Vapor MQ3 Gas Sensor  from 5.04?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe an average discharge air flow sensor?\nentitybrick:Average_Discharge_Air_Flow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Average_Discharge_Air_Flow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the air humidity sensor 5.05 and where is it located?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the TETRA Room have?\nentitybrick:TETRA_Room",
    "target_text": "SELECT ?tag WHERE { brick:TETRA_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed inFormaldehyde Level sensor 5.03's data over the last month?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Max Limit is a subclass of Limit.\nentitybrick:Max_Limit",
    "target_text": "ASK WHERE { brick:Max_Limit rdfs:subClassOf brick:Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the active zone air temperature setpoint details for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone air temperature sensor in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  PM2.5 particulate matter Level Sensor 5.01 set up at?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest TVOC  reading from  TVOC  sensor 5.03.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from  Air Quality sensor 5.02 indicate any potential issues with air quality in the building?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Supply Air Temperature High Reset Setpoint?\nentitybrick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the category that Luminous Intensity falls under in the Brick schema.\nentitybrick:Luminous_Intensity",
    "target_text": "SELECT ?broader WHERE { brick:Luminous_Intensity skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Reception.\nentitybrick:Reception",
    "target_text": "SELECT ?property ?value WHERE { brick:Reception ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for Air Quality Level 5.02?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by  Oxygen,O2 Sensor 5.02's readings over the past 48 hours.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the current zone air temperature setpoint as measured in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.04 say about the current Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the function of the Entering Chilled Water Flow Setpoint.\nentitybrick:Entering_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Chilled_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Heating Demand Sensor?\nentitybrick:Heating_Demand_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Demand_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.04 is keeping it real with our smart building air quality standards?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Medium Temperature Hot Water Differential Pressure Load Shed Reset Status?\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?tag WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What air Temperature sensor 5.02 is in use and what is its installation spot?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Locally On Off Status?\nentitybrick:Locally_On_Off_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Locally_On_Off_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the radioactivity concentration sensor in the Staircase.\nentitybldg:Staircase \n brick:Radioactivity_Concentration_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Radioactivity_Concentration_Sensor ; brick:hasLocation bldg:Staircase ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for Air Quality sensor 5.05.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the water pressure setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Water_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Water_Pressure_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Return Air Enthalpy Sensor a subclass of?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_Enthalpy_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from  Oxygen,O2 Sensor 5.04 to compute an overall Oxygen,O2 index.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does a Heat Wheel belong to any heat recovery systems?\nentitybrick:hasPart",
    "target_text": "SELECT ?system WHERE { ?system brick:hasPart brick:Heat_Wheel . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every triple related to the Remotely On Off Status.\nentitybrick:Remotely_On_Off_Status",
    "target_text": "SELECT ?property ?value WHERE { brick:Remotely_On_Off_Status ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor category is assigned to  Air Temperature Sensor 5.04?\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Occupied Heating Temperature Setpoint.\nentitybrick:Occupied_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Occupied Heating Temperature Deadband Setpoint?\nentitybrick:Occupied_Heating_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Occupied_Heating_Temperature_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Entering Water Temperature Deadband Setpoint.\nentitybrick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Temperature_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water supply temperature sensor in the Study Room.\nentitybldg:Study_Room \n brick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Supply_Temperature_Sensor ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define an air flow deadband setpoint?\nentitybrick:Air_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the tags that are associated with a damper position command.\nentitybrick:Damper_Position_Command",
    "target_text": "SELECT ?tag WHERE { brick:Damper_Position_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What Sound Noise loudness Sensor  reading is sensor 5.05 reporting right now?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Valve Status.\nentitybrick:Valve_Status",
    "target_text": "SELECT ?label WHERE { brick:Valve_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Thermostat?\nentitybrick:Thermostat",
    "target_text": "SELECT ?tag WHERE { brick:Thermostat brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Effective Air Temperature Setpoint.\nentitybrick:Effective_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Differential Pressure Proportional Band.\nentitybrick:Differential_Pressure_Proportional_Band",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Pressure_Proportional_Band skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Distribution Frame represent?\nentitybrick:Distribution_Frame",
    "target_text": "SELECT ?definition WHERE { brick:Distribution_Frame skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Static Pressure Setpoint.\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about spaces in the Brick ontology.\nentitybrick:Space",
    "target_text": "SELECT ?definition WHERE { brick:Space skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for  Air Quality sensor 5.01 and its reliability trends.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Leaving Chilled Water Temperature Sensor?\nentitybrick:Leaving_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Has sensor5.03 reported a significant drop or rise in Ethyl Alcohol /C2H5CH  recently?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the peak zone reheat valve command value for RM107A on the previous day?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air velocity pressure sensor in the floor1.\nentitybldg:floor1 \n brick:Supply_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:floor1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Preheat Hot Water System.\nentitybrick:Preheat_Hot_Water_System",
    "target_text": "SELECT ?tag WHERE { brick:Preheat_Hot_Water_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Cooling Tower?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Tower brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Elevator Space reference an owl:equivalentClass?\nentitybrick:Elevator_Space",
    "target_text": "SELECT ?equiv WHERE { brick:Elevator_Space owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units defined for PM2.5Concentration.\nentitybrick:PM2",
    "target_text": "SELECT ?unit WHERE { brick:PM2.5_Concentration qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which components have a Temperature Coefficient?\nentitybrick:temperatureCoefficientofPmax",
    "target_text": "SELECT ?entity WHERE { ?entity brick:temperatureCoefficientofPmax ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Pressure Setpoint?\nentitybrick:Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What points does AHU02 have?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Supply Air Static Pressure Sensor?\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Static_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of  Ethyl Alcohol /C2H5CH Sensor 5.04 based on recent readings.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What descriptive tags are assigned to a Chilled Water Loop?\nentitybrick:Chilled_Water_Loop",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does sensor5.02 show any unusual Ethyl Alcohol /C2H5CH  spikes today?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Liquid Detection Alarm a type of general alarm?\nentitybrick:Liquid_Detection_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:Liquid_Detection_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is  PM2.5 particulate matter Level Sensor 5.03 placed?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.63 located?\nentitybldg:oxy5.63",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.63 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Auditorium integrate into large facilities?\nentitybrick:Auditorium",
    "target_text": "SELECT ?superclass WHERE { brick:Auditorium rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate an analytics report comparing Sensor 5.04's performance with similar sensors in our facility.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Entering Water Temperature Integral Time Parameter?\nentitybrick:Entering_Water_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Temperature_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the general groups and the exact subtype for COConcentration.\nentitybrick:CO_Concentration",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowerConcepts) WHERE { brick:CO_Concentration skos:broader ?broader . OPTIONAL { brick:CO_Concentration skos:narrower ?narrower . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for COConcentration in our system?\nentitybrick:CO_Concentration",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?unit; separator=\", \") AS ?units) ?dimension (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broaderCategories) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrowerConcepts) WHERE { brick:CO_Concentration rdfs:label ?label . brick:CO_Concentration skos:definition ?definition . brick:CO_Concentration qudt:applicableUnit ?unit . brick:CO_Concentration qudt:hasDimensionVector ?dimension . brick:CO_Concentration skos:broader ?broader . OPTIONAL { brick:CO_Concentration skos:narrower ?narrower . } } GROUP BY ?label ?definition ?dimension"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Condensate Leak Alarm detect leaks?\nentitybrick:Condensate_Leak_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Condensate_Leak_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.01's  PM2.5 particulate matter Level Sensor readings align with our smart building's sustainability KPIs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is Sound Noise loudness Sensor  5.04 associated with?\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.30?\nentitybldg:mqtwo5.30",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.30 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the thermal energy usage sensor in the North.\nentitybldg:North \n brick:Thermal_Energy_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Thermal_Energy_Usage_Sensor ; brick:hasLocation bldg:North ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasAssociatedTag a type of Irreflexive Property?\nentitybrick:hasAssociatedTag",
    "target_text": "ASK WHERE { brick:hasAssociatedTag a owl:IrreflexiveProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  PM10 particulate matter Level Sensor 5.02 and where is it located?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Failure Alarm?\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Failure_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label forSound Noise loudness Sensor  5.05.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings ofSound Noise loudness Sensor  5.03 compared to its normal range?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.40 airq5.40?\nentitybldg:hum5.40",
    "target_text": "SELECT ?room WHERE { bldg:hum5.40 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest measurement from  Air Quality Level 5.04.\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the  PM2.5 particulate matter Level Sensor 5.01 and show its sensor name.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM2.5_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the standard name used for an air wet bulb temperature sensor?\nentitybrick:Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is Air Quality sensor 5.05?\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Particulate Matter Sensor.\nentitybrick:Particulate_Matter_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Particulate_Matter_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Discharge Air Flow Reset Setpoint control?\nentitybrick:Discharge_Air_Flow_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Flow_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for  Oxygen,O2 Sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Staircase?\nentitybrick:Staircase",
    "target_text": "SELECT ?parent WHERE { brick:Staircase rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current CO2  reading from  CO2  Sensor 5.05?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Chilled Water Loop a subclass of another loop type?\nentitybrick:Chilled_Water_Loop",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Loop rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the LPG Natural Gas Town MQ5 Gas Sensor  data from sensor 5.05?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  PM10 particulate matter Level Sensor reading from Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of NO2 Sensor 5.01, please.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:NO2_Level_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all Manual Auto Status points in the building?\nentitybrick:Manual_Auto_Status",
    "target_text": "SELECT ?status WHERE { ?status a brick:Manual_Auto_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Heating Ventilation Air Conditioning System include the tag 'Heat'?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "ASK WHERE { brick:Heating_Ventilation_Air_Conditioning_System brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the PM10 Level Sensor.\nentitybrick:PM10_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:PM10_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Open Office?\nentitybrick:Open_Office",
    "target_text": "SELECT ?definition WHERE { brick:Open_Office skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Warmest Zone Air Temperature Sensor.\nentitybrick:Warmest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Warmest_Zone_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.39?\nentitybldg:notwo5.39",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.39 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What was the outside air temperature trend for AHU 01 during the last shift?\nentitybldg:bldg1.AHU.AHU01.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Static Pressure Deadband Setpoint set?\nentitybrick:Supply_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Static_Pressure_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Communication Loss Alarm?\nentitybrick:Communication_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Communication_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label forCombustible Gas Smoke MQ2 Sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Domestic Hot Water Temperature Setpoint.\nentitybrick:Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Domestic_Hot_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find all ounce-force (OZ) measurement units for Torque.\nentitybrick:Torque",
    "target_text": "SELECT ?unit WHERE { brick:Torque qudt:applicableUnit ?unit . FILTER(CONTAINS(STR(?unit), 'OZ')) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Zone have?\nentitybrick:Zone",
    "target_text": "SELECT ?tag WHERE { brick:Zone brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the lowest exhaust air static pressure sensor in the Corridor.\nentitybldg:Corridor \n brick:Lowest_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Lowest_Exhaust_Air_Static_Pressure_Sensor ; brick:hasLocation bldg:Corridor ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for   CO  Sensor 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a DC Bus Voltage Sensor?\nentitybrick:DC_Bus_Voltage_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:DC_Bus_Voltage_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what Discharge Air Temperature Sensor measures?\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if CO Sensor includes any tags.\nentitybrick:CO_Sensor",
    "target_text": "ASK { brick:CO_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What systems currently have Lead Lag enabled?\nentitybrick:hasStatus",
    "target_text": "SELECT ?device WHERE { ?device brick:hasStatus brick:Lead_Lag_Status . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a CO2 Differential Sensor have?\nentitybrick:CO2_Differential_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:CO2_Differential_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Demand Sensor?\nentitybrick:Demand_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Demand_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Condenser Water represent?\nentitybrick:Condenser_Water",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the name of Leaving Water.\nentitybrick:Leaving_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Formaldehyde Level sensor 5.04 and where is it set up?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.04 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the sensor name for   CO  Sensor 5.05.\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve full details of the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label ?definition ?quantity ?substance (GROUP_CONCAT(?tag; separator=\", \") AS ?tags) WHERE { brick:Exhaust_Air_Static_Pressure_Sensor rdfs:label ?label . brick:Exhaust_Air_Static_Pressure_Sensor skos:definition ?definition . OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . } OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . } OPTIONAL { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . } } GROUP BY ?label ?definition ?quantity ?substance"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for Freeze Status?\nentitybrick:Freeze_Status",
    "target_text": "SELECT ?label WHERE { brick:Freeze_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor's performance trend, and does Sensor 5.03 meet our smartness standards?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is DOAS defined under another class?\nentitybrick:DOAS",
    "target_text": "SELECT ?equiv WHERE { brick:DOAS owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the sh:property values associated with Entity.\nentitybrick:Entity",
    "target_text": "SELECT ?property WHERE { brick:Entity sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label WHERE { brick:Steam_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the skos:definition of the Frequency Sensor?\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Frequency_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Photovoltaic' associated with Photovoltaic Array?\nentitybrick:Photovoltaic_Array",
    "target_text": "ASK WHERE { brick:Photovoltaic_Array brick:hasAssociatedTag tag:Photovoltaic . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest temperature reading from air temperature sensor 5.04.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Gas System?\nentitybrick:Gas_System",
    "target_text": "SELECT ?superclass WHERE { brick:Gas_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has voc5.01?\nentitybldg:voc5.01",
    "target_text": "SELECT ?room WHERE { bldg:voc5.01 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the relationship between proportional band and pressure regulation?\nentitybrick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter ?property ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of pump is a Condenser Water Pump?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Water_Pump rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Supply Air Static Pressure Setpoint?\nentitybrick:Supply_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Static_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Copy Room fit into?\nentitybrick:Copy_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Copy_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.04's  PM2.5 particulate matter Level Sensor readings align with our smart building's sustainability KPIs?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Emergency Power Off System Activated By Leak Detection System Status?\nentitybrick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status",
    "target_text": "SELECT ?label WHERE { brick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Computer Room Air Conditioning a subclass of HVAC Equipment?\nentitybrick:Computer_Room_Air_Conditioning",
    "target_text": "ASK WHERE { brick:Computer_Room_Air_Conditioning rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where exactly is  PM1 particulate matter Level Sensor 5.03 installed?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Min Supply Air Static Pressure Setpoint Limit.\nentitybrick:Min_Supply_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Supply_Air_Static_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air temperature high reset setpoint in the Garden.\nentitybldg:Garden \n brick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Furniture a subclass of any BrickSchema classes?\nentitybrick:Furniture",
    "target_text": "SELECT ?superclass WHERE { brick:Furniture rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity for Water Level Sensor?\nentitybrick:Water_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which upper-level substance does BrickSchema define for Ice?\nentitybrick:Ice",
    "target_text": "SELECT ?broader WHERE { brick:Ice skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is the Overridden On Status a subclass of?\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?parent WHERE { brick:Overridden_On_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Underfloor Air Temperature Sensor?\nentitybrick:Underfloor_Air_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Underfloor_Air_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Static Pressure Setpoint?\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Supply Air Flow Setpoint a subclass of Air Flow Setpoint?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Setpoint rdfs:subClassOf brick:Air_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Compressor classified in the ontology?\nentitybrick:Compressor",
    "target_text": "SELECT ?superclass WHERE { brick:Compressor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Return Air Enthalpy Sensor have?\nentitybrick:Return_Air_Enthalpy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Enthalpy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?tag WHERE { brick:Overridden_On_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Frequency Sensor has in BrickSchema.\nentitybrick:Frequency_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Frequency_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air flow demand setpoint in the Gym.\nentitybldg:Gym \n brick:Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Flow_Demand_Setpoint ; brick:hasLocation bldg:Gym ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water flow sensor in the Equipment Room.\nentitybldg:Equipment_Room \n brick:Leaving_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Flow_Sensor ; brick:hasLocation bldg:Equipment_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Discharge Air Temperature Alarm have a corresponding class in BrickSchema?\nentitybrick:Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Alarm owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating discharge air flow setpoint in the Zone B.\nentitybldg:Zone B \n brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label, definition, and associated tags of the Breakroom?\nentitybrick:Breakroom",
    "target_text": "SELECT ?label ?definition ?tag WHERE { brick:Breakroom rdfs:label ?label . brick:Breakroom skos:definition ?definition . OPTIONAL { brick:Breakroom brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Exercise Room a subclass of another entity?\nentitybrick:Exercise_Room",
    "target_text": "SELECT ?superclass WHERE { brick:Exercise_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the disable hot water system outside air temperature setpoint in the Shower Room.\nentitybldg:Shower_Room \n brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint ; brick:hasLocation bldg:Shower_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the CO sensor installed in 5.01 and what is its classification?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.01 rdfs:label ?label . bldg:CO_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Frequency Command.\nentitybrick:Frequency_Command",
    "target_text": "SELECT ?tag WHERE { brick:Frequency_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is Alcohol Vapor MQ3 Gas Sensor  5.05 placed?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me if a damper has multiple classification tags.\nentitybrick:Damper",
    "target_text": "ASK WHERE { brick:Damper brick:hasAssociatedTag ?tag1 . FILTER(EXISTS { brick:Damper brick:hasAssociatedTag ?tag2 . FILTER(?tag1 != ?tag2) }) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the substance for the Return Air CO2 Sensor.\nentitybrick:Return_Air_CO2_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Return_Air_CO2_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of  Ethyl Alcohol /C2H5CH Sensor 5.01 based on recent readings.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current operational setting for the zone air control temperature in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average mixed air temperature reading for AHU 02 over the last hour?\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What physical property is monitored by a Chilled Water Differential Pressure Sensor?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor classification of   CO2  Sensor 5.02.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the parent classes of Operating Mode Status?\nentitybrick:Operating_Mode_Status",
    "target_text": "SELECT ?parent WHERE { brick:Operating_Mode_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity for Current Sensor?\nentitybrick:Current_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Current_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Ceiling Fan classified in the ontology?\nentitybrick:Ceiling_Fan",
    "target_text": "SELECT ?superclass WHERE { brick:Ceiling_Fan rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Noncondensing Natural Gas Boiler?\nentitybrick:Noncondensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?property ?value WHERE { brick:Noncondensing_Natural_Gas_Boiler ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the  CO2  sensor 5.04 and where is it set up?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:CO2_Level_Sensor_5.04 rdfs:label ?label . bldg:CO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define a discharge air duct pressure status?\nentitybrick:Discharge_Air_Duct_Pressure_Status",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Duct_Pressure_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Velocity Pressure Setpoint extends.\nentitybrick:Velocity_Pressure_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Velocity_Pressure_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Return Air CO2 Sensor.\nentitybrick:Return_Air_CO2_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_CO2_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.25?\nentitybldg:mqthree5.25",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.25 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Hot Water Supply Temperature Sensor declared deprecated?\nentitybrick:Hot_Water_Supply_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Hot_Water_Supply_Temperature_Sensor owl:deprecated true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Sound Noise loudness Sensor  fluctuations recorded by Sensor 5.05?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurements from Sensor 5.02 day-to-day?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all measurable quantities assigned to the max load setpoint.\nentitybrick:Max_Load_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Max_Load_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is  Illuminance Sensor 5.04 found?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements from PM2.5 particulate matter Level Sensor 5.05 over the past 24 hours.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Failure Alarm.\nentitybrick:Failure_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Failure_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Enable Fixed Temperature Command belong to?\nentitybrick:Enable_Fixed_Temperature_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Enable_Fixed_Temperature_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which VAV unit feeds RM107A?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM107A brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Oxygen,O2 fluctuations recorded by Sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the aliasOf property for RVAV?\nentitybrick:RVAV",
    "target_text": "SELECT ?alias WHERE { brick:RVAV brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Humidifier?\nentitybrick:Humidifier",
    "target_text": "SELECT ?tag WHERE { brick:Humidifier brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define a chilled water meter?\nentitybrick:Chilled_Water_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me  Ethyl Alcohol /C2H5CH trends and their variation over the last 24 hours in room or sensor 5.02.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is an Air Flow Loss Alarm important?\nentitybrick:Air_Flow_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Air_Flow_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the temperature low reset setpoint in the Garden.\nentitybldg:Garden \n brick:Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:Garden ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How can I retrieve all Leaving Water Differential Pressure Deadband Setpoints?\nentitybrick:Leaving_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Sound Noise loudness Sensor  5.05 and where is it located?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Mixed Air Temperature Sensor?\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Mixed_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Temperature Alarm Sensitivity Parameter.\nentitybrick:Temperature_Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Temperature_Alarm_Sensitivity_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for Energy Storage.\nentitybrick:Energy_Storage",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Energy_Storage ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the higher-level category of Damper.\nentitybrick:Damper",
    "target_text": "SELECT ?parent WHERE { brick:Damper rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Water Valve have?\nentitybrick:Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Outside Air Humidity Setpoint?\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.55?\nentitybldg:hcho5.55",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.55 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Chilled Water Discharge Flow Sensor?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Discharge_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  NO2 Sensor 5.02?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Exhaust Air Static Pressure Sensor.\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Static_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sh:node property for Location.\nentitybrick:Location",
    "target_text": "SELECT ?node WHERE { brick:Location sh:node ?node . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time cooling command value for AHU 02 right now?\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Min Fresh Air Setpoint Limit?\nentitybrick:Min_Fresh_Air_Setpoint_Limit",
    "target_text": "SELECT ?type WHERE { brick:Min_Fresh_Air_Setpoint_Limit a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a complete RDF description of Entering Chilled Water?\nentitybrick:Entering_Chilled_Water",
    "target_text": "DESCRIBE brick:Entering_Chilled_Water\nWHERE { brick:Entering_Chilled_Water ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Cooling Valve.\nentitybrick:Cooling_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Flow' one of the tags for Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Mixed Air Temperature Setpoint?\nentitybrick:Mixed_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Mixed_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve any text about how to mitigate the Discharge Hot Water Temperature Setpoint’s deprecation.\nentitybrick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?message WHERE { brick:Discharge_Hot_Water_Temperature_Setpoint brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class for Supply Air Temperature Step Parameter.\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Temperature_Step_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Loop.\nentitybrick:Loop",
    "target_text": "SELECT ?label WHERE { brick:Loop rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does an Atrium fall?\nentitybrick:Atrium",
    "target_text": "SELECT ?superclass WHERE { brick:Atrium rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Rest Room is called.\nentitybrick:Rest_Room",
    "target_text": "SELECT ?label WHERE { brick:Rest_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Direction Command classified in the ontology?\nentitybrick:Direction_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Direction_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the temperature low reset setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Temperature_Low_Reset_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Variable Frequency Drive.\nentitybrick:Variable_Frequency_Drive",
    "target_text": "SELECT ?tag WHERE { brick:Variable_Frequency_Drive brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name for  Oxygen,O2 Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is RTU described?\nentitybrick:RTU",
    "target_text": "SELECT ?label WHERE { brick:RTU rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Zone' a tag for HVAC Zone?\nentitybrick:HVAC_Zone",
    "target_text": "ASK WHERE { brick:HVAC_Zone brick:hasAssociatedTag tag:Zone . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Discharge Air Temperature Proportional Band Parameter labeled in BrickSchema?\nentitybrick:Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time  PM1 particulate matter Level Sensor data from sensor 5.03.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Supply Air Flow Low Reset Setpoint has the tag 'Discharge'?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Discharge . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is NO2 Sensor 5.05 at, like, in the building?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Combustible Gas Smoke MQ2 Sensor  5.01.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the tags for the Freezer?\nentitybrick:Freezer",
    "target_text": "SELECT ?tag WHERE { brick:Freezer brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation between Sensor 5.04's  PM10 particulate matter Level Sensor readings and overall building air quality index?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has temp5.30?\nentitybldg:temp5.30",
    "target_text": "SELECT ?room WHERE { bldg:temp5.30 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is  Air Quality Level 5.02 located in?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all tags related to the Effective Zone Air Temperature Setpoint.\nentitybrick:Effective_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Effective_Zone_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to the Elevator Shaft?\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?eq WHERE { brick:Elevator_Shaft owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the  PM1 particulate matter Level Sensor located in room 5.02.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the step parameter determined for chilled water pressure?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?parameter WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter ?property ?parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for the Hot Water Differential Pressure Deadband Setpoint?\nentitybrick:Hot_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Pressure_Deadband_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which unit is assigned to Rated Minimum Voltage Input?\nentitybrick:ratedMinimumVoltageInput",
    "target_text": "SELECT ?unit WHERE { brick:ratedMinimumVoltageInput qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Noncondensing Natural Gas Boiler belong to?\nentitybrick:Noncondensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?type WHERE { brick:Noncondensing_Natural_Gas_Boiler a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label ofSound Noise loudness Sensor  5.01.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  NO2 Sensor 5.01?\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the definition for CurrentAngle.\nentitybrick:Current_Angle",
    "target_text": "SELECT ?definition WHERE { brick:Current_Angle skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the  Air Quality sensor located in room 5.02.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.63?\nentitybldg:hcho5.63",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.63 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Outside Air CO2 Sensor?\nentitybrick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_CO2_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqthree5.05 located?\nentitybldg:mqthree5.05",
    "target_text": "SELECT ?location WHERE { bldg:mqthree5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Integral Gain Parameter a subclass of any BrickSchema classes?\nentitybrick:Integral_Gain_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Integral_Gain_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering hot water flow setpoint in the Break Room.\nentitybldg:Break_Room \n brick:Entering_Hot_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Hot_Water_Flow_Setpoint ; brick:hasLocation bldg:Break_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Overridden Status?\nentitybrick:Overridden_Status",
    "target_text": "SELECT ?label WHERE { brick:Overridden_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.01 and tell me its class.\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Temperature_Sensor_5.01 rdfs:label ?label . bldg:Air_Temperature_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water flow sensor in the Game Room.\nentitybldg:Game_Room \n brick:Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Flow_Sensor ; brick:hasLocation bldg:Game_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Exhaust Air Stack Flow Integral Time Parameter?\nentitybrick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the overall supply air pressure statistics for AHU 01 for today, including count, average, maximum, and minimum.\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.66 located?\nentitybldg:oxy5.66",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.66 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader categories does the Fan Status fall under?\nentitybrick:Fan_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Fan_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all stored information about the Emergency Phone.\nentitybrick:Emergency_Phone",
    "target_text": "SELECT ?property ?value WHERE { brick:Emergency_Phone ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Occupied Return Air Temperature Setpoint have?\nentitybrick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Pre Filter Status.\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?label WHERE { brick:Pre_Filter_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Formaldehyde Level sensor data from sensor 5.05.\nentitybldg:Formaldehyde_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01 over time?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Leaving Chilled Water?\nentitybrick:Leaving_Chilled_Water",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the source of HVAC for RM107A?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM107A brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  PM10 particulate matter Level Sensor 5.02?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure load shed status in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Chilled_Water_Differential_Pressure_Load_Shed_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Load_Shed_Status ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the warmest zone air temperature sensor in the north east zone.\nentitybldg:north-east-zone \n brick:Warmest_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Warmest_Zone_Air_Temperature_Sensor ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe Leaving Hot Water completely?\nentitybrick:Leaving_Hot_Water",
    "target_text": "DESCRIBE brick:Leaving_Hot_Water\nWHERE { brick:Leaving_Hot_Water ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Chilled Water Differential Pressure Load Shed Setpoint.\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum LPG Natural Gas Town MQ5 Gas Sensor  in sensor 5.02 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air temperature setpoint in the Locker Room.\nentitybldg:Locker_Room \n brick:Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Temperature_Setpoint ; brick:hasLocation bldg:Locker_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for Alcohol Vapor MQ3 Gas Sensor s 5.05 in our building?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Output Voltage Sensor?\nentitybrick:Output_Voltage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Output_Voltage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.67?\nentitybldg:airq5.67",
    "target_text": "SELECT ?room WHERE { bldg:airq5.67 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of an Auditorium?\nentitybrick:Auditorium",
    "target_text": "SELECT ?definition WHERE { brick:Auditorium skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that Radiant Panel extends.\nentitybrick:Radiant_Panel",
    "target_text": "SELECT ?parent WHERE { brick:Radiant_Panel rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Entering Water Flow Setpoint.\nentitybrick:Entering_Water_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes does the Discharge Air Temperature Step Parameter define in BrickSchema?\nentitybrick:Discharge_Air_Temperature_Step_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Temperature_Step_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current zone percent air flow data for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the Ethyl Alcohol /C2H5CH readings of Sensor 5.03 compared to its normal range?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the luminance sensor in the Balcony.\nentitybldg:Balcony \n brick:Luminance_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Luminance_Sensor ; brick:hasLocation bldg:Balcony ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Outside Air Wet Bulb Temperature Sensor have?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for zone supply air flow in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.04 measuring Formaldehyde Level sensor at the moment?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Steam System?\nentitybrick:Steam_System",
    "target_text": "SELECT ?label WHERE { brick:Steam_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label and type of the  Air Quality sensor installed in room 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.01 rdfs:label ?label . bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if Supply Air is equivalent to Discharge Air.\nentitybrick:Supply_Air",
    "target_text": "ASK { brick:Supply_Air owl:sameAs brick:Discharge_Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Emergency Power Off System a subclass of another entity?\nentitybrick:Emergency_Power_Off_System",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Power_Off_System rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the failure trends for TVOC  Sensor 5.04 in our smart building?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Heating Ventilation Air Conditioning System represent?\nentitybrick:Heating_Ventilation_Air_Conditioning_System",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Ventilation_Air_Conditioning_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Chilled Water Flow Sensor a subclass of Leaving Water Flow Sensor?\nentitybrick:Leaving_Chilled_Water_Flow_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Chilled_Water_Flow_Sensor rdfs:subClassOf brick:Leaving_Water_Flow_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  PM10 particulate matter Level Sensor data from Sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does the Alarm Sensitivity Parameter belong to?\nentitybrick:Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?category WHERE { brick:Alarm_Sensitivity_Parameter rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling discharge air flow setpoint in the Lounge.\nentitybldg:Lounge \n brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Lounge ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the exact spot where  Air Quality sensor 5.02 is placed.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Low Discharge Air Temperature Alarm has in BrickSchema.\nentitybrick:Low_Discharge_Air_Temperature_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Low_Discharge_Air_Temperature_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does VAVRM107A supply?\nentitybrick:feeds",
    "target_text": "SELECT ?room WHERE { bldg:VAVRM107A brick:feeds ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Workshop?\nentitybrick:Workshop",
    "target_text": "SELECT ?label WHERE { brick:Workshop rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the Sound Noise loudness Sensor  5.05 set up?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Alcohol Vapor MQ3 Gas Sensor  5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Steam Valve?\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?label WHERE { brick:Steam_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Temperature High Reset Setpoint call itself?\nentitybrick:Supply_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Temperature_High_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . brick:Steam_Usage_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in PM1 particulate matter Level Sensor 5.01's data over the last month?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Combustible Gas Smoke MQ2 Sensor  5.04 and where is it set up?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many equivalent classes does an AHU have?\nentitybrick:AHU",
    "target_text": "SELECT (COUNT(?equiv) AS ?equiv_count) WHERE { brick:AHU owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time LPG Natural Gas Town MQ5 Gas Sensor  data from sensor 5.05.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the tint status in the Laboratory.\nentitybldg:Laboratory \n brick:Tint_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Tint_Status ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the constraints specified for a Battery Voltage Sensor?\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Battery_Voltage_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.01's Combustible Gas Smoke MQ2 Sensor  output contribute to the overall building air quality index?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for System.\nentitybrick:System",
    "target_text": "SELECT ?parent WHERE { brick:System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is Voltage Imbalance a part of?\nentitybrick:Voltage_Imbalance",
    "target_text": "SELECT ?broader WHERE { brick:Voltage_Imbalance skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is PM10 particulate matter Level Sensor 5.03?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label, definition, and equivalent class for the Average Supply Air Flow Sensor.\nentitybrick:Average_Supply_Air_Flow_Sensor",
    "target_text": "SELECT ?label ?definition ?eq WHERE { brick:Average_Supply_Air_Flow_Sensor rdfs:label ?label . brick:Average_Supply_Air_Flow_Sensor skos:definition ?definition . brick:Average_Supply_Air_Flow_Sensor owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the official name/label for Air Quality Sensor.\nentitybrick:Air_Quality_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Air_Quality_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Zone Air Heating Temperature Setpoint.\nentitybrick:Zone_Air_Heating_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Zone_Air_Heating_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of FormaldehydeConcentration?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:Formaldehyde_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the substances for Supply Air Flow Setpoint.\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Supply_Air_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the category and all associated tags for a Boiler Command.\nentitybrick:Boiler_Command",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Boiler_Command rdfs:subClassOf ?superclass . brick:Boiler_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label and definition of Conversion efficiency?\nentitybrick:conversionEfficiency",
    "target_text": "SELECT ?label ?definition WHERE { brick:conversionEfficiency rdfs:label ?label; skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Valve Command.\nentitybrick:Valve_Command",
    "target_text": "SELECT ?tag WHERE { brick:Valve_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are used to classify Heat Detector?\nentitybrick:Heat_Detector",
    "target_text": "SELECT ?tag WHERE { brick:Heat_Detector brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for Combustible Gas Smoke MQ2 Sensor  5.05 and its reliability trends.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fan on off status in the west side.\nentitybldg:west-side \n brick:Fan_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fan_On_Off_Status ; brick:hasLocation bldg:west-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for  Air Quality Level 5.03 over the last six months?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Embedded Surface System Panel.\nentitybrick:Embedded_Surface_System_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Embedded_Surface_System_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Lighting.\nentitybrick:Lighting",
    "target_text": "SELECT ?definition WHERE { brick:Lighting skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are relevant to a Building Air Static Pressure Sensor?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Building_Air_Static_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the brick:hasAssociatedTag references for the Hot Deck.\nentitybrick:Hot_Deck",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Deck brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Solar Radiance Sensor?\nentitybrick:Solar_Radiance_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Solar_Radiance_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity for the Energy Sensor?\nentitybrick:Energy_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Energy_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe the Leaving Hot Water Temperature Low Reset Setpoint?\nentitybrick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for PM1 particulate matter Level Sensor 5.02 and its impact on indoor sustainability.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the TVOC  sensor 5.03 for yesterday?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.05's Combustible Gas Smoke MQ2 Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air temperature log for RM107B for the last 15 minutes.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What CO  reading is sensor 5.03 reporting right now?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass hierarchy for the Discharge Air Humidity Sensor.\nentitybrick:Discharge_Air_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Discharge_Air_Humidity_Sensor rdfs:subClassOf* ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Bypass Water Flow Setpoint different from other flow setpoints?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Water_Flow_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor class for PM10 particulate matter Level Sensor 5.04.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Water.\nentitybrick:Water",
    "target_text": "SELECT ?definition WHERE { brick:Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the mixed air temperature log for AHU 02 for the last 15 minutes.\nentitybldg:bldg1.AHU.AHU02.Mixed_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Mixed_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all loop chilled water return temperature readings for the chiller recorded today.\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for PM10 particulate matter Level Sensor 5.03?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.04 say about the current LPG Natural Gas Town MQ5 Gas Sensor ?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating mode status in the Terrace.\nentitybldg:Terrace \n brick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Mode_Status ; brick:hasLocation bldg:Terrace ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which facilities have a Mail Room?\nentitybrick:Mail_Room",
    "target_text": "SELECT ?mailRoom WHERE { ?mailRoom a brick:Mail_Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me an extensive overview of all attributes of an Absorption Chiller.\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?property ?value WHERE { brick:Absorption_Chiller ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Hot Water Usage Sensor?\nentitybrick:Hot_Water_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the hierarchical classification of a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?superclass WHERE { brick:Condenser_Heat_Exchanger rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Conference Room labeled in the ontology?\nentitybrick:Conference_Room",
    "target_text": "SELECT ?label WHERE { brick:Conference_Room rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the preheat supply air temperature sensor in the south side.\nentitybldg:south-side \n brick:Preheat_Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Preheat_Supply_Air_Temperature_Sensor ; brick:hasLocation bldg:south-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Air call itself?\nentitybrick:Air",
    "target_text": "SELECT ?label WHERE { brick:Air rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me how chilled water is applied in cooling systems.\nentitybrick:Chilled_Water",
    "target_text": "SELECT ?usage WHERE { brick:Chilled_Water skos:definition ?usage . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the textual representation of NVR?\nentitybrick:NVR",
    "target_text": "SELECT ?label WHERE { brick:NVR rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the substance for Zone Air Temperature Setpoint.\nentitybrick:Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Zone_Air_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements from PM2.5 particulate matter Level Sensor 5.04 over the past 24 hours.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has light5.21?\nentitybldg:light5.21",
    "target_text": "SELECT ?room WHERE { bldg:light5.21 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Temporary Occupancy Status indicates.\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?definition WHERE { brick:Temporary_Occupancy_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the official definition for Enthalpy sourced from?\nentitybrick:Enthalpy",
    "target_text": "SELECT ?source WHERE { brick:Enthalpy rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many chilled water return temperature measurements were recorded for the building chiller during the evening period today?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Thermally Activated Building System Panel?\nentitybrick:Thermally_Activated_Building_System_Panel",
    "target_text": "SELECT ?definition WHERE { brick:Thermally_Activated_Building_System_Panel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the zone air control temperature setpoint currently set in RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Min Position Setpoint Limit?\nentitybrick:Min_Position_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Position_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Sensor 5.02 indicate any potential issues with air quality in the building?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent property of timestamp?\nentitybrick:timestamp",
    "target_text": "SELECT ?parent WHERE { brick:timestamp rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all details about Discharge Air Flow Sensor using DESCRIBE.\nentitybrick:Discharge_Air_Flow_Sensor",
    "target_text": "DESCRIBE brick:Discharge_Air_Flow_Sensor\nWHERE { brick:Discharge_Air_Flow_Sensor ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What points are associated with AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Displacement Flow Air Diffuser do?\nentitybrick:Displacement_Flow_Air_Diffuser",
    "target_text": "SELECT ?definition WHERE { brick:Displacement_Flow_Air_Diffuser skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all recorded cooling valve output events for AHU 01 during the last weekend.\nentitybldg:bldg1.AHU.AHU01.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is hasQuantity a subProperty of Relationship?\nentitybrick:hasQuantity",
    "target_text": "ASK WHERE { brick:hasQuantity rdfs:subPropertyOf brick:Relationship . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Rain Duration Sensor?\nentitybrick:Rain_Duration_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Rain_Duration_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Leaving Water Flow Setpoint include Water Flow Setpoint?\nentitybrick:Leaving_Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Leaving_Water_Flow_Setpoint rdfs:subClassOf brick:Water_Flow_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  Ethyl Alcohol /C2H5CH Sensor 5.01 at?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes are linked to the Discharge Air Temperature Deadband Setpoint.\nentitybrick:Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What was the zone air control temperature setpoint trend for RM107B during the last shift?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does the Intake Air Filter fall?\nentitybrick:Intake_Air_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Intake_Air_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering medium temperature hot water temperature load shed setpoint in the Workshop.\nentitybldg:Workshop \n brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current reading of the zone air temperature sensor in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Air Humidity Sensor 5.04 located?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity linked to Mixed Air Temperature Sensor.\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Mixed_Air_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification tags does a Disable Fixed Enthalpy Command have?\nentitybrick:Disable_Fixed_Enthalpy_Command",
    "target_text": "SELECT ?tag WHERE { brick:Disable_Fixed_Enthalpy_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount Combustible Gas Smoke MQ2 Sensor  5.05?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Air Quality sensor 5.02 installed?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Speed Sensor call itself?\nentitybrick:Speed_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Speed_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air quality sensor in the Auditorium.\nentitybldg:Auditorium \n brick:Air_Quality_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Quality_Sensor ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does a Core Temperature Sensor belong to?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Core_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by Air Quality sensor 5.05's readings over the past 48 hours.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the ambient TVOC  as measured by sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  NO2 Sensor 5.04?\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Please provide the sensor name for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active command state for the zone air damper in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for   TVOC  Sensor 5.03?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:TVOC_Level_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Fan On Off Status?\nentitybrick:Fan_On_Off_Status",
    "target_text": "SELECT ?label WHERE { brick:Fan_On_Off_Status rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  PM2.5 particulate matter Level Sensor 5.03?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details of the active zone air control temperature setpoint in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum supply air temperature setpoint value from AHU 01 in the last 30 minutes?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'HVAC' one of the tags for VAVRM115?\nentitybrick:hasTag",
    "target_text": "ASK WHERE { bldg:VAVRM115 brick:hasTag tag:HVAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor replaces the Chilled Water Supply Temperature Sensor?\nentitybrick:Chilled_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?replacement WHERE { brick:Chilled_Water_Supply_Temperature_Sensor brick:isReplacedBy ?replacement . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Entering Chilled Water Temperature Sensor.\nentitybrick:Entering_Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Chilled_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How frequently is the zone percent air flow sensor updating for RM107A during the last hour?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Entering Medium Temperature Hot Water Temperature Sensor inherit from?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Entering Medium Temperature Hot Water Temperature Low Reset Setpoint?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Heating Temperature Setpoint?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02's performance compared to industry benchmarks.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the outside air co2 sensor in the Supply Room.\nentitybldg:Supply_Room \n brick:Outside_Air_CO2_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Outside_Air_CO2_Sensor ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the  Air Quality sensor measurements from sensor 5.02?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Dewpoint Setpoint?\nentitybrick:Dewpoint_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Dewpoint_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor reading for zone supply air temperature in RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is measured by Current Sensor?\nentitybrick:Current_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Current_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of Wet_Bulb_Temperature.\nentitybrick:Wet_Bulb_Temperature",
    "target_text": "SELECT ?label WHERE { brick:Wet_Bulb_Temperature rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the chilled water return temperature values for the building chiller yesterday?\nentitybldg:bldg1.CHW.Building_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of   CO2  Sensor 5.05?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the substance for Water Temperature Setpoint.\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.48 located?\nentitybldg:oxy5.48",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.48 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Unoccupied Air Temperature Setpoint.\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Smoke' a tag for Supply Air Smoke Detection Alarm?\nentitybrick:Supply_Air_Smoke_Detection_Alarm",
    "target_text": "ASK WHERE { brick:Supply_Air_Smoke_Detection_Alarm brick:hasAssociatedTag tag:Smoke . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is a Bypass Air Flow Sensor?\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Bypass_Air_Flow_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in TVOC  from Sensor 5.04 could be used to forecast future maintenance needs?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label and definition for the VFD Enable Command?\nentitybrick:VFD_Enable_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:VFD_Enable_Command rdfs:label ?label . brick:VFD_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe Availability Status?\nentitybrick:Availability_Status",
    "target_text": "SELECT ?definition WHERE { brick:Availability_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  Illuminance Sensor reading from Sensor 5.01?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Chilled Water Differential Temperature Sensor?\nentitybrick:Chilled_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch all RDF properties for the Electric Boiler.\nentitybrick:Electric_Boiler",
    "target_text": "SELECT ?property ?value WHERE { brick:Electric_Boiler ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you run an analysis on sensor drift for temperature Sensor 5.01 over time?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Blind.\nentitybrick:Blind",
    "target_text": "SELECT ?property ?value WHERE { brick:Blind ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Energy Zone?\nentitybrick:Energy_Zone",
    "target_text": "SELECT ?label WHERE { brick:Energy_Zone rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering chilled water flow setpoint in the Shop.\nentitybldg:Shop \n brick:Entering_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Chilled_Water_Flow_Setpoint ; brick:hasLocation bldg:Shop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Energy System extends.\nentitybrick:Energy_System",
    "target_text": "SELECT ?parent WHERE { brick:Energy_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Constant Air Volume Box.\nentitybrick:Constant_Air_Volume_Box",
    "target_text": "SELECT ?definition WHERE { brick:Constant_Air_Volume_Box skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone air temperature setpoint records for RM107A over the past week.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Static Pressure Proportional Band Parameter means.\nentitybrick:Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Static_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Run Time Sensor described?\nentitybrick:Run_Time_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Run_Time_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.03 hanging out?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the QUDT reference for Luminance?\nentitybrick:Luminance",
    "target_text": "SELECT ?reference WHERE { brick:Luminance brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for Air Quality sensor 5.04 and its impact on indoor sustainability.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Photovoltaic Current Output Sensor include the tag 'Sensor'?\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "ASK WHERE { brick:Photovoltaic_Current_Output_Sensor brick:hasAssociatedTag tag:Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does sensor 5.05 say about the current temperature?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Leaving Water Temperature Setpoint.\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the damper position command summary for the economizer for yesterday afternoon?\nentitybldg:bldg1.CHW.ECONOMIZER",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.ECONOMIZER ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find out the sensor classification for Illuminance Sensor 5.02.\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the load shed differential pressure setpoint in the Lobby.\nentitybldg:Lobby \n brick:Load_Shed_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Load_Shed_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Detention Room?\nentitybrick:Detention_Room",
    "target_text": "SELECT ?rule WHERE { brick:Detention_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone reheat valve command setting for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Supply Air Flow Demand Setpoint?\nentitybrick:Supply_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Flow_Demand_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the rdfs:subClassOf relationships for the Heat Sensor.\nentitybrick:Heat_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Heat_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Derivative Gain Parameter in PID control?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?effect WHERE { brick:Derivative_Gain_Parameter brick:hasEffect ?effect . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Remotely On Off Status.\nentitybrick:Remotely_On_Off_Status",
    "target_text": "SELECT ?rule WHERE { brick:Remotely_On_Off_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does Standby Unit On Off Status belong to?\nentitybrick:Standby_Unit_On_Off_Status",
    "target_text": "SELECT ?parent WHERE { brick:Standby_Unit_On_Off_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which humidity sensor is set up in 5.02 and what kind is it?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is  PM1 particulate matter Level Sensor 5.04 located?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using Sound Noise loudness Sensor  5.01.\nentitybldg:Sound_Noise_Sensor_MEMS_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Outside Air Temperature Low Reset Setpoint?\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Supply Air Plenum?\nentitybrick:Supply_Air_Plenum",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Plenum owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the equivalent class of the Heating Supply Air Temperature Integral Time Parameter.\nentitybrick:Heating_Supply_Air_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?eq WHERE { brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from  CO2  Sensor 5.02 to compute an overall CO2  index.\nentitybldg:CO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.70 located?\nentitybldg:airq5.70",
    "target_text": "SELECT ?location WHERE { bldg:airq5.70 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for  PM10 particulate matter Level Sensor 5.04?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the units associated with Wet_Bulb_Temperature.\nentitybrick:Wet_Bulb_Temperature",
    "target_text": "SELECT ?unit WHERE { brick:Wet_Bulb_Temperature qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor label for PM1 particulate matter Level Sensor 5.05.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a regression analysis on the CO2  data from Sensor 5.05 for the past year.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does the Entering Chilled Water Flow Sensor measure?\nentitybrick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Chilled_Water_Flow_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Hot_Water_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Dimmer?\nentitybrick:Dimmer",
    "target_text": "SELECT ?tag WHERE { brick:Dimmer brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all associated tags for Motion Sensor?\nentitybrick:Motion_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Motion_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Radiator' one of the tags for Baseboard Radiator?\nentitybrick:Baseboard_Radiator",
    "target_text": "ASK WHERE { brick:Baseboard_Radiator brick:hasAssociatedTag tag:Radiator . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which hum5.71 airq5.71?\nentitybldg:hum5.71",
    "target_text": "SELECT ?room WHERE { bldg:hum5.71 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature deadband setpoint in the Hallway.\nentitybldg:Hallway \n brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Hallway ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Evaluate any HVAC anomalies indicated by Air Quality Level 5.01's readings over the past 48 hours.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Return Air CO2 Setpoint refer to?\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_CO2_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the supply air temperature heating setpoint in the Patio.\nentitybldg:Patio \n brick:Supply_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Supply_Air_Temperature_Heating_Setpoint ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqthree5.39?\nentitybldg:mqthree5.39",
    "target_text": "SELECT ?room WHERE { bldg:mqthree5.39 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of ratedVoltageOutput?\nentitybrick:ratedVoltageOutput",
    "target_text": "SELECT ?label WHERE { brick:ratedVoltageOutput rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Flow Low Reset Setpoint has the tag 'Air'.\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Occupied Heating Mode Status.\nentitybrick:Occupied_Heating_Mode_Status",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Heating_Mode_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the QUDT reference for Real Power.\nentitybrick:Real_Power",
    "target_text": "SELECT ?reference WHERE { brick:Real_Power brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the standard name used for an air flow demand setpoint?\nentitybrick:Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Air_Flow_Demand_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for PM1 particulate matter Level Sensor 5.04?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the High Humidity Alarm a subclass of another alarm type?\nentitybrick:High_Humidity_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:High_Humidity_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to   CO2  Sensor 5.04?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:CO2_Level_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of  Illuminance Sensor readings from Sensor 5.01 for sustainability reporting.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show every property-value pair describing Makeup Water.\nentitybrick:Makeup_Water",
    "target_text": "SELECT ?property ?value WHERE { brick:Makeup_Water ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to the Electrical Meter.\nentitybrick:Electrical_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Electrical_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the tag 'Cool' associated with Max Unoccupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Cool . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Steam System extends.\nentitybrick:Steam_System",
    "target_text": "SELECT ?parent WHERE { brick:Steam_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What substance is measured by Leaving Water Temperature Setpoint?\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Leaving_Water_Temperature_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the class types of the Motor On Off Status?\nentitybrick:Motor_On_Off_Status",
    "target_text": "SELECT ?type WHERE { brick:Motor_On_Off_Status a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Gain Parameter.\nentitybrick:Gain_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Gain_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the Temperature data from Sensor 5.05 with HVAC anomalies?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is narrower than Level?\nentitybrick:Level",
    "target_text": "SELECT ?narrower WHERE { brick:Level skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints must a Chilled Water Differential Pressure Sensor follow?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Chilled_Water_Differential_Pressure_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term  Illuminance Sensor trends from Sensor 5.01?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name forSound Noise loudness Sensor  5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the associated tags of Mechanical Room?\nentitybrick:Mechanical_Room",
    "target_text": "SELECT ?tag WHERE { brick:Mechanical_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you verify if the power concept includes units like PlanckPower and TeraW in its measurements?\nentitybrick:Power",
    "target_text": "ASK {  brick:Power qudt:applicableUnit unit:PlanckPower , unit:TeraW .}"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the constraints specified for an Average Zone Air Temperature Sensor?\nentitybrick:Average_Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Average_Zone_Air_Temperature_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which physical property is controlled using the Leaving Water Temperature Deadband Setpoint?\nentitybrick:Leaving_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Leaving_Water_Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is   CO2  Sensor 5.05?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me complete information about Outside.\nentitybrick:Outside",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label, applicable units, and QUDT reference for Conductivity?\nentitybrick:Conductivity",
    "target_text": "SELECT ?label ?unit ?reference WHERE { brick:Conductivity rdfs:label ?label . brick:Conductivity qudt:applicableUnit ?unit . brick:Conductivity brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the official label ofSound Noise loudness Sensor  5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Outside Damper?\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?label WHERE { brick:Outside_Damper rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Leaving Chilled Water Temperature Setpoint?\nentitybrick:Leaving_Chilled_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Return Air Temperature Alarm?\nentitybrick:Return_Air_Temperature_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Temperature_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for a Differential Speed Sensor?\nentitybrick:Differential_Speed_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Differential_Speed_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current NO2 values from Sensor 5.05 compare with historical averages?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Hot Box play in HVAC systems?\nentitybrick:Hot_Box",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Box skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the VFD Enable Command does.\nentitybrick:VFD_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:VFD_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Electric Boiler?\nentitybrick:Electric_Boiler",
    "target_text": "SELECT ?property ?value WHERE { brick:Electric_Boiler ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the aliasOf value for the Discharge Air Static Pressure Deadband Setpoint?\nentitybrick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Static_Pressure_Deadband_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Zone Air Humidity Sensor.\nentitybrick:Zone_Air_Humidity_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Humidity_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Visitor Lobby.\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?tag WHERE { brick:Visitor_Lobby brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for Combustible Gas Smoke MQ2 Sensor  from sensor 5.01.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is PM1 particulate matter Level Sensor 5.01?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for  Air temperature Sensor 5.02?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:Air_Temperature_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected Sound Noise loudness Sensor  levels over the past quarter?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Flow' one of the tags for Occupied Cooling Supply Air Flow Setpoint?\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Flow . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the embedded temperature setpoint in the Study Room.\nentitybldg:Study_Room \n brick:Embedded_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Embedded_Temperature_Setpoint ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the category and descriptive tags of a CO Differential Sensor.\nentitybrick:CO_Differential_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:CO_Differential_Sensor rdfs:subClassOf ?superclass . brick:CO_Differential_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the tags related to a Chilled Water Differential Pressure Load Shed Reset Status?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving medium temperature hot water temperature high reset setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Space' one of the tags for Common Space?\nentitybrick:Common_Space",
    "target_text": "ASK WHERE { brick:Common_Space brick:hasAssociatedTag tag:Space . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Entering Water Flow Sensor?\nentitybrick:Entering_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Entering_Water_Flow_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Dedicated Outdoor Air System Unit have?\nentitybrick:Dedicated_Outdoor_Air_System_Unit",
    "target_text": "SELECT ?tag WHERE { brick:Dedicated_Outdoor_Air_System_Unit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Air Humidity Sensor 5.03 cover?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, where's  Illuminance Sensor 5.04 located?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the direct superclasses of Occupied Load Shed Command?\nentitybrick:Occupied_Load_Shed_Command",
    "target_text": "SELECT ?parent WHERE { brick:Occupied_Load_Shed_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?definition WHERE { brick:Overridden_On_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from Sound Noise loudness Sensor  5.05 align with smart building sustainability standards?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show me the sensor class for   CO  Sensor 5.05?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that  TVOC  Sensor 5.05 at?\nentitybldg:TVOC_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the substance associated with Mixed Air Temperature Sensor?\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Mixed_Air_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List tags with 'Air' in them for Min Supply Air Temperature Setpoint Limit.\nentitybrick:Min_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Supply_Air_Temperature_Setpoint_Limit brick:hasAssociatedTag ?tag . FILTER(CONTAINS(STR(?tag), \"Air\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the latest sensor data for  PM1 particulate matter Level Sensor from 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling start stop status in the West.\nentitybldg:West \n brick:Cooling_Start_Stop_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Start_Stop_Status ; brick:hasLocation bldg:West ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Baseboard Radiator?\nentitybrick:Baseboard_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Baseboard_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show the associated tags for TVOC Sensor?\nentitybrick:TVOC_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:TVOC_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is an Active Power Sensor?\nentitybrick:Active_Power_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Active_Power_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe a Gas Sensor?\nentitybrick:Gas_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Gas_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the AHUs installed in this building?\nentitybrick:AHU",
    "target_text": "SELECT ?ahu WHERE { ?ahu a brick:AHU . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of Demand Setpoint.\nentitybrick:Demand_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Demand_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Underfloor Air Plenum Static Pressure Sensor?\nentitybrick:Underfloor_Air_Plenum_Static_Pressure_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Underfloor_Air_Plenum_Static_Pressure_Sensor rdfs:label ?label . brick:Underfloor_Air_Plenum_Static_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the ammonia sensor in the Office.\nentitybldg:Office \n brick:Ammonia_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Ammonia_Sensor ; brick:hasLocation bldg:Office ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the quantity linked to the Refrigerant Level Sensor.\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Refrigerant_Level_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average cooling valve output reading for AHU 02 over the last hour?\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Ethyl Alcohol /C2H5CH sensor installed in room 5.05 and what type is it?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What failure trends have been observed in PM10 particulate matter Level Sensor 5.02's data over the last month?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Entering Water Temperature Integral Time Parameter measure?\nentitybrick:Entering_Water_Temperature_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Water_Temperature_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What measurement does a Chilled Water Differential Pressure Sensor provide?\nentitybrick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Differential_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the applicable units for static pressure readings.\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Unoccupied Cooling Discharge Air Flow Setpoint described?\nentitybrick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the High Air Flow Alarm help in air flow management?\nentitybrick:High_Air_Flow_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:High_Air_Flow_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water discharge flow sensor in the North.\nentitybldg:North \n brick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Discharge_Flow_Sensor ; brick:hasLocation bldg:North ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Outside Air Temperature Setpoint represent?\nentitybrick:Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Outside_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Zone?\nentitybrick:Zone",
    "target_text": "SELECT ?tag WHERE { brick:Zone brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the overridden on status in the Kitchen.\nentitybldg:Kitchen \n brick:Overridden_On_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Overridden_On_Status ; brick:hasLocation bldg:Kitchen ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas stats from sensor 5.05.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest zone air temperature setpoint reading in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name/label for Static Pressure Setpoint?\nentitybrick:Static_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does PM10 particulate matter Level Sensor 5.04 belong to?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find potential sensor failures reported in the last quarter for Alcohol Vapor MQ3 Gas Sensor  5.01.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Chilled Water Pump'.\nentitybrick:Chilled_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Differential Pressure Sensor.\nentitybrick:Differential_Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the  Air Quality sensor data from Sensor 5.05.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Derivative Gain Parameter affect PID tuning?\nentitybrick:Derivative_Gain_Parameter",
    "target_text": "SELECT ?effect WHERE { brick:Derivative_Gain_Parameter brick:hasEffect ?effect . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of the Final Filter?\nentitybrick:Final_Filter",
    "target_text": "SELECT ?label WHERE { brick:Final_Filter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air temperature setting in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is PSI one of the units for Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "ASK WHERE { brick:Velocity_Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Outside Air Humidity Sensor a subclass of?\nentitybrick:Outside_Air_Humidity_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Air_Humidity_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: May I know the official sensor name forCombustible Gas Smoke MQ2 Sensor 5.03?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Smoke Detector.\nentitybrick:Smoke_Detector",
    "target_text": "SELECT ?label WHERE { brick:Smoke_Detector rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label is given to the Electric Baseboard Radiator?\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?label WHERE { brick:Electric_Baseboard_Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is   CO  Sensor 5.03?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Water Meter means.\nentitybrick:Water_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Water_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the source that defines Dry_Bulb_Temperature.\nentitybrick:Dry_Bulb_Temperature",
    "target_text": "SELECT ?source WHERE { brick:Dry_Bulb_Temperature rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of Liquid?\nentitybrick:Liquid",
    "target_text": "SELECT ?broader WHERE { brick:Liquid skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me whether the Chilled Water Return Temperature Sensor is deprecated.\nentitybrick:Chilled_Water_Return_Temperature_Sensor",
    "target_text": "ASK { brick:Chilled_Water_Return_Temperature_Sensor owl:deprecated true . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current Ethyl Alcohol /C2H5CH  sensor 5.03 status across the smart home?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many properties are defined for the Fan Command?\nentitybrick:Fan_Command",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Fan_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Communication Loss Alarm necessary?\nentitybrick:Communication_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Communication_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How many zone air temperature setpoint changes were recorded for RM107A during the early hours today?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which point represents the building’s chilled water return temperature in the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.Building_Chilled_Water_Return_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current NO2 stats from sensor 5.03.\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the source definition for Position.\nentitybrick:Position",
    "target_text": "SELECT ?source WHERE { brick:Position rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the dimension vector associated with Ozone Concentration?\nentitybrick:Ozone_Concentration",
    "target_text": "SELECT ?vector WHERE { brick:Ozone_Concentration qudt:hasDimensionVector ?vector . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Cooling Tower Fan?\nentitybrick:Cooling_Tower_Fan",
    "target_text": "SELECT ?property ?value WHERE { brick:Cooling_Tower_Fan ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the air quality trends over the past month using  PM10 particulate matter Level Sensor 5.02.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me details about the Formaldehyde Level sensor 5.01 and where it is installed.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:Formaldehyde_Level_Sensor_5.01 rdfs:label ?label . bldg:Formaldehyde_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does the Region belong to?\nentitybrick:Region",
    "target_text": "SELECT ?parent WHERE { brick:Region rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Relay Command.\nentitybrick:Relay_Command",
    "target_text": "SELECT ?label WHERE { brick:Relay_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which group does Temperature Differential Reset Setpoint belong to?\nentitybrick:Temperature_Differential_Reset_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Temperature_Differential_Reset_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Control Room?\nentitybrick:Control_Room",
    "target_text": "SELECT ?rule WHERE { brick:Control_Room sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Return Air Temperature High Reset Setpoint.\nentitybrick:Return_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Temperature_High_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Distribution Frame.\nentitybrick:Distribution_Frame",
    "target_text": "SELECT ?tag WHERE { brick:Distribution_Frame brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Disable Fixed Temperature Command fall?\nentitybrick:Disable_Fixed_Temperature_Command",
    "target_text": "SELECT ?superclass WHERE { brick:Disable_Fixed_Temperature_Command rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air differential pressure setpoint in the Floor 5.\nentitybldg:Floor_5 \n brick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Floor_5 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the spot for  PM10 particulate matter Level Sensor 5.04?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Supply Air Flow Reset Setpoint control?\nentitybrick:Supply_Air_Flow_Reset_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Flow_Reset_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's  PM2.5 particulate matter Level Sensor 5.04 set up at?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What function does the Filter Reset Command serve?\nentitybrick:Filter_Reset_Command",
    "target_text": "SELECT ?definition WHERE { brick:Filter_Reset_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the current sensor in the Rest Area.\nentitybldg:Rest_Area \n brick:Current_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Current_Sensor ; brick:hasLocation bldg:Rest_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of VAV.\nentitybrick:VAV",
    "target_text": "SELECT ?label WHERE { brick:VAV rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the brick:hasQuantity value for a Chilled Water Differential Temperature Sensor?\nentitybrick:Chilled_Water_Differential_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Chilled_Water_Differential_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label used for the Discharge Air Temperature Low Reset Setpoint.\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Entering Water Temperature Proportional Band Parameter categorized in the ontology?\nentitybrick:Entering_Water_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Water_Temperature_Proportional_Band_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Max Unoccupied Heating Supply Air Flow Setpoint Limit?\nentitybrick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.51?\nentitybldg:notwo5.51",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.51 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Retail Store.\nentitybldg:Retail_Store \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Retail_Store ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Supply Air Velocity Pressure Sensor.\nentitybrick:Supply_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Velocity_Pressure_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Bypass Valve a subclass of?\nentitybrick:Bypass_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Bypass_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Supply Air Temperature Sensor measure?\nentitybrick:Supply_Air_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Rated Maximum Current Input defined?\nentitybrick:ratedMaximumCurrentInput",
    "target_text": "SELECT ?definition WHERE { brick:ratedMaximumCurrentInput skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.04 and tell me its class.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air static pressure sensor in the Patio.\nentitybldg:Patio \n brick:Discharge_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Static_Pressure_Sensor ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the high temperature hot water supply temperature sensor in the south east zone.\nentitybldg:south-east-zone \n brick:High_Temperature_Hot_Water_Supply_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:High_Temperature_Hot_Water_Supply_Temperature_Sensor ; brick:hasLocation bldg:south-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Supply Air Temperature Setpoint include Unoccupied Discharge Air Temperature Setpoint?\nentitybrick:Unoccupied_Supply_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Supply_Air_Temperature_Setpoint owl:equivalentClass brick:Unoccupied_Discharge_Air_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Air Plenum belong to another category?\nentitybrick:Air_Plenum",
    "target_text": "SELECT ?category WHERE { brick:Air_Plenum rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the connection between a Detention Room and a Security Service Room?\nentitybrick:Detention_Room",
    "target_text": "SELECT ?relatedSpace WHERE { brick:Detention_Room rdfs:subClassOf ?relatedSpace . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does an Absorption Chiller compare to a traditional chiller?\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?definition WHERE { brick:Absorption_Chiller skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Environment Box?\nentitybrick:Environment_Box",
    "target_text": "SELECT ?tag WHERE { brick:Environment_Box brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Occupied Air Temperature Setpoint?\nentitybrick:Occupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Liquid?\nentitybrick:Liquid",
    "target_text": "SELECT ?label WHERE { brick:Liquid rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water differential pressure sensor in the Seminar Room.\nentitybldg:Seminar_Room \n brick:Chilled_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:Seminar_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which CO2  sensor is set up in 5.03 and what kind is it?\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO2_Level_Sensor_5.03 rdfs:label ?label . bldg:CO2_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Occupied Air Temperature Heating Setpoint have?\nentitybrick:Occupied_Air_Temperature_Heating_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Occupied_Air_Temperature_Heating_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Voltage Angle.\nentitybrick:Voltage_Angle",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Angle rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the sensor readings from  Air Quality Level 5.02 align with smart building sustainability standards?\nentitybldg:Air_Quality_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: When does the Hot Water Differential Pressure Load Shed Reset Status change?\nentitybrick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the quantity and substance for the Exhaust Air Static Pressure Sensor?\nentitybrick:Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity ?substance WHERE { brick:Exhaust_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . brick:Exhaust_Air_Static_Pressure_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current sensor output for the zone air temperature in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Reheat Valve a subclass of?\nentitybrick:Reheat_Valve",
    "target_text": "SELECT ?parent WHERE { brick:Reheat_Valve rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Leaving Water Temperature Proportional Band Parameter play in HVAC?\nentitybrick:Leaving_Water_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Temperature_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Computer Room Air Conditioning is equivalent to CRAC.\nentitybrick:Computer_Room_Air_Conditioning",
    "target_text": "ASK WHERE { brick:Computer_Room_Air_Conditioning owl:equivalentClass brick:CRAC . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Rain Level Sensor refer to?\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Rain_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heat exchanger system enable status in the Lawn.\nentitybldg:Lawn \n brick:Heat_Exchanger_System_Enable_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heat_Exchanger_System_Enable_Status ; brick:hasLocation bldg:Lawn ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the cooling discharge air temperature deadband setpoint in the Jacuzzi.\nentitybldg:Jacuzzi \n brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Jacuzzi ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the embedded temperature sensor in the Waiting Area.\nentitybldg:Waiting_Area \n brick:Embedded_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Embedded_Temperature_Sensor ; brick:hasLocation bldg:Waiting_Area ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Chilled Water Temperature Sensor?\nentitybrick:Chilled_Water_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Chilled_Water_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is Cloudage an important atmospheric quantity?\nentitybrick:Cloudage",
    "target_text": "SELECT ?definition WHERE { brick:Cloudage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me about AEDs in building safety systems.\nentitybrick:AED",
    "target_text": "SELECT ?label WHERE { brick:AED rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC system feeds RM110?\nentitybrick:isFedBy",
    "target_text": "SELECT ?system WHERE { bldg:RM110 brick:isFedBy ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Sound Noise loudness Sensor  5.04 and its installation location.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Power Loss Alarm?\nentitybrick:Power_Loss_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Power_Loss_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the historical zone air temperature data for RM107B for the previous month.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Voltage Ratio Setpoint.\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Voltage_Ratio_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Stage Enable Command?\nentitybrick:Stage_Enable_Command",
    "target_text": "SELECT ?label ?definition WHERE { brick:Stage_Enable_Command rdfs:label ?label . brick:Stage_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present zone air control temperature setpoint for RM115?\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does TVOC  Sensor 5.02 cover?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity does Return Air Temperature Sensor measure?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Water Heater.\nentitybrick:Water_Heater",
    "target_text": "SELECT ?definition WHERE { brick:Water_Heater skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Occupied Supply Air Temperature Setpoint related to Occupied Discharge Air Temperature Setpoint?\nentitybrick:Occupied_Supply_Air_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Supply_Air_Temperature_Setpoint owl:equivalentClass brick:Occupied_Discharge_Air_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Water Temperature Setpoint.\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average Alcohol Vapor MQ3 Gas Sensor  level recorded by  Sensor 5.05 over the past 24 hours?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the motor speed sensor in the north west zone.\nentitybldg:north-west-zone \n brick:Motor_Speed_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Motor_Speed_Sensor ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Cloudage relate to sky visibility?\nentitybrick:Cloudage",
    "target_text": "SELECT ?definition WHERE { brick:Cloudage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is broader than Zone Air?\nentitybrick:Zone_Air",
    "target_text": "SELECT ?broader WHERE { brick:Zone_Air skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum  PM2.5 particulate matter Level Sensor in sensor 5.05 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the Ethyl Alcohol sensor installed in 5.05 and what is its classification?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 rdfs:label ?label . bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Unoccupied Return Air Temperature Setpoint include tag:Heat?\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is notwo5.37 located?\nentitybldg:notwo5.37",
    "target_text": "SELECT ?location WHERE { bldg:notwo5.37 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.63?\nentitybldg:mqfive5.63",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.63 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Low Freeze Protect Temperature Parameter?\nentitybrick:Low_Freeze_Protect_Temperature_Parameter",
    "target_text": "SELECT ?parameter WHERE { ?parameter a brick:Low_Freeze_Protect_Temperature_Parameter . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Hot Water Differential Pressure Load Shed Reset Status?\nentitybrick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status",
    "target_text": "SELECT ?parent WHERE { brick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Emergency Air Flow System?\nentitybrick:Emergency_Air_Flow_System",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Air_Flow_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Sensor 5.04 indicate any potential issues with air quality in the building?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.32 located?\nentitybldg:sound5.32",
    "target_text": "SELECT ?location WHERE { bldg:sound5.32 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest temperature reading from air temperature sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is sound5.06 located?\nentitybldg:sound5.06",
    "target_text": "SELECT ?location WHERE { bldg:sound5.06 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Min Water Level Alarm?\nentitybrick:Min_Water_Level_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Min_Water_Level_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Min Occupied Cooling Supply Air Flow Setpoint Limit include Min Occupied Cooling Discharge Air Flow Setpoint Limit?\nentitybrick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit owl:equivalentClass brick:Min_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is an Enclosed Office?\nentitybrick:Enclosed_Office",
    "target_text": "SELECT ?definition WHERE { brick:Enclosed_Office skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags with 'Temperature' in them for Mixed Air Temperature Sensor.\nentitybrick:Mixed_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . FILTER(CONTAINS(STR(?tag), \"Temperature\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a DESCRIBE summary for Leaving Water.\nentitybrick:Leaving_Water",
    "target_text": "DESCRIBE brick:Leaving_Water\nWHERE { brick:Leaving_Water ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you fetch all properties, tags, and classifications for a Condenser?\nentitybrick:Condenser",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pre filter status in the Zone B.\nentitybldg:Zone B \n brick:Pre_Filter_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pre_Filter_Status ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which category does the Intake Air Filter belong to?\nentitybrick:Intake_Air_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Intake_Air_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the external reference provided for the Fan Coil Unit.\nentitybrick:Fan_Coil_Unit",
    "target_text": "SELECT ?seeAlso WHERE { brick:Fan_Coil_Unit rdfs:seeAlso ?seeAlso . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow sensor in the Storage Room.\nentitybldg:Storage_Room \n brick:Exhaust_Air_Stack_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Sensor ; brick:hasLocation bldg:Storage_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of equipment is a Chilled Water Pump?\nentitybrick:Chilled_Water_Pump",
    "target_text": "SELECT ?superclass WHERE { brick:Chilled_Water_Pump rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Relay?\nentitybrick:Relay",
    "target_text": "SELECT ?label WHERE { brick:Relay rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Voltage Imbalance Sensor?\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Voltage_Imbalance_Sensor rdfs:label ?label . brick:Voltage_Imbalance_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Domestic Hot Water System Enable Command?\nentitybrick:Domestic_Hot_Water_System_Enable_Command",
    "target_text": "SELECT ?tag WHERE { brick:Domestic_Hot_Water_System_Enable_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Entering Condenser Water Temperature Setpoint?\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Chilled Water Discharge Temperature Sensor labeled in the ontology?\nentitybrick:Chilled_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Discharge_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for High Temperature Alarm.\nentitybrick:High_Temperature_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:High_Temperature_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM1 particulate matter Level Sensor 5.05 set up?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition of Temperature Sensor.\nentitybrick:Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent  PM1 particulate matter Level Sensor measurement from sensor 5.02, please.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes is Equipment a subclass of?\nentitybrick:Equipment",
    "target_text": "SELECT ?parent WHERE { brick:Equipment rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum cooling valve output readings for AHU 02 from this morning.\nentitybldg:bldg1.AHU.AHU02.Cooling_Valve_Output",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Cooling_Valve_Output ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Max Supply Air Static Pressure Setpoint Limit?\nentitybrick:Max_Supply_Air_Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Supply_Air_Static_Pressure_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Report the current zone air temperature reading for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What HVAC system includes damperVAVRM100?\nentitybrick:isPartOf",
    "target_text": "SELECT ?system WHERE { bldg:damperVAVRM100 brick:isPartOf ?system . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of the Trace Heat Sensor?\nentitybrick:Trace_Heat_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Trace_Heat_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is   TVOC  Sensor 5.04?\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:TVOC_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the medium temperature hot water return temperature sensor in the Craft Room.\nentitybldg:Craft_Room \n brick:Medium_Temperature_Hot_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Medium_Temperature_Hot_Water_Return_Temperature_Sensor ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label for the Exhaust Air Flow Proportional Band Parameter?\nentitybrick:Exhaust_Air_Flow_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Exhaust_Air_Flow_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Breaker Panel?\nentitybrick:Breaker_Panel",
    "target_text": "SELECT ?tag WHERE { brick:Breaker_Panel brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the name of the  Illuminance Sensor 5.05 and where is it located?\nentitybldg:Illuminance_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Illuminance_Sensor_5.05 rdfs:label ?label . bldg:Illuminance_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the warm cool adjust sensor in the Reading Room.\nentitybldg:Reading_Room \n brick:Warm_Cool_Adjust_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Warm_Cool_Adjust_Sensor ; brick:hasLocation bldg:Reading_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which types does the Outside Air CO Sensor belong to?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?type WHERE { brick:Outside_Air_CO_Sensor a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest NO2 measurement from  NO2 Sensor 5.01.\nentitybldg:NO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the minimum and maximum pump start/stop command values for the chiller from this morning.\nentitybldg:bldg1.CHW.Pump1_Start_Stop",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Pump1_Start_Stop ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with a Derivative Time Parameter?\nentitybrick:Derivative_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Derivative_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Rated Speed Setpoint.\nentitybrick:Rated_Speed_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Rated_Speed_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Min Supply Air Temperature Setpoint Limit?\nentitybrick:Min_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Min_Supply_Air_Temperature_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is CO  Sensor 5.03 found?\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:CO_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is unit PSI an applicable unit for Differential Static Pressure?\nentitybrick:Differential_Static_Pressure",
    "target_text": "ASK { brick:Differential_Static_Pressure qudt:applicableUnit unit:PSI . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.08 located?\nentitybldg:mqtwo5.08",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.08 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Heat Exchanger Leaving Water Temperature Sensor?\nentitybrick:Heat_Exchanger_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Heat_Exchanger_Leaving_Water_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the cooling command values for AHU 01 yesterday?\nentitybldg:bldg1.AHU.AHU01.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is sensor 5.05 due for a recalibration based on its Combustible Gas Smoke MQ2 Sensor  output?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor in room 5.03 and tell me its class.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classes does the Entering Water Temperature Sensor inherit from?\nentitybrick:Entering_Water_Temperature_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Water_Temperature_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Max Limit?\nentitybrick:Max_Limit",
    "target_text": "SELECT ?label WHERE { brick:Max_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Radiant Temperature described?\nentitybrick:Radiant_Temperature",
    "target_text": "SELECT ?label WHERE { brick:Radiant_Temperature rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of System?\nentitybrick:System",
    "target_text": "SELECT ?definition WHERE { brick:System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, what's the temperature reading from sensor 5.01 right now?\nentitybldg:Air_Temperature_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Room' a tag associated with Storage Room?\nentitybrick:Storage_Room",
    "target_text": "ASK WHERE { brick:Storage_Room brick:hasAssociatedTag tag:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the most recent data available from PM1 particulate matter Level Sensor 5.03?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Valve?\nentitybrick:Valve",
    "target_text": "SELECT ?label WHERE { brick:Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class is   CO2  Sensor 5.01 a member of?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the sensor data from 5.03 to forecast potential maintenance needs due to CO  deviations.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air flow setpoint in the Laboratory.\nentitybldg:Laboratory \n brick:Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Laboratory ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term Formaldehyde Level sensor trends from Sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trend is sensor 5.05 following in terms of Sound Noise loudness Sensor  for the past hour?\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the owl:equivalentClass for the Discharge Air Temperature Low Reset Setpoint.\nentitybrick:Discharge_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Discharge_Air_Temperature_Low_Reset_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Steam Baseboard Radiator.\nentitybrick:Steam_Baseboard_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Steam_Baseboard_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the tags for Min Supply Air Temperature Setpoint Limit?\nentitybrick:Min_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Supply_Air_Temperature_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the quantity associated with Air Temperature Sensor.\nentitybrick:Air_Temperature_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Air_Temperature_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of Radiant Ceiling Panel.\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "SELECT ?label WHERE { brick:Radiant_Ceiling_Panel rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether tag:Voltage is present for the Voltage Ratio Setpoint.\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "ASK { brick:Voltage_Ratio_Setpoint brick:hasAssociatedTag tag:Voltage . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Outside Air Humidity Setpoint.\nentitybrick:Outside_Air_Humidity_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Outside_Air_Humidity_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags help describe a Chilled Water Differential Pressure Integral Time Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas from Sensor 5.04 could be used to forecast future maintenance needs?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which  Air Quality sensor is deployed in room 5.04 and what is its kind?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.04 rdfs:label ?label . bldg:Air_Quality_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Enable Fixed Enthalpy Command?\nentitybrick:Enable_Fixed_Enthalpy_Command",
    "target_text": "SELECT ?tag WHERE { brick:Enable_Fixed_Enthalpy_Command brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated substance for the Natural Gas Flow Sensor?\nentitybrick:Natural_Gas_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Natural_Gas_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What category does an Absolute Humidity Sensor belong to?\nentitybrick:Absolute_Humidity_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Absolute_Humidity_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all information available for an Ablutions Room.\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Ablutions_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you identify the sensor type for PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Floor?\nentitybrick:Floor",
    "target_text": "SELECT ?tag WHERE { brick:Floor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Filter Differential Pressure Sensor?\nentitybrick:Filter_Differential_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Filter_Differential_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is  PM2.5 particulate matter Level Sensor 5.03 located in?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Thermal Power Meter?\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?label WHERE { brick:Thermal_Power_Meter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units associated with Static Pressure.\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Static_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the  PM10 particulate matter Level Sensor data for Sensor 5.05?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What value is indicated by the zone percent air flow sensor in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is airq5.50 located?\nentitybldg:airq5.50",
    "target_text": "SELECT ?location WHERE { bldg:airq5.50 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain the function of an Exhaust Air Dewpoint Sensor.\nentitybrick:Exhaust_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Leaving Water Differential Pressure Deadband Setpoint defined?\nentitybrick:Leaving_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current LPG Natural Gas Town MQ5 Gas Sensor  stats from sensor 5.05.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.02's  PM10 particulate matter Level Sensor measurements over the last quarter.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the hot water usage sensor in the Retail Store.\nentitybldg:Retail_Store \n brick:Hot_Water_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Hot_Water_Usage_Sensor ; brick:hasLocation bldg:Retail_Store ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the current NO2 values from Sensor 5.02 compare with historical averages?\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official label for a Chilled Water Differential Pressure Deadband Setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the set of tags for Heating Temperature Setpoint.\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Heating_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest  Illuminance Sensor reading from  Illuminance Sensor 5.01.\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass for the Return Air Filter.\nentitybrick:Return_Air_Filter",
    "target_text": "SELECT ?parent WHERE { brick:Return_Air_Filter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you display the current control value for the zone reheat valve in RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is   CO  Sensor 5.04?\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you compare the day versus night LPG Natural Gas Town MQ5 Gas Sensor  variations as captured by Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: In what situations is an Average Cooling Demand Sensor used instead of other cooling measurement sensors?\nentitybrick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Cooling_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Cooling Supply Air Flow Setpoint a subclass of?\nentitybrick:Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Cooling_Supply_Air_Flow_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Leaving Condenser Water Temperature Setpoint a subclass of Leaving Water Temperature Setpoint?\nentitybrick:Leaving_Condenser_Water_Temperature_Setpoint",
    "target_text": "ASK WHERE { brick:Leaving_Condenser_Water_Temperature_Setpoint rdfs:subClassOf brick:Leaving_Water_Temperature_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Air Flow Setpoint?\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the motor current sensor in the Conference Room.\nentitybldg:Conference_Room \n brick:Motor_Current_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Motor_Current_Sensor ; brick:hasLocation bldg:Conference_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Outside Air Temperature Low Reset Setpoint.\nentitybrick:Outside_Air_Temperature_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Temperature_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Damper a subclass of?\nentitybrick:Damper",
    "target_text": "SELECT ?parent WHERE { brick:Damper rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Oxygen,O2 sensor 5.02.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Heating Valve is a subclass of HVAC Equipment.\nentitybrick:Heating_Valve",
    "target_text": "ASK WHERE { brick:Heating_Valve rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the relationship between a Capacity Sensor and capacity measurement?\nentitybrick:Capacity_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Capacity_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air static pressure deadband setpoint in the Jacuzzi.\nentitybldg:Jacuzzi \n brick:Discharge_Air_Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Jacuzzi ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Water Tank?\nentitybrick:Water_Tank",
    "target_text": "SELECT ?label ?definition WHERE { brick:Water_Tank rdfs:label ?label . brick:Water_Tank skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you generate a report on the sensor trends for Air Humidity Sensor 5.05 over the last six months?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide all information related to an Ablutions Room?\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?property ?value WHERE { brick:Ablutions_Room ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details for the Peak Demand Sensor?\nentitybrick:Peak_Demand_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Peak_Demand_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Point related to Entity?\nentitybrick:Point",
    "target_text": "ASK WHERE { brick:Point rdfs:subClassOf brick:Entity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Peak Power.\nentitybrick:Peak_Power",
    "target_text": "SELECT ?label WHERE { brick:Peak_Power rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is voc5.01located?\nentitybldg:voc5.01",
    "target_text": "SELECT ?location WHERE { bldg:voc5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present reading of the zone supply air flow in RM112?\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What impact do external weather conditions have on the Oxygen,O2 levels recorded by Sensor 5.01?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the label of the Sound Noise loudness Sensor  5.03 and its location.\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?label ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 rdfs:label ?label . bldg:Sound_Noise_Sensor_MEMS_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter status in the East Side.\nentitybldg:East_Side \n brick:Filter_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Status ; brick:hasLocation bldg:East_Side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the High Static Pressure Cutout Setpoint Limit affect HVAC systems?\nentitybrick:High_Static_Pressure_Cutout_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:High_Static_Pressure_Cutout_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category forSound Noise loudness Sensor  5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current zone air temperature value detected in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is associated with Supply Air Static Pressure Sensor?\nentitybrick:Supply_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Static_Pressure_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the sensor type details for Illuminance Sensor 5.03.\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Illuminance_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What distinguishes an Average Cooling Demand Sensor from other HVAC sensors?\nentitybrick:Average_Cooling_Demand_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Cooling_Demand_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the TETRA Room refer to?\nentitybrick:TETRA_Room",
    "target_text": "SELECT ?definition WHERE { brick:TETRA_Room skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor trend for PM1 particulate matter Level Sensor 5.03 and its impact on indoor sustainability.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Electric Baseboard Radiator'.\nentitybrick:Electric_Baseboard_Radiator",
    "target_text": "SELECT ?definition WHERE { brick:Electric_Baseboard_Radiator skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Zone Air Humidity Setpoint.\nentitybrick:Zone_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone reheat valve command value for RM112.\nentitybldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM112.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of an Alarm Delay Parameter.\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?property ?value WHERE { brick:Alarm_Delay_Parameter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sensor details including its location for the  PM1 particulate matter Level Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pump status in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Pump_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pump_Status ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Damper Position Status a subclass of another type of status?\nentitybrick:Damper_Position_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Damper_Position_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the  PM1 particulate matter Level Sensor 5.01 and its installation location.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?location WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM1_Level_Sensor_Atmospheric_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the meaning of the Preheat Command.\nentitybrick:Preheat_Command",
    "target_text": "SELECT ?definition WHERE { brick:Preheat_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.55 located?\nentitybldg:hcho5.55",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.55 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.03.\nentitybldg:CO_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label does PM10 particulate matter Level Sensor 5.04 have?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the current value of the zone air control temperature setpoint in RM103.\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is notwo5.64 located?\nentitybldg:notwo5.64",
    "target_text": "SELECT ?location WHERE { bldg:notwo5.64 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Pre Filter Status a subclass of?\nentitybrick:Pre_Filter_Status",
    "target_text": "SELECT ?parent WHERE { brick:Pre_Filter_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor name for PM10 particulate matter Level Sensor 5.01.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Water Loss Alarm represent?\nentitybrick:Water_Loss_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Water_Loss_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Exhaust Air Humidity Sensor measure?\nentitybrick:Exhaust_Air_Humidity_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Humidity_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe Ammonia Concentration?\nentitybrick:Ammonia_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:Ammonia_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering water temperature deadband setpoint in the Bar.\nentitybldg:Bar \n brick:Entering_Water_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Water_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Bar ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the supported measurement units for atmospheric pressure?\nentitybrick:Atmospheric_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Atmospheric_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Dry Cooler function?\nentitybrick:Dry_Cooler",
    "target_text": "SELECT ?definition WHERE { brick:Dry_Cooler skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Steam Valve.\nentitybrick:Steam_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the aliasOf relationship for Unoccupied Discharge Air Flow Setpoint.\nentitybrick:Unoccupied_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Unoccupied_Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Visitor Lobby.\nentitybrick:Visitor_Lobby",
    "target_text": "SELECT ?definition WHERE { brick:Visitor_Lobby skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is sensor 5.03 measuring  PM2.5 particulate matter Level Sensor at the moment?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Thermal Power Meter?\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?label ?definition WHERE { brick:Thermal_Power_Meter rdfs:label ?label . brick:Thermal_Power_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the defining characteristics of an Average Exhaust Air Static Pressure Sensor?\nentitybrick:Average_Exhaust_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Average_Exhaust_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate any health alerts based on the latest  PM2.5 particulate matter Level Sensor data for 5.05.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give the current measurement of the zone air temperature sensor in RM100.\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling temperature deadband setpoint in the Conference Hall.\nentitybldg:Conference_Hall \n brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Conference_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification of sensor is Air Quality Level 5.03?\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Level_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Core Temperature Sensor important for temperature regulation?\nentitybrick:Core_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Core_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Overridden Off Status.\nentitybrick:Overridden_Off_Status",
    "target_text": "SELECT ?rule WHERE { brick:Overridden_Off_Status sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Condenser Water Flow Setpoint play in an HVAC system?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How's the overall air quality in our smart environment using only Sound Noise loudness Sensor  5.02?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Entering Condenser Water means.\nentitybrick:Entering_Condenser_Water",
    "target_text": "SELECT ?definition WHERE { brick:Entering_Condenser_Water skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze Sensor 5.03 data to detect any abnormal spikes that could impact occupant comfort.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which sensor class does Air Quality sensor 5.02 belong to?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Cool' a tag for Occupied Cooling Supply Air Flow Setpoint?\nentitybrick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Occupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Cool . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Leaving Domestic Hot Water Temperature Setpoint.\nentitybrick:Leaving_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you provide the rdfs:label referencing the Discharge Fan?\nentitybrick:Discharge_Fan",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating discharge air flow setpoint in the south west zone.\nentitybldg:south-west-zone \n brick:Occupied_Heating_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:south-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the QUDT reference for atmospheric pressure?\nentitybrick:Atmospheric_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Atmospheric_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Enclosed Office is a subclass of Office.\nentitybrick:Enclosed_Office",
    "target_text": "ASK WHERE { brick:Enclosed_Office rdfs:subClassOf brick:Office . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the on/off point for Pump 1 in the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.Pump1_Start_Stop . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Power Factor Sensor.\nentitybrick:Power_Factor_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Power_Factor_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what an Air Loop does?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?definition WHERE { brick:Air_Loop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the label and definition of the Wind Speed Sensor?\nentitybrick:Wind_Speed_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Wind_Speed_Sensor rdfs:label ?label . brick:Wind_Speed_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the static pressure deadband setpoint in the Locker Room.\nentitybldg:Locker_Room \n brick:Static_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Static_Pressure_Deadband_Setpoint ; brick:hasLocation bldg:Locker_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the equivalent class and alias for the Discharge Air Static Pressure Setpoint.\nentitybrick:Discharge_Air_Static_Pressure_Setpoint",
    "target_text": "SELECT ?eq ?alias WHERE { brick:Discharge_Air_Static_Pressure_Setpoint owl:equivalentClass ?eq . brick:Discharge_Air_Static_Pressure_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does Air Flow Sensor monitor?\nentitybrick:Air_Flow_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Air_Flow_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the up-to-date Oxygen,O2 level from sensor 5.04?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain what the Final Filter is used for?\nentitybrick:Final_Filter",
    "target_text": "SELECT ?definition WHERE { brick:Final_Filter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of the Fan Speed Command?\nentitybrick:Fan_Speed_Command",
    "target_text": "SELECT ?label WHERE { brick:Fan_Speed_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How well do Sensor 5.01's Alcohol Vapor MQ3 Gas Sensor  readings align with our smart building's sustainability KPIs?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How often do our devices deviate from their standard readings if you consider sensor 5.01 of Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Mixed Air Flow Sensor?\nentitybrick:Mixed_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Mixed_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Enable Differential Enthalpy Command?\nentitybrick:Enable_Differential_Enthalpy_Command",
    "target_text": "SELECT ?definition WHERE { brick:Enable_Differential_Enthalpy_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags are used for a Blind Group?\nentitybrick:Blind_Group",
    "target_text": "SELECT ?tag WHERE { brick:Blind_Group brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Supply Air Humidity Sensor is equivalent to Discharge Air Humidity Sensor.\nentitybrick:Supply_Air_Humidity_Sensor",
    "target_text": "ASK WHERE { brick:Supply_Air_Humidity_Sensor owl:equivalentClass brick:Discharge_Air_Humidity_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Air Quality?\nentitybrick:Air_Quality",
    "target_text": "SELECT ?label WHERE { brick:Air_Quality rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has airq5.37?\nentitybldg:airq5.37",
    "target_text": "SELECT ?room WHERE { bldg:airq5.37 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does a Cooling Tower play in an HVAC system?\nentitybrick:Cooling_Tower",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Tower skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the solar azimuth angle sensor in the Utility Room.\nentitybldg:Utility_Room \n brick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Solar_Azimuth_Angle_Sensor ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What was the outside air temperature trend for AHU 02 during the last shift?\nentitybldg:bldg1.AHU.AHU02.Outside_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Outside_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the full metadata set for a Chilled Water Differential Pressure Deadband Setpoint?\nentitybrick:Chilled_Water_Differential_Pressure_Deadband_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_CO2_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which HVAC areas contain RM107B Room?\nentitybrick:isPartOf",
    "target_text": "SELECT ?zone WHERE { bldg:RM107B_room brick:isPartOf ?zone . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list the classification tags linked to the Exercise Room?\nentitybrick:Exercise_Room",
    "target_text": "SELECT ?tag WHERE { brick:Exercise_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Access_Control_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Economizer Damper'.\nentitybrick:Economizer_Damper",
    "target_text": "SELECT ?definition WHERE { brick:Economizer_Damper skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me both the meaning and type of an Ablutions Room.\nentitybrick:Ablutions_Room",
    "target_text": "SELECT ?definition ?superclass WHERE { brick:Ablutions_Room skos:definition ?definition . brick:Ablutions_Room rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantities are related to Electric Current?\nentitybrick:Electric_Current",
    "target_text": "SELECT ?related WHERE { brick:Electric_Current skos:related ?related . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Unoccupied Cooling Supply Air Flow Setpoint include the tag 'Unoccupied'?\nentitybrick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag tag:Unoccupied . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of Oxygen,O2 Sensor 5.04 over the last month?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.04 is keeping it real with our smart building air quality standards?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is cotwo5.48 located?\nentitybldg:cotwo5.48",
    "target_text": "SELECT ?location WHERE { bldg:cotwo5.48 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the alternative name for AED?\nentitybrick:AED",
    "target_text": "SELECT ?alias WHERE { brick:AED brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the Combustible Gas Smoke MQ2 Sensor  5.05 and where is it set up?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?label ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 rdfs:label ?label . bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of CO2  Sensor 5.04 compare to our baseline standards?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Variable Air Volume Box With Reheat.\nentitybrick:Variable_Air_Volume_Box_With_Reheat",
    "target_text": "SELECT ?definition WHERE { brick:Variable_Air_Volume_Box_With_Reheat skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Open Close Status.\nentitybrick:Open_Close_Status",
    "target_text": "SELECT ?definition WHERE { brick:Open_Close_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is Unoccupied Air Temperature Setpoint a subclass of?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent class for Storage Room.\nentitybrick:Storage_Room",
    "target_text": "SELECT ?parent WHERE { brick:Storage_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you retrieve the sensor's label for PM1 particulate matter Level Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average deviation for the  Illuminance Sensor 5.03 for yesterday?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Preheat Hot Water System extends.\nentitybrick:Preheat_Hot_Water_System",
    "target_text": "SELECT ?parent WHERE { brick:Preheat_Hot_Water_System rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the substance for Air Flow Setpoint?\nentitybrick:Air_Flow_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Air_Flow_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Occupied Cooling Temperature Setpoint.\nentitybrick:Occupied_Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Occupied_Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency of PM2.5 particulate matter Level Sensor 5.04 based on recent readings.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags for Outside Air Temperature Sensor.\nentitybrick:Outside_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Workshop.\nentitybldg:Workshop \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heat exchanger system enable status in the Floor 6.\nentitybldg:Floor_6 \n brick:Heat_Exchanger_System_Enable_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heat_Exchanger_System_Enable_Status ; brick:hasLocation bldg:Floor_6 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the data from Sensor 5.05 indicate any potential issues with  quality in the building?\nentitybldg:NO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present measurement from the zone supply air flow sensor in RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Underfloor Air Temperature Sensor indicate?\nentitybrick:Underfloor_Air_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Underfloor_Air_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent category of an air flow sensor?\nentitybrick:Air_Flow_Sensor",
    "target_text": "SELECT ?category WHERE { brick:Air_Flow_Sensor rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the average level from PM1 particulate matter Level Sensor 5.05 for a specific date, for example 2025-02-15.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the High Air Flow Alarm a subclass of another alarm type?\nentitybrick:High_Air_Flow_Alarm",
    "target_text": "SELECT ?parent WHERE { brick:High_Air_Flow_Alarm rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent Oxygen,O2 measurement from sensor 5.04, please.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they mount  Air Quality Level 5.01?\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the heating discharge air temperature deadband setpoint in the Janitorial Room.\nentitybldg:Janitorial_Room \n brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Janitorial_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Equipment defined as an owl:Class?\nentitybrick:Equipment",
    "target_text": "ASK WHERE { brick:Equipment a owl:Class . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the  Air Quality sensor installed in 5.02 and what is its classification?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Sensor_5.02 rdfs:label ?label . bldg:Air_Quality_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does a direction status fall?\nentitybrick:Direction_Status",
    "target_text": "SELECT ?category WHERE { brick:Direction_Status rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the zone supply air flow sensor currently indicate in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find  CO2  Sensor 5.05?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:CO2_Level_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor's average deviation from expected  Air Quality Level levels over the past quarter?\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Wind Direction?\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?label WHERE { brick:Wind_Direction rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air control temperature setpoint for RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current value of the zone supply air temperature in RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the trend fromCombustible Gas Smoke MQ2 Sensor 5.02 over the past week.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the associated tags for the Medical Room.\nentitybrick:Medical_Room",
    "target_text": "SELECT ?tag WHERE { brick:Medical_Room brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many attributes belong to the Discharge Air Temperature Setpoint Limit.\nentitybrick:Discharge_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Air_Temperature_Setpoint_Limit ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the humidity sensor in the Zone C.\nentitybldg:Zone_C \n brick:Humidity_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Humidity_Sensor ; brick:hasLocation bldg:Zone_C ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any change in the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas data from sensor 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Electrical Equipment is a subclass of Equipment.\nentitybrick:Electrical_Equipment",
    "target_text": "ASK WHERE { brick:Electrical_Equipment rdfs:subClassOf brick:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the measured quantity for the Schedule Temperature Setpoint.\nentitybrick:Schedule_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Schedule_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current reading reported by the zone supply air flow sensor in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Supply_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the Hot Water Differential Pressure Integral Time Parameter?\nentitybrick:Hot_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Leaving Chilled Water Flow Setpoint call itself?\nentitybrick:Leaving_Chilled_Water_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Chilled_Water_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the class that Storage Room extends?\nentitybrick:Storage_Room",
    "target_text": "SELECT ?parent WHERE { brick:Storage_Room rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Deionized Water a type of Substance?\nentitybrick:Deionized_Water",
    "target_text": "ASK WHERE { brick:Deionized_Water a brick:Substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what the Pump is used for.\nentitybrick:Pump",
    "target_text": "SELECT ?definition WHERE { brick:Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve all associated tags for the Information Area?\nentitybrick:Information_Area",
    "target_text": "SELECT ?tag WHERE { brick:Information_Area brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of  Alcohol Vapor MQ3 Gas Sensor  5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?label WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the total of all loop chilled water return temperature readings for the chiller this morning?\nentitybldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.CHW.Loop_Chilled_Water_Return_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Outside Damper.\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Damper brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Entering Chilled Water Temperature Sensor has the tag 'Chilled'?\nentitybrick:Entering_Chilled_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Entering_Chilled_Water_Temperature_Sensor brick:hasAssociatedTag tag:Chilled . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the  PM10 particulate matter Level Sensor values from sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which type of sensor does  Air Temperature Sensor 5.03 represent?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Return Air Differential Pressure Setpoint?\nentitybrick:Return_Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Return_Air_Differential_Pressure_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Pressure Setpoint.\nentitybrick:Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Return Air Flow Sensor.\nentitybrick:Return_Air_Flow_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define Max Occupied Heating Supply Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the number of subcategories associated with Pressure.\nentitybrick:Pressure",
    "target_text": "SELECT (COUNT(?narrower) AS ?narrowerCount) WHERE { brick:Pressure skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the class that Photovoltaic Current Output Sensor extends?\nentitybrick:Photovoltaic_Current_Output_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Photovoltaic_Current_Output_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the  PM10 particulate matter Level Sensor in 5.01 and state its sensor type.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label ?type WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . bldg:PM10_Level_Sensor_Atmospheric_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to RM120.\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM120 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the cooling command values for AHU 02 between 9 AM and 11 AM today?\nentitybldg:bldg1.AHU.AHU02.CCV",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.CCV ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the sensor label for   CO  Sensor 5.02.\nentitybldg:CO_Level_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Supply Air Static Pressure Integral Time Parameter?\nentitybrick:Supply_Air_Static_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Supply_Air_Static_Pressure_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What makes a Building Air Static Pressure Sensor unique?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air velocity pressure sensor in the Meeting Room.\nentitybldg:Meeting_Room \n brick:Discharge_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:Meeting_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the High CO2 Alarm detect?\nentitybrick:High_CO2_Alarm",
    "target_text": "SELECT ?alarm WHERE { ?alarm a brick:High_CO2_Alarm . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of sensor is  Oxygen,O2 Sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the drive ready status in the Cafe.\nentitybldg:Cafe \n brick:Drive_Ready_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Drive_Ready_Status ; brick:hasLocation bldg:Cafe ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Return Air Humidity Setpoint.\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Humidity_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does FormaldehydeConcentration indicate?\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:Formaldehyde_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the rule-based conditions for a Condenser Water Flow Setpoint?\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Condenser_Water_Flow_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Velocity Pressure.\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?label WHERE { brick:Velocity_Pressure rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.03's  Illuminance Sensor output contribute to the overall building air quality index?\nentitybldg:Illuminance_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent  Illuminance Sensor measurement from sensor 5.04, please.\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the domestic hot water discharge temperature sensor in the Library.\nentitybldg:Library \n brick:Domestic_Hot_Water_Discharge_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Domestic_Hot_Water_Discharge_Temperature_Sensor ; brick:hasLocation bldg:Library ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Describe the meaning of Emergency Air Flow System Status.\nentitybrick:Emergency_Air_Flow_System_Status",
    "target_text": "SELECT ?definition WHERE { brick:Emergency_Air_Flow_System_Status skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Concession?\nentitybrick:Concession",
    "target_text": "SELECT ?superclass WHERE { brick:Concession rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the Mixed Air Filter.\nentitybrick:Mixed_Air_Filter",
    "target_text": "SELECT ?property ?value WHERE { brick:Mixed_Air_Filter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate sensor5.05's Ethyl Alcohol /C2H5CH  reading with external weather data?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is measured by Temperature High Reset Setpoint?\nentitybrick:Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_High_Reset_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if On Off Status has the tag 'On'?\nentitybrick:On_Off_Status",
    "target_text": "ASK WHERE { brick:On_Off_Status brick:hasAssociatedTag tag:On . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the classification and associated tags of a Bypass Water Flow Sensor?\nentitybrick:Bypass_Water_Flow_Sensor",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Bypass_Water_Flow_Sensor rdfs:subClassOf ?superclass . brick:Bypass_Water_Flow_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you retrieve the current zone air temperature reading for RM100?\nentitybldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM100.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Cooling Discharge Air Flow Setpoint.\nentitybrick:Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Discharge_Air_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Alcohol Vapor MQ3 Gas Sensor  readings from Sensor 5.01?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from  CO2  Sensor 5.03 to compute an overall CO2  index.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Vertical Space?\nentitybrick:Vertical_Space",
    "target_text": "SELECT ?tag WHERE { brick:Vertical_Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the historical trend for  PM10 particulate matter Level Sensor 5.02 from 01/01/2025 to 31/01/2025.\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for TVOC  from sensor 5.01.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What trends in  Air Quality sensor from Sensor 5.01 could be used to forecast future maintenance needs?\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the building is Combustible Gas Smoke MQ2 Sensor  5.05 placed?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the location of  Air Quality sensor 5.03?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Air_Quality_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the uptime and reliability of Sensor 5.04 based on its  PM1 particulate matter Level Sensor data logs?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is oxy5.36 located?\nentitybldg:oxy5.36",
    "target_text": "SELECT ?location WHERE { bldg:oxy5.36 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show all sh:rule properties of the Rain Level Sensor.\nentitybrick:Rain_Level_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Rain_Level_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the present configuration of the zone air damper command in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Temperature Deadband Setpoint control?\nentitybrick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Temperature_Deadband_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Occupancy Command a subclass of?\nentitybrick:Occupancy_Command",
    "target_text": "SELECT ?parent WHERE { brick:Occupancy_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all properties and values for Gas.\nentitybrick:Gas",
    "target_text": "SELECT ?property ?value WHERE { brick:Gas ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has notwo5.59?\nentitybldg:notwo5.59",
    "target_text": "SELECT ?room WHERE { bldg:notwo5.59 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the available measurements of Year Built?\nentitybrick:yearBuilt",
    "target_text": "SELECT ?value WHERE { ?entity brick:yearBuilt ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the pressure status in the north east zone.\nentitybldg:north-east-zone \n brick:Pressure_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Pressure_Status ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags linked to Supply Air Flow High Reset Setpoint.\nentitybrick:Supply_Air_Flow_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Supply_Air_Flow_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Damper Position Status.\nentitybrick:Damper_Position_Status",
    "target_text": "SELECT ?tag WHERE { brick:Damper_Position_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the schedule temperature setpoint in the Patio.\nentitybldg:Patio \n brick:Schedule_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Schedule_Temperature_Setpoint ; brick:hasLocation bldg:Patio ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Solar Azimuth Angle Sensor measure?\nentitybrick:Solar_Azimuth_Angle_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Solar_Azimuth_Angle_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.01  PM10 particulate matter Level Sensor level and is it within expected ranges?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average  Air Quality sensor measured by Sensor 5.03 during peak occupancy hours?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the deprecation mitigation message for Supply Water Temperature Sensor?\nentitybrick:Supply_Water_Temperature_Sensor",
    "target_text": "SELECT ?message WHERE { brick:Supply_Water_Temperature_Sensor brick:deprecationMitigationMessage ?message . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Common Space?\nentitybrick:Common_Space",
    "target_text": "SELECT ?parent WHERE { brick:Common_Space rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of a Cooling Demand Setpoint?\nentitybrick:Cooling_Demand_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Cooling_Demand_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for an Atrium?\nentitybrick:Atrium",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Atrium rdfs:subClassOf ?superclass . brick:Atrium brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does Sensor 5.01's Formaldehyde Level sensor output contribute to the overall building air quality index?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the velocity pressure setpoint in the Supply Room.\nentitybldg:Supply_Room \n brick:Velocity_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Velocity_Pressure_Setpoint ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return condenser water temperature sensor in the Terrace.\nentitybldg:Terrace \n brick:Return_Condenser_Water_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Condenser_Water_Temperature_Sensor ; brick:hasLocation bldg:Terrace ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the standard QUDT reference for static pressure?\nentitybrick:Static_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Static_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the designated label for the Outside Air Wet Bulb Temperature Sensor?\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Max Cooling Supply Air Flow Setpoint Limit has the tag 'Cool'?\nentitybrick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "ASK WHERE { brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag tag:Cool . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for RVAV?\nentitybrick:RVAV",
    "target_text": "SELECT ?equiv WHERE { brick:RVAV owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Max Occupied Cooling Supply Air Flow Setpoint Limit?\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?definition WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Emergency Power Off System Activated By High Temperature Status categorized in the ontology?\nentitybrick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status",
    "target_text": "SELECT ?superclass WHERE { brick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is isLocationOf defined as an asymmetric property?\nentitybrick:isLocationOf",
    "target_text": "ASK WHERE { brick:isLocationOf a owl:AsymmetricProperty . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Min Supply Air Temperature Setpoint Limit?\nentitybrick:Min_Supply_Air_Temperature_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Supply_Air_Temperature_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Underfloor Air Plenum?\nentitybrick:Underfloor_Air_Plenum",
    "target_text": "SELECT ?label WHERE { brick:Underfloor_Air_Plenum rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqtwo5.10?\nentitybldg:mqtwo5.10",
    "target_text": "SELECT ?room WHERE { bldg:mqtwo5.10 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Voltage Ratio Setpoint?\nentitybrick:Voltage_Ratio_Setpoint",
    "target_text": "SELECT ?label ?definition WHERE { brick:Voltage_Ratio_Setpoint rdfs:label ?label . brick:Voltage_Ratio_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Outside Air Temperature Sensor.\nentitybrick:Outside_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What conditions must a Bus Riser follow?\nentitybrick:Bus_Riser",
    "target_text": "SELECT ?rule WHERE { brick:Bus_Riser sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone supply air temperature sensor in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags associated with Heating Valve.\nentitybrick:Heating_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Heating_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the associated tags for Water Pump.\nentitybrick:Water_Pump",
    "target_text": "SELECT ?tag WHERE { brick:Water_Pump brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the description of the Field of Play area?\nentitybrick:Field_Of_Play",
    "target_text": "SELECT ?definition WHERE { brick:Field_Of_Play skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a breakdown of Sensor 5.05's CO2  data by hour, day, and week.\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tell me the label assigned to PM10 particulate matter Level Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings from Sensor 5.05 for sustainability reporting.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the remotely on off status in the Cinema.\nentitybldg:Cinema \n brick:Remotely_On_Off_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Remotely_On_Off_Status ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Building Air Static Pressure Sensor function differently from other pressure sensors?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the QUDT reference associated with Velocity Pressure?\nentitybrick:Velocity_Pressure",
    "target_text": "SELECT ?reference WHERE { brick:Velocity_Pressure brick:hasQUDTReference ?reference . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Exhaust Air Velocity Pressure Sensor?\nentitybrick:Exhaust_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Air_Velocity_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be made if Sensor 5.05's data deviates from our smart building standards?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does a Change Filter Alarm contribute to HVAC maintenance?\nentitybrick:Change_Filter_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Change_Filter_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the installation details for  TVOC  Sensor 5.04.\nentitybldg:TVOC_Level_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any correlations between Sensor 5.05's Ethyl Alcohol /C2H5CH levels and building occupancy patterns.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for the Chilled Water Return Temperature Sensor.\nentitybrick:Chilled_Water_Return_Temperature_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Chilled_Water_Return_Temperature_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which measured parameter is managed by the Entering Hot Water Temperature Setpoint?\nentitybrick:Entering_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Entering_Hot_Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time CO2  data from sensor 5.03.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the function of the Dewpoint Sensor.\nentitybrick:Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current CO2  reading from  CO2  Sensor 5.01?\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Velocity' one of the tags for Velocity Pressure Sensor?\nentitybrick:Velocity_Pressure_Sensor",
    "target_text": "ASK WHERE { brick:Velocity_Pressure_Sensor brick:hasAssociatedTag tag:Velocity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the real-time Sound Noise loudness Sensor  level from sensor 5.03?\nentitybldg:Sound_Noise_Sensor_MEMS_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied heating supply air flow setpoint in the east side.\nentitybldg:east-side \n brick:Occupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Heating_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:east-side ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  Illuminance Sensor 5.02.\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which location is  TVOC  Sensor 5.03 associated with?\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current temperature stats from sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Motor Speed Sensor inherit?\nentitybrick:Motor_Speed_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Motor_Speed_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time Alcohol Vapor MQ3 Gas Sensor  data from sensor 5.04.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  Oxygen,O2 Sensor 5.04.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current zone air temperature measurement for RM107B?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Steam Usage Sensor.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Usage_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Condenser Water Pump necessary in cooling systems?\nentitybrick:Condenser_Water_Pump",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Pump skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the label of the timestamp property.\nentitybrick:timestamp",
    "target_text": "SELECT ?label WHERE { brick:timestamp rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Correlate the NO2 readings of  NO2 Sensor 5.04 with indoor  quality metrics.\nentitybldg:NO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Steam Usage Sensor extends.\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Steam_Usage_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is temp5.70 located?\nentitybldg:temp5.70",
    "target_text": "SELECT ?location WHERE { bldg:temp5.70 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.04 for the past week and show me a summary.\nentitybldg:Sound_Noise_Sensor_MEMS_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Sound_Noise_Sensor_MEMS_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Based on Sensor 5.02's output, are there any deviations that suggest a need for system recalibration?\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Luminance Sensor?\nentitybrick:Luminance_Sensor",
    "target_text": "SELECT ?sensor WHERE { ?sensor a brick:Luminance_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Outside Air Temperature High Reset Setpoint.\nentitybrick:Outside_Air_Temperature_High_Reset_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Outside_Air_Temperature_High_Reset_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Dual Duct Air Handling Unit.\nentitybrick:Dual_Duct_Air_Handling_Unit",
    "target_text": "SELECT ?label WHERE { brick:Dual_Duct_Air_Handling_Unit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What reading does the sensor give for the zone air temperature in RM103?\nentitybldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM103.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What kind of sensor is    Ethyl Alcohol /C2H5CH Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the definition source for FormaldehydeConcentration.\nentitybrick:Formaldehyde_Concentration",
    "target_text": "SELECT ?source WHERE { brick:Formaldehyde_Concentration rdfs:isDefinedBy ?source . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is PM1 particulate matter Level Sensor 5.03?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does an air flow demand setpoint specifically regulate air?\nentitybrick:Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?substance WHERE { brick:Air_Flow_Demand_Setpoint brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Cooling Temperature Setpoint call itself?\nentitybrick:Cooling_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does the Max Heating Discharge Air Flow Setpoint Limit have an owl:equivalentClass in BrickSchema?\nentitybrick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?equiv WHERE { brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the CO  data from Sensor 5.01 with HVAC anomalies?\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where did they stick  TVOC  Sensor 5.01 in the building?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:TVOC_Level_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the parent class of Heating Temperature Setpoint?\nentitybrick:Heating_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Heating_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Min Chilled Water Differential Pressure Setpoint Limit.\nentitybrick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Heating Coil.\nentitybrick:Heating_Coil",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you point out the location for Air Humidity Sensor 5.02?\nentitybldg:Zone_Air_Humidity_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for an Alarm Delay Parameter?\nentitybrick:Alarm_Delay_Parameter",
    "target_text": "SELECT ?rule WHERE { brick:Alarm_Delay_Parameter sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the equivalent class for Supply Air Plenum?\nentitybrick:Supply_Air_Plenum",
    "target_text": "SELECT ?equiv WHERE { brick:Supply_Air_Plenum owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the Oxygen,O2 sensor 5.02 along with its location in the building.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for PM1Concentration.\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?definition WHERE { brick:PM1_Concentration skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the sh:property value for Building Meter?\nentitybrick:Building_Meter",
    "target_text": "SELECT ?property WHERE { brick:Building_Meter sh:property ?property . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of  CO  Sensor 5.05?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:CO_Level_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any HVAC anomalies flagged recently in  PM10 particulate matter Level Sensor 5.02?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the drive ready status in the Boutique.\nentitybldg:Boutique \n brick:Drive_Ready_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Drive_Ready_Status ; brick:hasLocation bldg:Boutique ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which main group does absolute humidity fall under?\nentitybrick:Absolute_Humidity",
    "target_text": "SELECT ?category WHERE { brick:Absolute_Humidity skos:broader ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Cooling Coil.\nentitybrick:Cooling_Coil",
    "target_text": "SELECT ?definition WHERE { brick:Cooling_Coil skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify any significant anomalies or outliers in Sensor 5.04's Temperature measurements over the last quarter.\nentitybldg:Air_Temperature_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Disable Hot Water System Outside Air Temperature Setpoint do?\nentitybrick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain the meaning of Wing?\nentitybrick:Wing",
    "target_text": "SELECT ?definition WHERE { brick:Wing skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with  Air Temperature Sensor 5.05?\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Air_Temperature_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What label and definition are assigned to the Touchpanel?\nentitybrick:Touchpanel",
    "target_text": "SELECT ?label ?definition WHERE { brick:Touchpanel rdfs:label ?label . brick:Touchpanel skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the LPG Natural Gas Town MQ5 Gas Sensor  sensor 5.02 and show its sensor name.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which zone is Oxygen,O2 Sensor 5.02 located in?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where can I find Combustible Gas Smoke MQ2 Sensor  5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What command is being used for heating in RM120?\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label, definition, and tags for the Water Tank?\nentitybrick:Water_Tank",
    "target_text": "SELECT ?label ?definition ?tag WHERE { brick:Water_Tank rdfs:label ?label . brick:Water_Tank skos:definition ?definition . OPTIONAL { brick:Water_Tank brick:hasAssociatedTag ?tag . } }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which area does Alcohol Vapor MQ3 Gas Sensor  5.02 cover?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I'd like to see how many predicates exist for the Gas Meter.\nentitybrick:Gas_Meter",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Gas_Meter ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all tags related to access control equipment?\nentitybrick:Access_Control_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Access_Control_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the entering chilled water flow sensor in the Craft Room.\nentitybldg:Craft_Room \n brick:Entering_Chilled_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Entering_Chilled_Water_Flow_Sensor ; brick:hasLocation bldg:Craft_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which general category does Potable Water fall under?\nentitybrick:Potable_Water",
    "target_text": "SELECT ?broader WHERE { brick:Potable_Water skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What were the zone heating mode command values for RM107A yesterday?\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of Air Quality sensor 5.05, please.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?label WHERE { bldg:Air_Quality_Sensor_5.05 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the label and type of the CO  sensor located in room 5.04.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:CO_Level_Sensor_5.04 rdfs:label ?label . bldg:CO_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Valve Position Sensor?\nentitybrick:Valve_Position_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Valve_Position_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the humidity sensor installed in 5.03 and what is its classification?\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?label ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Confirm whether tag:Heat is present for the Unoccupied Return Air Temperature Setpoint.\nentitybrick:Unoccupied_Return_Air_Temperature_Setpoint",
    "target_text": "ASK { brick:Unoccupied_Return_Air_Temperature_Setpoint brick:hasAssociatedTag tag:Heat . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Bypass Air Flow Sensor.\nentitybrick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Bypass_Air_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Chilled Water Differential Pressure Integral Time Parameter categorized using tags?\nentitybrick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling supply air flow setpoint in the central lobby.\nentitybldg:central-lobby \n brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:central-lobby ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the tags for the Velocity Pressure Setpoint.\nentitybrick:Velocity_Pressure_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Velocity_Pressure_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Perform an anomaly detection analysis on the  Air Quality Level data from Sensor 5.03.\nentitybldg:Air_Quality_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge condenser water flow sensor in the Zone B.\nentitybldg:Zone B \n brick:Discharge_Condenser_Water_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Condenser_Water_Flow_Sensor ; brick:hasLocation bldg:Zone B ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the tags linked to the Coil.\nentitybrick:Coil",
    "target_text": "SELECT ?tag WHERE { brick:Coil brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Name the  Air Quality Level in 5.05 and state its sensor type.\nentitybldg:Air_Quality_Level_Sensor_5.05",
    "target_text": "SELECT ?label ?type WHERE { bldg:Air_Quality_Level_Sensor_5.05 rdfs:label ?label . bldg:Air_Quality_Level_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas trends from Sensor 5.05?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the average TVOC  measured by Sensor 5.02 during peak occupancy hours?\nentitybldg:TVOC_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current command details for the zone air damper in RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags does the Temporary Occupancy Status have?\nentitybrick:Temporary_Occupancy_Status",
    "target_text": "SELECT ?tag WHERE { brick:Temporary_Occupancy_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the quantity for Water Temperature Setpoint.\nentitybrick:Water_Temperature_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Water_Temperature_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Static Pressure Proportional Band Parameter.\nentitybrick:Static_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Static_Pressure_Proportional_Band_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor category of Air Quality sensor 5.01.\nentitybldg:Air_Quality_Sensor_5.01",
    "target_text": "SELECT ?type WHERE { bldg:Air_Quality_Sensor_5.01 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqfive5.36 located?\nentitybldg:mqfive5.36",
    "target_text": "SELECT ?location WHERE { bldg:mqfive5.36 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the sensor type for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.05.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the CO2  measurements from  CO2  Sensor 5.01 over the past 24 hours.\nentitybldg:CO2_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the HVAC System?\nentitybrick:HVAC_System",
    "target_text": "SELECT ?label WHERE { brick:HVAC_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are connected to Video Surveillance Equipment?\nentitybrick:Video_Surveillance_Equipment",
    "target_text": "SELECT ?tag WHERE { brick:Video_Surveillance_Equipment brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  PM10 particulate matter Level Sensor 5.03 chillin' in the building?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label for Building?\nentitybrick:Building",
    "target_text": "SELECT ?label WHERE { brick:Building rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Standby Fan?\nentitybrick:Standby_Fan",
    "target_text": "SELECT ?label WHERE { brick:Standby_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Refrigerant Level Sensor?\nentitybrick:Refrigerant_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Refrigerant_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the recalibration frequency ofFormaldehyde Level sensor 5.04 based on recent readings.\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Setpoint' one of the tags for Supply Air Temperature Cooling Setpoint?\nentitybrick:Supply_Air_Temperature_Cooling_Setpoint",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Cooling_Setpoint brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's Oxygen,O2 Sensor 5.04 set up at?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the emergency power off system status in the Music Room.\nentitybldg:Music_Room \n brick:Emergency_Power_Off_System_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Emergency_Power_Off_System_Status ; brick:hasLocation bldg:Music_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the rdfs:label of a Current Ratio Setpoint?\nentitybrick:Current_Ratio_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Current_Ratio_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor5.03's Ethyl Alcohol /C2H5CH  readings?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which descriptive text does BrickSchema provide for HX?\nentitybrick:HX",
    "target_text": "SELECT ?definition WHERE { brick:HX skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is c2h5ch5.19 located?\nentitybldg:c2h5ch5.19",
    "target_text": "SELECT ?location WHERE { bldg:c2h5ch5.19 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Generate a health alert if  CO  Sensor 5.01 shows abnormal readings today.\nentitybldg:CO_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Air' is a tag for Supply Air Temperature Step Parameter?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Air . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of Discharge Air Temperature Sensor?\nentitybrick:Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Discharge_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Ice Tank Leaving Water Temperature Sensor play in HVAC systems?\nentitybrick:Ice_Tank_Leaving_Water_Temperature_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ice_Tank_Leaving_Water_Temperature_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Automated External Defibrillator.\nentitybrick:Automated_External_Defibrillator",
    "target_text": "SELECT ?label WHERE { brick:Automated_External_Defibrillator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the owl:equivalentClass for MAU?\nentitybrick:MAU",
    "target_text": "SELECT ?equiv WHERE { brick:MAU owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is the Outside Damper a subclass of?\nentitybrick:Outside_Damper",
    "target_text": "SELECT ?parent WHERE { brick:Outside_Damper rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How consistent are the humidity measurements from Sensor 5.01 day-to-day?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Concession a subclass of another type of food service area?\nentitybrick:Concession",
    "target_text": "SELECT ?superclass WHERE { brick:Concession rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable name of a DC Bus Voltage Sensor?\nentitybrick:DC_Bus_Voltage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:DC_Bus_Voltage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the immediate superclass of the differential pressure load shed setpoint for medium temperature hot water.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me all tags linked to a Differential Speed Sensor.\nentitybrick:Differential_Speed_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Differential_Speed_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the Overload Alarm.\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:Overload_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List all tags assigned to the Last Fault Code Status.\nentitybrick:Last_Fault_Code_Status",
    "target_text": "SELECT ?tag WHERE { brick:Last_Fault_Code_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Supply Air Flow Low Reset Setpoint?\nentitybrick:Supply_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Flow_Low_Reset_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum NO2 in sensor 5.03 for last week, from 25/01/2025 to 30/02/2025?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the leaving hot water temperature setpoint in the Exhibition Hall.\nentitybldg:Exhibition_Hall \n brick:Leaving_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Leaving_Hot_Water_Temperature_Setpoint ; brick:hasLocation bldg:Exhibition_Hall ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which classes does the Unoccupied Room Air Temperature Setpoint inherit?\nentitybrick:Unoccupied_Room_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Unoccupied_Room_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Safety Equipment include Equipment?\nentitybrick:Safety_Equipment",
    "target_text": "ASK WHERE { brick:Safety_Equipment rdfs:subClassOf brick:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term Oxygen,O2 trends from Sensor 5.05?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Steam Distribution.\nentitybrick:Steam_Distribution",
    "target_text": "SELECT ?tag WHERE { brick:Steam_Distribution brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the superclass for Position Sensor.\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Position_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you explain Tilt?\nentitybrick:tilt",
    "target_text": "SELECT ?definition WHERE { brick:tilt skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify whether CO2 Sensor includes a quantity.\nentitybrick:CO2_Sensor",
    "target_text": "ASK { brick:CO2_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Alcohol Vapor MQ3 Gas Sensor  is deployed in room 5.04 and what is its kind?\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04",
    "target_text": "SELECT ?label ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 rdfs:label ?label . bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the latest data from the zone supply air temperature sensor in RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is Air Humidity Sensor 5.01 installed?\nentitybldg:Zone_Air_Humidity_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What classification does the Entering Medium Temperature Hot Water Temperature Load Shed Setpoint belong to?\nentitybrick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint",
    "target_text": "SELECT ?superclass WHERE { brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what ratedCurrentOutput means.\nentitybrick:ratedCurrentOutput",
    "target_text": "SELECT ?definition WHERE { brick:ratedCurrentOutput skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the himidity sensor data for 5.03 for the past week and show me a summary.\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for   Ethyl Alcohol /C2H5CH Sensor 5.05.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the equivalent class of the Breakroom.\nentitybrick:Breakroom",
    "target_text": "SELECT ?eq WHERE { brick:Breakroom owl:equivalentClass ?eq . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the details of Enable Command?\nentitybrick:Enable_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:Enable_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the core functions of an AHU?\nentitybrick:AHU",
    "target_text": "SELECT ?function WHERE { brick:AHU skos:definition ?function . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the label for Supply Air Static Pressure Integral Time Parameter.\nentitybrick:Supply_Air_Static_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Supply_Air_Static_Pressure_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if 'Equipment' is a tag for Radiant Ceiling Panel?\nentitybrick:Radiant_Ceiling_Panel",
    "target_text": "ASK WHERE { brick:Radiant_Ceiling_Panel brick:hasAssociatedTag tag:Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Air Alarm?\nentitybrick:Air_Alarm",
    "target_text": "SELECT ?label WHERE { brick:Air_Alarm rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which command does damperVAVRM110 operate?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:damperVAVRM110 brick:hasPoint ?point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the label for the Cooling Supply Air Temperature Deadband Setpoint?\nentitybrick:Cooling_Supply_Air_Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Lighting related to Lighting Equipment?\nentitybrick:Lighting",
    "target_text": "ASK WHERE { brick:Lighting rdfs:subClassOf brick:Lighting_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the bypass air flow sensor in the South.\nentitybldg:South \n brick:Bypass_Air_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Bypass_Air_Flow_Sensor ; brick:hasLocation bldg:South ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Ozone_Level_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the class that the Water Tank extends.\nentitybrick:Water_Tank",
    "target_text": "SELECT ?parent WHERE { brick:Water_Tank rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling zone air temperature setpoint in the Atrium.\nentitybldg:Atrium \n brick:Occupied_Cooling_Zone_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Zone_Air_Temperature_Setpoint ; brick:hasLocation bldg:Atrium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How would you describe return air?\nentitybrick:Return_Air",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for Unoccupied Heating Supply Air Flow Setpoint.\nentitybrick:Unoccupied_Heating_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Max Occupied Cooling Supply Air Flow Setpoint Limit.\nentitybrick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the fan status in the Roof.\nentitybldg:Roof \n brick:Fan_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Fan_Status ; brick:hasLocation bldg:Roof ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the Oxygen,O2 sensor 5.02 and its installation location.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?location WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 rdfs:label ?label . bldg:Oxygen_O2_Percentage_Gas_Sensor_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity is measured by the Return Air Dewpoint Sensor?\nentitybrick:Return_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Return_Air_Dewpoint_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.04's Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas readings?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which attributes are tagged for the High Head Pressure Alarm?\nentitybrick:High_Head_Pressure_Alarm",
    "target_text": "SELECT ?tag WHERE { brick:High_Head_Pressure_Alarm brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Any updates on the Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas measurements from sensor 5.01?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the substance for the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the descriptive text BrickSchema provides for the Exhaust Air Stack Flow Setpoint.\nentitybrick:Exhaust_Air_Stack_Flow_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Stack_Flow_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you tally the property count for the Enthalpy Sensor?\nentitybrick:Enthalpy_Sensor",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Enthalpy_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me, where is NO2 Sensor 5.03 found?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:NO2_Level_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of  Oxygen,O2 Sensor 5.03?\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.03",
    "target_text": "SELECT ?label WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.03 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has mqfive5.31?\nentitybldg:mqfive5.31",
    "target_text": "SELECT ?room WHERE { bldg:mqfive5.31 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What broader categories does Level belong to?\nentitybrick:Level",
    "target_text": "SELECT ?broader WHERE { brick:Level skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has hcho5.47?\nentitybldg:hcho5.47",
    "target_text": "SELECT ?room WHERE { bldg:hcho5.47 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the sensor output for NO2 at 5.03?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What type of boiler is a Condensing Natural Gas Boiler?\nentitybrick:Condensing_Natural_Gas_Boiler",
    "target_text": "SELECT ?superclass WHERE { brick:Condensing_Natural_Gas_Boiler rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label of the Outside Air Wet Bulb Temperature Sensor.\nentitybrick:Outside_Air_Wet_Bulb_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Outside_Air_Wet_Bulb_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which category does a damper position command fall?\nentitybrick:Damper_Position_Command",
    "target_text": "SELECT ?category WHERE { brick:Damper_Position_Command rdfs:subClassOf ?category . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on  Air Quality sensor 5.05's performance compared to industry benchmarks.\nentitybldg:Air_Quality_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find medium temperature hot water load shed differential pressure setpoints.\nentitybrick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?setpoint WHERE { ?setpoint a brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Discharge Hot Water Temperature Setpoint.\nentitybrick:Discharge_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Discharge_Hot_Water_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is  Illuminance Sensor 5.01 chillin' in the building?\nentitybldg:Illuminance_Sensor_5.01",
    "target_text": "SELECT ?location WHERE { bldg:Illuminance_Sensor_5.01 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is the Hot Water Differential Pressure Integral Time Parameter important?\nentitybrick:Hot_Water_Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Integral_Time_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which substance does CO2 Sensor measure?\nentitybrick:CO2_Sensor",
    "target_text": "SELECT ?substance WHERE { brick:CO2_Sensor brick:hasSubstance ?substance . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you correlate the CO2  data from Sensor 5.05 with HVAC anomalies?\nentitybldg:CO2_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Why is a Chilled Water Differential Pressure Load Shed Setpoint necessary?\nentitybrick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas is deployed in room 5.02 and what is its kind?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?label ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 rdfs:label ?label . bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there an economizer measurement associated with the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.ECONOMIZER . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Hot Water Differential Pressure Proportional Band Parameter play in HVAC?\nentitybrick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the alias for Cooling Discharge Air Flow Setpoint.\nentitybrick:Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?alias WHERE { brick:Cooling_Discharge_Air_Flow_Setpoint brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Exhaust Air Dewpoint Sensor'.\nentitybrick:Exhaust_Air_Dewpoint_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Dewpoint_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the supply air temperature records for AHU 02 over the past week.\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'PID' a tag for Supply Air Integral Gain Parameter?\nentitybrick:Supply_Air_Integral_Gain_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Integral_Gain_Parameter brick:hasAssociatedTag tag:PID . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Oxygen,O2 measurements from  Oxygen,O2 Sensor 5.04 over the past 24 hours.\nentitybldg:Oxygen_O2_Percentage_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Oxygen_O2_Percentage_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the  Ethyl Alcohol /C2H5CH sensor 5.01 readings from yesterday.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Preheat Demand Setpoint inherit?\nentitybrick:Preheat_Demand_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Preheat_Demand_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.03 NO2 level and is it within expected ranges?\nentitybldg:NO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display every available detail for ElectricEnergy including its name, definition, applicable units, dimensions, and classifications.\nentitybrick:Electric_Energy",
    "target_text": "SELECT ?label ?definition (GROUP_CONCAT(DISTINCT ?unit; separator=\", \") AS ?units) ?dimension (GROUP_CONCAT(DISTINCT ?broader; separator=\", \") AS ?broader) (GROUP_CONCAT(DISTINCT ?narrower; separator=\", \") AS ?narrower) WHERE { brick:Electric_Energy rdfs:label ?label . brick:Electric_Energy skos:definition ?definition . brick:Electric_Energy qudt:applicableUnit ?unit . brick:Electric_Energy qudt:hasDimensionVector ?dimension . brick:Electric_Energy skos:broader ?broader . OPTIONAL { brick:Electric_Energy skos:narrower ?narrower . } } GROUP BY ?label ?definition ?dimension"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which parts does floor1 contain?\nentitybrick:hasPart",
    "target_text": "SELECT ?part WHERE { bldg:floor1 brick:hasPart ?part . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the zone percent air flow data from RM110.\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with the Passive Chilled Beam?\nentitybrick:Passive_Chilled_Beam",
    "target_text": "SELECT ?tag WHERE { brick:Passive_Chilled_Beam brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Differential Pressure Integral Time Parameter call itself?\nentitybrick:Differential_Pressure_Integral_Time_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Differential_Pressure_Integral_Time_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for Discharge Water Flow Sensor.\nentitybrick:Discharge_Waterflow_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Waterflow_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the label for the Ozone Level Sensor.\nentitybrick:Ozone_Level_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Ozone_Level_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which room has oxy5.50?\nentitybldg:oxy5.50",
    "target_text": "SELECT ?room WHERE { bldg:oxy5.50 brick:isPointOf ?room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Radiator?\nentitybrick:Radiator",
    "target_text": "SELECT ?label WHERE { brick:Radiator rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show complete details and equivalent classes for the Discharge Air Flow Low Reset Setpoint.\nentitybrick:Discharge_Air_Flow_Low_Reset_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Discharge_Air_Flow_Low_Reset_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for NO2 Sensor 5.02 and its reliability trends.\nentitybldg:NO2_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:NO2_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor 5.04 regarding Alcohol Vapor MQ3 Gas Sensor ?\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of supply air pressure occurrences for AHU 02 for today?\nentitybldg:bldg1.AHU.AHU02.Supply_Air_Pressure",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU02.Supply_Air_Pressure ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the chilled water supply flow sensor in the Cinema.\nentitybldg:Cinema \n brick:Chilled_Water_Supply_Flow_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Chilled_Water_Supply_Flow_Sensor ; brick:hasLocation bldg:Cinema ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the function of a Hazardous Materials Storage?\nentitybrick:Hazardous_Materials_Storage",
    "target_text": "SELECT ?definition WHERE { brick:Hazardous_Materials_Storage skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the function of a Core Temperature Setpoint?\nentitybrick:Core_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Core_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the real-time  PM1 particulate matter Level Sensor data from sensor 5.05.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the  PM10 particulate matter Level Sensor 5.03 set up?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.03",
    "target_text": "SELECT ?location WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor5.01's Ethyl Alcohol /C2H5CH  readings?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name assigned to the Min Cooling Discharge Air Flow Setpoint Limit.\nentitybrick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there any seasonal trend observable in the Ethyl Alcohol /C2H5CH sensor data for Sensor 5.04?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is 'Point' one of the tags for Supply Air Temperature Step Parameter?\nentitybrick:Supply_Air_Temperature_Step_Parameter",
    "target_text": "ASK WHERE { brick:Supply_Air_Temperature_Step_Parameter brick:hasAssociatedTag tag:Point . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Water Loop call itself?\nentitybrick:Water_Loop",
    "target_text": "SELECT ?label WHERE { brick:Water_Loop rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the recalibration and maintenance patterns for Formaldehyde Level sensor 5.01?\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.01 to compute an overall  Air Quality Level index.\nentitybldg:Air_Quality_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Steam_Usage_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the building chilled water supply temperature point for the chiller?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:chiller brick:hasPoint bldg:bldg1.CHW.Building_Chilled_Water_Supply_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Alternating Current Frequency measure?\nentitybrick:Alternating_Current_Frequency",
    "target_text": "SELECT ?definition WHERE { brick:Alternating_Current_Frequency skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the parent class for Photovoltaic Array.\nentitybrick:Photovoltaic_Array",
    "target_text": "SELECT ?parent WHERE { brick:Photovoltaic_Array rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Indicate the sensor type for  Alcohol Vapor MQ3 Gas Sensor  5.03.\nentitybldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Alcohol_Vapor_MQ3_Gas_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the inverse property for is associated with.\nentitybrick:isAssociatedWith",
    "target_text": "SELECT ?inverse WHERE { brick:isAssociatedWith owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of Bypass Air?\nentitybrick:Bypass_Air",
    "target_text": "SELECT ?definition WHERE { brick:Bypass_Air skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What role does the Maintenance Required Alarm play in equipment maintenance?\nentitybrick:Maintenance_Required_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Maintenance_Required_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Active Power include Real Power?\nentitybrick:Active_Power",
    "target_text": "ASK WHERE { brick:Active_Power owl:sameAs brick:Real_Power . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you analyze the recalibration frequency of Air Humidity Sensor 5.04 over the last month?\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are associated with the Exhaust Fan?\nentitybrick:Exhaust_Fan",
    "target_text": "SELECT ?tag WHERE { brick:Exhaust_Fan brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you list all associated tags for PM2.5 Sensor?\nentitybrick:PM2",
    "target_text": "SELECT ?tag WHERE { brick:PM2.5_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the broader category of Meter?\nentitybrick:Meter",
    "target_text": "SELECT ?parent WHERE { brick:Meter rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the definition for the Thermal Power Meter.\nentitybrick:Thermal_Power_Meter",
    "target_text": "SELECT ?definition WHERE { brick:Thermal_Power_Meter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the average zone heating mode command reading for RM107A for the last 24 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Heating_Mode ?p ?tsRef . ?tsRef a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the correlation coefficient between  Air Quality sensor and temperature in the area monitored by Sensor 5.02?\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is the outside air temperature measured in AHU02?\nentitybrick:hasPoint",
    "target_text": "SELECT ?point WHERE { bldg:AHU02 brick:hasPoint bldg:bldg1.AHU.AHU02.Outside_Air_Temp . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with RM115?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:RM115 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the category and related metadata for an Air Loop?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Air_Loop rdfs:subClassOf ?superclass . brick:Air_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Liquid Detection Alarm contribute to system safety?\nentitybrick:Liquid_Detection_Alarm",
    "target_text": "SELECT ?definition WHERE { brick:Liquid_Detection_Alarm skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much deviation is observed in the readings of Illuminance Sensor 5.02 compared to its normal range?\nentitybldg:Illuminance_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where are Jet Nozzle Air Diffusers used in a building?\nentitybrick:Jet_Nozzle_Air_Diffuser",
    "target_text": "SELECT ?diffuser WHERE { ?diffuser a brick:Jet_Nozzle_Air_Diffuser . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What quantity does Supply Air Flow Setpoint control?\nentitybrick:Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?quantity WHERE { brick:Supply_Air_Flow_Setpoint brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Leaving Water Temperature Sensor is a subclass of Water Temperature Sensor.\nentitybrick:Leaving_Water_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Leaving_Water_Temperature_Sensor rdfs:subClassOf brick:Water_Temperature_Sensor . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with an Air Loop?\nentitybrick:Air_Loop",
    "target_text": "SELECT ?tag WHERE { brick:Air_Loop brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Assess the sensor status of Air Quality sensor 5.04 based on its most recent data.\nentitybldg:Air_Quality_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which quantity is linked to the Torque Sensor?\nentitybrick:Torque_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Torque_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the exhaust air stack flow deadband setpoint in the floor1.\nentitybldg:floor1 \n brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint ; brick:hasLocation bldg:floor1 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Yo, can you check if Sensor 5.04 is keeping it real with our smart building air quality standards?\nentitybldg:Illuminance_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Illuminance_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you describe the Exhaust Air Stack Flow Proportional Band Parameter?\nentitybrick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you confirm if Water Flow Setpoint has the tag 'Setpoint'?\nentitybrick:Water_Flow_Setpoint",
    "target_text": "ASK WHERE { brick:Water_Flow_Setpoint brick:hasAssociatedTag tag:Setpoint . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the applicable units for Wind Direction.\nentitybrick:Wind_Direction",
    "target_text": "SELECT ?unit WHERE { brick:Wind_Direction qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Position Sensor?\nentitybrick:Position_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Position_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the cumulative change reported byFormaldehyde Level sensor 5.03 over the past week?\nentitybldg:Formaldehyde_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where's that Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.03 at?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?location WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what the Elevator Shaft is used for.\nentitybrick:Elevator_Shaft",
    "target_text": "SELECT ?definition WHERE { brick:Elevator_Shaft skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.31 located?\nentitybldg:mqtwo5.31",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.31 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone percent air flow status as measured in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Percent_Air_Flow ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied return air temperature setpoint in the Workshop.\nentitybldg:Workshop \n brick:Occupied_Return_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Return_Air_Temperature_Setpoint ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the rule set for the Return Air CO2 Setpoint.\nentitybrick:Return_Air_CO2_Setpoint",
    "target_text": "SELECT ?rule WHERE { brick:Return_Air_CO2_Setpoint sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Cooling Supply Air Flow Setpoint?\nentitybrick:Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Cooling_Supply_Air_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the superclass of the Formaldehyde Level Sensor?\nentitybrick:Formaldehyde_Level_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Formaldehyde_Level_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me the latest humidity reading from air humidity sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the title of PM2.5 particulate matter Level Sensor 5.01?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with AHU02?\nentitybrick:hasTag",
    "target_text": "SELECT ?tag WHERE { bldg:AHU02 brick:hasTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor  quality trends using TVOC  data from  TVOC  Sensor 5.01.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the assigned rdfs:label for Mass?\nentitybrick:Mass",
    "target_text": "SELECT ?label WHERE { brick:Mass rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the Discharge Air Flow Demand Setpoint function in air management?\nentitybrick:Discharge_Air_Flow_Demand_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Discharge_Air_Flow_Demand_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the filter water differential pressure sensor in the north west zone.\nentitybldg:north-west-zone \n brick:Filter_Water_Differential_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Filter_Water_Differential_Pressure_Sensor ; brick:hasLocation bldg:north-west-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me where  PM2.5 particulate matter Level Sensor 5.02 is located.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?location WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Valve Position Sensor.\nentitybrick:Valve_Position_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Valve_Position_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor 5.05  PM2.5 particulate matter Level Sensor level and is it within expected ranges?\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you show all details about the Overload Alarm?\nentitybrick:Overload_Alarm",
    "target_text": "SELECT ?property ?value WHERE { brick:Overload_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for the Steam System.\nentitybrick:Steam_System",
    "target_text": "SELECT ?tag WHERE { brick:Steam_System brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the tags for the Return Air Differential Pressure Sensor.\nentitybrick:Return_Air_Differential_Pressure_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Return_Air_Differential_Pressure_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a CO2 Alarm Sensitivity Parameter fit into?\nentitybrick:CO2_Alarm_Sensitivity_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:CO2_Alarm_Sensitivity_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of PM1Concentration?\nentitybrick:PM1_Concentration",
    "target_text": "SELECT ?label WHERE { brick:PM1_Concentration rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclasses for the Overridden On Status.\nentitybrick:Overridden_On_Status",
    "target_text": "SELECT ?parent WHERE { brick:Overridden_On_Status rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the official name of  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.02?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02",
    "target_text": "SELECT ?label WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.02 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Find the equivalent class for Cooling Supply Air Flow Setpoint.\nentitybrick:Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?equiv WHERE { brick:Cooling_Supply_Air_Flow_Setpoint owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.60 located?\nentitybldg:mqtwo5.60",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.60 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the definition for the Return Air Humidity Setpoint?\nentitybrick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Return_Air_Humidity_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Count the total number of triples describing the Entering Condenser Water Temperature Setpoint.\nentitybrick:Entering_Condenser_Water_Temperature_Setpoint",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Entering_Condenser_Water_Temperature_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which units can be used to measure complex power?\nentitybrick:Complex_Power",
    "target_text": "SELECT ?unit WHERE { brick:Complex_Power qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Static Pressure Setpoint Limit?\nentitybrick:Static_Pressure_Setpoint_Limit",
    "target_text": "SELECT ?tag WHERE { brick:Static_Pressure_Setpoint_Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide any rule-based requirements for an Ammonia Sensor?\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?rule WHERE { brick:Ammonia_Sensor sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is Preheat Discharge Air Temperature Sensor labeled?\nentitybrick:Preheat_Discharge_Air_Temperature_Sensor",
    "target_text": "SELECT ?label WHERE { brick:Preheat_Discharge_Air_Temperature_Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the highest zone air temperature reading for RM107A from the last 2 hours.\nentitybldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107A.Zone_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the parallel class for the Heating Discharge Air Temperature Proportional Band Parameter.\nentitybrick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter",
    "target_text": "SELECT ?equiv WHERE { brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor category for   CO2  Sensor 5.04?\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?type WHERE { bldg:CO2_Level_Sensor_5.04 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How much CO  is recorded by sensor5.05 right now?\nentitybldg:CO_Level_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the occupied cooling supply air flow setpoint in the Reception.\nentitybldg:Reception \n brick:Occupied_Cooling_Supply_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Occupied_Cooling_Supply_Air_Flow_Setpoint ; brick:hasLocation bldg:Reception ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Compute the air quality index for the lobby area using Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.01.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is assigned to the Steam On Off Command?\nentitybrick:Steam_On_Off_Command",
    "target_text": "SELECT ?label WHERE { brick:Steam_On_Off_Command rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags does Network Video Recorder have?\nentitybrick:Network_Video_Recorder",
    "target_text": "SELECT ?tag WHERE { brick:Network_Video_Recorder brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which property is isLocationOf a sub-property of?\nentitybrick:isLocationOf",
    "target_text": "SELECT ?parent WHERE { brick:isLocationOf rdfs:subPropertyOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Ethyl Alcohol /C2H5CH readings from Sensor 5.01?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me a full RDF description for Mixed Air.\nentitybrick:Mixed_Air",
    "target_text": "DESCRIBE brick:Mixed_Air\nWHERE { brick:Mixed_Air ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags are linked to Occupancy Status?\nentitybrick:Occupancy_Status",
    "target_text": "SELECT ?tag WHERE { brick:Occupancy_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Loop represent?\nentitybrick:Loop",
    "target_text": "SELECT ?definition WHERE { brick:Loop skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which data points does the Illuminance Sensor define in BrickSchema?\nentitybrick:Illuminance_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Illuminance_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide details of the current zone reheat valve command for RM107B.\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Reheat_Valve_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied cooling discharge air flow setpoint in the Pool.\nentitybldg:Pool \n brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint ; brick:hasLocation bldg:Pool ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Formaldehyde Level sensor readings from Sensor 5.04?\nentitybldg:Formaldehyde_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to VAV?\nentitybrick:VAV",
    "target_text": "SELECT ?equiv WHERE { brick:VAV owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is a Condensate Leak Alarm a subclass of another alarm type?\nentitybrick:Condensate_Leak_Alarm",
    "target_text": "SELECT ?superclass WHERE { brick:Condensate_Leak_Alarm rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the qudt:hasDimensionVector value for Radiant Temperature?\nentitybrick:Radiant_Temperature",
    "target_text": "SELECT ?dimension WHERE { brick:Radiant_Temperature qudt:hasDimensionVector ?dimension . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Are there any anomalies in sensor 5.03's  Air Quality sensor readings?\nentitybldg:Air_Quality_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Identify the higher-level category for Enable Command.\nentitybrick:Enable_Command",
    "target_text": "SELECT ?parent WHERE { brick:Enable_Command rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which tags define an Ammonia Sensor?\nentitybrick:Ammonia_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Ammonia_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is there another name associated with the Discharge Air Proportional Gain Parameter?\nentitybrick:Discharge_Air_Proportional_Gain_Parameter",
    "target_text": "SELECT ?alias WHERE { brick:Discharge_Air_Proportional_Gain_Parameter brick:aliasOf ?alias . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which classification tags are linked to a chilled water meter?\nentitybrick:Chilled_Water_Meter",
    "target_text": "SELECT ?tag WHERE { brick:Chilled_Water_Meter brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What tags are associated with Zone Air Temperature Sensor?\nentitybrick:Zone_Air_Temperature_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Zone_Air_Temperature_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Sensor?\nentitybrick:Sensor",
    "target_text": "SELECT ?label WHERE { brick:Sensor rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Could you analyze the periodicity of Combustible Gas Smoke MQ2 Sensor  fluctuations recorded by Sensor 5.01?\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the associated tags of the PM1 Level Sensor.\nentitybrick:PM1_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:PM1_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the latest measurement from  LPG Natural Gas Town MQ5 Gas Sensor  Sensor 5.01.\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Energy System represent?\nentitybrick:Energy_System",
    "target_text": "SELECT ?definition WHERE { brick:Energy_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the latest TVOC  measurement from TVOC  Sensor 5.01.\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the variance and standard deviation of Formaldehyde Level sensor readings from Sensor 5.02?\nentitybldg:Formaldehyde_Level_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the inverse of hasAssociatedTag?\nentitybrick:hasAssociatedTag",
    "target_text": "SELECT ?inverse WHERE { brick:hasAssociatedTag owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the associated tags for a space.\nentitybrick:Space",
    "target_text": "SELECT ?tag WHERE { brick:Space brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the relationship between an AHU and an air distribution system?\nentitybrick:AHU",
    "target_text": "ASK WHERE { brick:AHU skos:definition ?def . FILTER(CONTAINS(LCASE(STR(?def)), \"air-distribution system\")) }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the maximum and minimum Temperature recorded by Sensor 5.03 last week?\nentitybldg:Air_Temperature_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How do the TVOC  readings from Sensor 5.01 help in predicting potential failures or recalibration needs?\nentitybldg:TVOC_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of System?\nentitybrick:System",
    "target_text": "SELECT ?label WHERE { brick:System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which property is the inverse of 'feeds'?\nentitybrick:feeds",
    "target_text": "SELECT ?inverse WHERE { brick:feeds owl:inverseOf ?inverse . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where in the crib is Sound Noise loudness Sensor  5.02 located?\nentitybldg:Sound_Noise_Sensor_MEMS_5.02",
    "target_text": "SELECT ?location WHERE { bldg:Sound_Noise_Sensor_MEMS_5.02 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current reading of sensor5.01 regarding Ethyl Alcohol /C2H5CH?\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are all the triples associated with Electric Power?\nentitybrick:Electric_Power",
    "target_text": "SELECT ?property ?value WHERE { brick:Electric_Power ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide a detailed report of return air temperature occurrences for AHU 01 for today?\nentitybldg:bldg1.AHU.AHU01.Return_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Return_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does the Ventilation Air System represent?\nentitybrick:Ventilation_Air_System",
    "target_text": "SELECT ?definition WHERE { brick:Ventilation_Air_System skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the label and definition of the Warm Cool Adjust Sensor.\nentitybrick:Warm_Cool_Adjust_Sensor",
    "target_text": "SELECT ?label ?definition WHERE { brick:Warm_Cool_Adjust_Sensor rdfs:label ?label . brick:Warm_Cool_Adjust_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the label of the Return Fan?\nentitybrick:Return_Fan",
    "target_text": "SELECT ?label WHERE { brick:Return_Fan rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the associated tags for the Zone CO2 Level Sensor.\nentitybrick:Zone_CO2_Level_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Zone_CO2_Level_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Aggregate the sensor data from Sensor 5.05 to compute an overall Combustible Gas Smoke MQ2 Sensor  index.\nentitybldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Combustible_Gas_Smoke_MQ2_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What markers describe Limit?\nentitybrick:Limit",
    "target_text": "SELECT (GROUP_CONCAT(DISTINCT ?tag; separator=\", \") AS ?tags) WHERE { brick:Limit brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas reading from Sensor 5.03?\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the full metadata set for a Chilled Water Discharge Flow Sensor?\nentitybrick:Chilled_Water_Discharge_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Chilled_Water_Discharge_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the current control command for the zone air damper in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show the sensor class that PM2.5 particulate matter Level Sensor 5.02 falls under.\nentitybldg:PM2.5_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM2.5_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is the Lockout Temperature Differential Parameter a subclass of any BrickSchema classes?\nentitybrick:Lockout_Temperature_Differential_Parameter",
    "target_text": "SELECT ?superclass WHERE { brick:Lockout_Temperature_Differential_Parameter rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: When is the Heating Thermal Power Sensor used?\nentitybrick:Heating_Thermal_Power_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Heating_Thermal_Power_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How does the sensor deviation of  PM1 particulate matter Level Sensor 5.01 compare to our baseline standards?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which unit is assigned to Tilt?\nentitybrick:tilt",
    "target_text": "SELECT ?unit WHERE { brick:tilt qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the air differential pressure setpoint in the Auditorium.\nentitybldg:Auditorium \n brick:Air_Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Air_Differential_Pressure_Setpoint ; brick:hasLocation bldg:Auditorium ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Check if Service Room is a subclass of Room.\nentitybrick:Service_Room",
    "target_text": "ASK WHERE { brick:Service_Room rdfs:subClassOf brick:Room . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what System Enable Command means.\nentitybrick:System_Enable_Command",
    "target_text": "SELECT ?definition WHERE { brick:System_Enable_Command skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What improvements can be suggested based on the long-term  PM10 particulate matter Level Sensor trends from Sensor 5.01?\nentitybldg:PM10_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:PM10_Level_Sensor_Atmospheric_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide the designated label for  Air Humidity Sensor 5.04.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?label WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Min Limit?\nentitybrick:Min_Limit",
    "target_text": "SELECT ?label WHERE { brick:Min_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the name of Unoccupied Air Temperature Setpoint?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Unoccupied_Air_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define the Portfolio.\nentitybrick:Portfolio",
    "target_text": "SELECT ?definition WHERE { brick:Portfolio skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the measurements fromFormaldehyde Level sensor 5.01 over the past 24 hours.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Explain what Humidity Parameter means.\nentitybrick:Humidity_Parameter",
    "target_text": "SELECT ?definition WHERE { brick:Humidity_Parameter skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give me a complete description of Humidity.\nentitybrick:Humidity",
    "target_text": "DESCRIBE brick:Humidity\nWHERE { brick:Humidity ?p ?o . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the active command state for the zone air damper in RM110?\nentitybldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU02.RM110.Zone_Air_Damper_Command ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the title of Leaving Water Temperature Setpoint?\nentitybrick:Leaving_Water_Temperature_Setpoint",
    "target_text": "SELECT ?label WHERE { brick:Leaving_Water_Temperature_Setpoint rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is hcho5.56 located?\nentitybldg:hcho5.56",
    "target_text": "SELECT ?location WHERE { bldg:hcho5.56 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Entering Domestic Hot Water Temperature Setpoint?\nentitybrick:Entering_Domestic_Hot_Water_Temperature_Setpoint",
    "target_text": "SELECT ?tag WHERE { brick:Entering_Domestic_Hot_Water_Temperature_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the display name for Year Built?\nentitybrick:yearBuilt",
    "target_text": "SELECT ?label WHERE { brick:yearBuilt rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Verify if Building has a label.\nentitybrick:Building",
    "target_text": "ASK { brick:Building rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Locate the air humidity sensor 5.04 and show its sensor name.\nentitybldg:Zone_Air_Humidity_Sensor_5.04",
    "target_text": "SELECT ?label ?location WHERE { bldg:Zone_Air_Humidity_Sensor_5.04 rdfs:label ?label . bldg:Zone_Air_Humidity_Sensor_5.04 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you tell me the label of Temperature Step Parameter?\nentitybrick:Temperature_Step_Parameter",
    "target_text": "SELECT ?label WHERE { brick:Temperature_Step_Parameter rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need to know the sensor category ofSound Noise loudness Sensor  5.05.\nentitybldg:Sound_Noise_Sensor_MEMS_5.05",
    "target_text": "SELECT ?type WHERE { bldg:Sound_Noise_Sensor_MEMS_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List every possible property associated with a Battery Voltage Sensor.\nentitybrick:Battery_Voltage_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Battery_Voltage_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags linked to the Occupancy Sensor.\nentitybrick:Occupancy_Sensor",
    "target_text": "SELECT ?tag WHERE { brick:Occupancy_Sensor brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the discharge air velocity pressure sensor in the Floor4.\nentitybldg:Floor4 \n brick:Discharge_Air_Velocity_Pressure_Sensor",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Discharge_Air_Velocity_Pressure_Sensor ; brick:hasLocation bldg:Floor4 ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the units defined for Pressure measurement.\nentitybrick:Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Under which classification does a Basement fall?\nentitybrick:Basement",
    "target_text": "SELECT ?superclass WHERE { brick:Basement rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Unoccupied Air Temperature Setpoint represent?\nentitybrick:Unoccupied_Air_Temperature_Setpoint",
    "target_text": "SELECT ?definition WHERE { brick:Unoccupied_Air_Temperature_Setpoint skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Define 'Differential Speed Sensor'.\nentitybrick:Differential_Speed_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Differential_Speed_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the name of Position Limit?\nentitybrick:Position_Limit",
    "target_text": "SELECT ?label WHERE { brick:Position_Limit rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which metadata tags describe a Cold Box?\nentitybrick:Cold_Box",
    "target_text": "SELECT ?tag WHERE { brick:Cold_Box brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me what Switch is called.\nentitybrick:Switch",
    "target_text": "SELECT ?label WHERE { brick:Switch rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the unoccupied heating mode status in the Study Room.\nentitybldg:Study_Room \n brick:Unoccupied_Heating_Mode_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Unoccupied_Heating_Mode_Status ; brick:hasLocation bldg:Study_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the temperature deadband setpoint in the Utility Room.\nentitybldg:Utility_Room \n brick:Temperature_Deadband_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Temperature_Deadband_Setpoint ; brick:hasLocation bldg:Utility_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the current  Air Quality Level reading from Sensor 5.04?\nentitybldg:Air_Quality_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What's the current humidity value from sensor 5.05?\nentitybldg:Zone_Air_Humidity_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Zone_Air_Humidity_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the minimum supply air temperature value from AHU 01 in the last 30 minutes?\nentitybldg:bldg1.AHU.AHU01.Supply_Air_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.AHU.AHU01.Supply_Air_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: List the superclass for the Open Heating Valve Outside Air Temperature Setpoint.\nentitybrick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint",
    "target_text": "SELECT ?parent WHERE { brick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Display the zone air control temperature setpoint for RM120.\nentitybldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM120.Zone_Air_Control_Temp ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is a Condenser Water Isolation Valve labeled in the ontology?\nentitybrick:Condenser_Water_Isolation_Valve",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Water_Isolation_Valve rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the associated quantity for the Outside Air CO Sensor?\nentitybrick:Outside_Air_CO_Sensor",
    "target_text": "SELECT ?quantity WHERE { brick:Outside_Air_CO_Sensor brick:hasQuantity ?quantity . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the latest configuration of the zone air temperature setpoint in RM115.\nentitybldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM115.Zone_Air_Temp_Setpoint ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide a trend analysis of Ethyl Alcohol /C2H5CH readings from Sensor 5.04 for sustainability reporting.\nentitybldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Ethyl_Alcohol_C2H5CH_Gas_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the sensor output for  Air Quality sensor from sensor 5.02.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What does Pressure Sensor represent?\nentitybrick:Pressure_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Pressure_Sensor skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve the tags for Hot Water Valve.\nentitybrick:Hot_Water_Valve",
    "target_text": "SELECT ?tag WHERE { brick:Hot_Water_Valve brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the switch status in the Workshop.\nentitybldg:Workshop \n brick:Switch_Status",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Switch_Status ; brick:hasLocation bldg:Workshop ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the current sensor output for  CO2  Sensor 5.03.\nentitybldg:CO2_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Analyze the indoor air quality trends using  Air Quality sensor data from Sensor 5.02.\nentitybldg:Air_Quality_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Quality_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the return air humidity setpoint in the north east zone.\nentitybldg:north-east-zone \n brick:Return_Air_Humidity_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Return_Air_Humidity_Setpoint ; brick:hasLocation bldg:north-east-zone ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What metadata tags describe the Emergency Air Flow System Status?\nentitybrick:Emergency_Air_Flow_System_Status",
    "target_text": "SELECT ?tag WHERE { brick:Emergency_Air_Flow_System_Status brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent CO  measurement from sensor 5.04, please.\nentitybldg:CO_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the sensor type associated with PM1 particulate matter Level Sensor 5.02?\nentitybldg:PM1_Level_Sensor_Atmospheric_5.02",
    "target_text": "SELECT ?type WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the real-time zone heating mode command value for RM107B right now?\nentitybldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode",
    "target_text": "SELECT ?timeseriesId WHERE { bldg:bldg1.ZONE.AHU01.RM107B.Zone_Heating_Mode ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What constraints apply to a Chilled Water Differential Pressure Step Parameter?\nentitybrick:Chilled_Water_Differential_Pressure_Step_Parameter",
    "target_text": "SELECT ?rule WHERE { brick:Chilled_Water_Differential_Pressure_Step_Parameter sh:rule ?rule . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Where is mqtwo5.23 located?\nentitybldg:mqtwo5.23",
    "target_text": "SELECT ?location WHERE { bldg:mqtwo5.23 brick:hasLocation ?location . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about an Absorption Chiller.\nentitybrick:Absorption_Chiller",
    "target_text": "SELECT ?property ?value WHERE { brick:Absorption_Chiller ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Does Return Air Temperature Sensor include the tag 'Return'?\nentitybrick:Return_Air_Temperature_Sensor",
    "target_text": "ASK WHERE { brick:Return_Air_Temperature_Sensor brick:hasAssociatedTag tag:Return . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the subcategories of Speed?\nentitybrick:Speed",
    "target_text": "SELECT ?narrower WHERE { brick:Speed skos:narrower ?narrower . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Determine the sensor class for  Air Humidity Sensor 5.03.\nentitybldg:Zone_Air_Humidity_Sensor_5.03",
    "target_text": "SELECT ?type WHERE { bldg:Zone_Air_Humidity_Sensor_5.03 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Retrieve all properties of the On Command.\nentitybrick:On_Command",
    "target_text": "SELECT ?property ?value WHERE { brick:On_Command ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which broader category does a Building Air Static Pressure Sensor fit into?\nentitybrick:Building_Air_Static_Pressure_Sensor",
    "target_text": "SELECT ?superclass WHERE { brick:Building_Air_Static_Pressure_Sensor rdfs:subClassOf ?superclass . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which label is used for the Electrical System?\nentitybrick:Electrical_System",
    "target_text": "SELECT ?label WHERE { brick:Electrical_System rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me how many attributes the Low Air Flow Alarm has in BrickSchema.\nentitybrick:Low_Air_Flow_Alarm",
    "target_text": "SELECT (COUNT(?property) AS ?propCount) WHERE { brick:Low_Air_Flow_Alarm ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Give an analytics report on CO2  Sensor 5.04's performance compared to industry benchmarks.\nentitybldg:CO2_Level_Sensor_5.04",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:CO2_Level_Sensor_5.04 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide the parent class for Water Flow Sensor?\nentitybrick:Water_Flow_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Water_Flow_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you provide both the category and tags for a Bypass Water Flow Setpoint?\nentitybrick:Bypass_Water_Flow_Setpoint",
    "target_text": "SELECT ?superclass ?tag WHERE { brick:Bypass_Water_Flow_Setpoint rdfs:subClassOf ?superclass . brick:Bypass_Water_Flow_Setpoint brick:hasAssociatedTag ?tag . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me an analysis of the sensor status for temperature Sensor 5.05 and its reliability trends.\nentitybldg:Air_Temperature_Sensor_5.05",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.05 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the human-readable label for a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?label WHERE { brick:Condenser_Heat_Exchanger rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Provide all available information about a Condenser Water Flow Setpoint.\nentitybrick:Condenser_Water_Flow_Setpoint",
    "target_text": "SELECT ?property ?value WHERE { brick:Condenser_Water_Flow_Setpoint ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: How is the Fire Alarm Manual Call Point described in the ontology?\nentitybrick:Fire_Alarm_Manual_Call_Point",
    "target_text": "SELECT ?definition WHERE { brick:Fire_Alarm_Manual_Call_Point skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What units does Differential Static Pressure support?\nentitybrick:Differential_Static_Pressure",
    "target_text": "SELECT ?unit WHERE { brick:Differential_Static_Pressure qudt:applicableUnit ?unit . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which properties define the Entering Hot Water Flow Sensor?\nentitybrick:Entering_Hot_Water_Flow_Sensor",
    "target_text": "SELECT ?property ?value WHERE { brick:Entering_Hot_Water_Flow_Sensor ?property ?value . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Show me the broader quantity types associated with Differential Static Pressure.\nentitybrick:Differential_Static_Pressure",
    "target_text": "SELECT ?broader WHERE { brick:Differential_Static_Pressure skos:broader ?broader . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is a Condenser Heat Exchanger?\nentitybrick:Condenser_Heat_Exchanger",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Heat_Exchanger skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: I need the name of PM1 particulate matter Level Sensor 5.01, please.\nentitybldg:PM1_Level_Sensor_Atmospheric_5.01",
    "target_text": "SELECT ?label WHERE { bldg:PM1_Level_Sensor_Atmospheric_5.01 rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: From which class does the Voltage Imbalance Sensor inherit?\nentitybrick:Voltage_Imbalance_Sensor",
    "target_text": "SELECT ?parent WHERE { brick:Voltage_Imbalance_Sensor rdfs:subClassOf ?parent . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Reveal the sensor type for  Carbon Monoxide Coal Gas Liquefied gas MQ9 Gas 5.02.\nentitybldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02",
    "target_text": "SELECT ?type WHERE { bldg:Carbon_Monoxide_Coal_Gas_Liquefied_MQ9_Gas_Sensor_5.02 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Can you define a computer room air conditioning unit?\nentitybrick:CRAC",
    "target_text": "SELECT ?definition WHERE { brick:CRAC rdfs:label ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What sensor is  LPG Natural Gas Town MQ5 Gas Sensor  Sensor Sensor 5.05?\nentitybldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05",
    "target_text": "SELECT ?type WHERE { bldg:LPG_Natural_Gas_Town_MQ5_Gas_Sensor_5.05 a ?type . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Is Heat Exchanger a subclass of HVAC Equipment?\nentitybrick:Heat_Exchanger",
    "target_text": "ASK WHERE { brick:Heat_Exchanger rdfs:subClassOf brick:HVAC_Equipment . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Tell me the name or label  of the differential pressure setpoint in the Supply Room.\nentitybldg:Supply_Room \n brick:Differential_Pressure_Setpoint",
    "target_text": "SELECT ?label WHERE { ?sensor a brick:Differential_Pressure_Setpoint ; brick:hasLocation bldg:Supply_Room ; rdfs:label ?label . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What are the main responsibilities of an air handling unit?\nentitybrick:AHU",
    "target_text": "SELECT ?function WHERE { brick:AHU skos:definition ?function . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Which class is equivalent to Rooftop Unit?\nentitybrick:Rooftop_Unit",
    "target_text": "SELECT ?equiv WHERE { brick:Rooftop_Unit owl:equivalentClass ?equiv . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Fetch the most recent TVOC  measurement from sensor 5.03, please.\nentitybldg:TVOC_Level_Sensor_5.03",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:TVOC_Level_Sensor_5.03 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Detect any anomalies in the Formaldehyde Level sensor 5.01 readings from yesterday.\nentitybldg:Formaldehyde_Level_Sensor_5.01",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Formaldehyde_Level_Sensor_5.01 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: Examine whether periodic maintenance affects the readings of Sensor 5.02.\nentitybldg:Air_Temperature_Sensor_5.02",
    "target_text": "SELECT ?timeseriesId ?storedAt WHERE { bldg:Air_Temperature_Sensor_5.02 ref:hasExternalReference ?ref . ?ref a ref:TimeseriesReference ; ref:hasTimeseriesId ?timeseriesId ; ref:storedAt ?storedAt . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the purpose of a Condenser Water Valve?\nentitybrick:Condenser_Water_Valve",
    "target_text": "SELECT ?definition WHERE { brick:Condenser_Water_Valve skos:definition ?definition . }"
  },
  {
    "input_text": "task: generate_SPARQL\ninput: What is the definition of the Steam Usage Sensor?\nentitybrick:Steam_Usage_Sensor",
    "target_text": "SELECT ?definition WHERE { brick:Steam_Usage_Sensor skos:definition ?definition . }"
  }
]